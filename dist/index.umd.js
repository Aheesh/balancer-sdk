!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@ethersproject/abi"),require("@ethersproject/constants"),require("@ethersproject/bignumber"),require("@ethersproject/address"),require("@ethersproject/bytes"),require("@ethersproject/abstract-signer"),require("@ethersproject/contracts"),require("lodash"),require("@balancer-labs/sor"),require("@balancer-labs/typechain"),require("@ethersproject/providers"),require("graphql-request"),require("graphql"),require("axios"),require("json-to-graphql-query")):"function"==typeof define&&define.amd?define(["exports","@ethersproject/abi","@ethersproject/constants","@ethersproject/bignumber","@ethersproject/address","@ethersproject/bytes","@ethersproject/abstract-signer","@ethersproject/contracts","lodash","@balancer-labs/sor","@balancer-labs/typechain","@ethersproject/providers","graphql-request","graphql","axios","json-to-graphql-query"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["balancer-js"]={},e.abi,e.constants,e.bignumber,e.address,e.bytes,e.abstractSigner,e.contracts,e.lodash,e.sor,e.typechain,e.providers,e.graphqlRequest,e.graphql,e.axios,e.jsonToGraphqlQuery)}(this,(function(e,t,a,n,s,i,r,o,d,p,l,u,c,y,m,b){"use strict";function h(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function f(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(a){if("default"!==a){var n=Object.getOwnPropertyDescriptor(e,a);Object.defineProperty(t,a,n.get?n:{enumerable:!0,get:function(){return e[a]}})}})),t.default=e,Object.freeze(t)}var T,I,g,w,E,S=f(p),_=h(m);e.StablePoolJoinKind=void 0,(T=e.StablePoolJoinKind||(e.StablePoolJoinKind={}))[T.INIT=0]="INIT",T[T.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",T[T.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",e.StablePhantomPoolJoinKind=void 0,(I=e.StablePhantomPoolJoinKind||(e.StablePhantomPoolJoinKind={}))[I.INIT=0]="INIT",I[I.COLLECT_PROTOCOL_FEES=1]="COLLECT_PROTOCOL_FEES",e.StablePoolExitKind=void 0,(g=e.StablePoolExitKind||(e.StablePoolExitKind={}))[g.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",g[g.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",g[g.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT";class A{constructor(){}}A.joinInit=a=>t.defaultAbiCoder.encode(["uint256","uint256[]"],[e.StablePoolJoinKind.INIT,a]),A.joinCollectProtocolFees=()=>t.defaultAbiCoder.encode(["uint256"],[e.StablePhantomPoolJoinKind.COLLECT_PROTOCOL_FEES]),A.joinExactTokensInForBPTOut=(a,n)=>t.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[e.StablePoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,a,n]),A.joinTokenInForExactBPTOut=(a,n)=>t.defaultAbiCoder.encode(["uint256","uint256","uint256"],[e.StablePoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,a,n]),A.exitExactBPTInForOneTokenOut=(a,n)=>t.defaultAbiCoder.encode(["uint256","uint256","uint256"],[e.StablePoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,a,n]),A.exitExactBPTInForTokensOut=a=>t.defaultAbiCoder.encode(["uint256","uint256"],[e.StablePoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT,a]),A.exitBPTInForExactTokensOut=(a,n)=>t.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[e.StablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,a,n]),e.WeightedPoolJoinKind=void 0,(w=e.WeightedPoolJoinKind||(e.WeightedPoolJoinKind={}))[w.INIT=0]="INIT",w[w.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",w[w.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",w[w.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT=3]="ALL_TOKENS_IN_FOR_EXACT_BPT_OUT",e.WeightedPoolExitKind=void 0,(E=e.WeightedPoolExitKind||(e.WeightedPoolExitKind={}))[E.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",E[E.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",E[E.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT",E[E.MANAGEMENT_FEE_TOKENS_OUT=3]="MANAGEMENT_FEE_TOKENS_OUT";class x{constructor(){}}x.joinInit=a=>t.defaultAbiCoder.encode(["uint256","uint256[]"],[e.WeightedPoolJoinKind.INIT,a]),x.joinExactTokensInForBPTOut=(a,n)=>t.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[e.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,a,n]),x.joinTokenInForExactBPTOut=(a,n)=>t.defaultAbiCoder.encode(["uint256","uint256","uint256"],[e.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,a,n]),x.joinAllTokensInForExactBPTOut=a=>t.defaultAbiCoder.encode(["uint256","uint256"],[e.WeightedPoolJoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT,a]),x.exitExactBPTInForOneTokenOut=(a,n)=>t.defaultAbiCoder.encode(["uint256","uint256","uint256"],[e.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,a,n]),x.exitExactBPTInForTokensOut=a=>t.defaultAbiCoder.encode(["uint256","uint256"],[e.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT,a]),x.exitBPTInForExactTokensOut=(a,n)=>t.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[e.WeightedPoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,a,n]);class O{constructor(){}}O.exitForManagementFees=()=>t.defaultAbiCoder.encode(["uint256"],[e.WeightedPoolExitKind.MANAGEMENT_FEE_TOKENS_OUT]);var P,N;e.ComposableStablePoolJoinKind=void 0,(P=e.ComposableStablePoolJoinKind||(e.ComposableStablePoolJoinKind={}))[P.INIT=0]="INIT",P[P.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",P[P.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",e.ComposableStablePoolExitKind=void 0,(N=e.ComposableStablePoolExitKind||(e.ComposableStablePoolExitKind={}))[N.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",N[N.BPT_IN_FOR_EXACT_TOKENS_OUT=1]="BPT_IN_FOR_EXACT_TOKENS_OUT";class B{constructor(){}}B.joinInit=a=>t.defaultAbiCoder.encode(["uint256","uint256[]"],[e.ComposableStablePoolJoinKind.INIT,a]),B.joinCollectProtocolFees=()=>t.defaultAbiCoder.encode(["uint256"],[e.StablePhantomPoolJoinKind.COLLECT_PROTOCOL_FEES]),B.joinExactTokensInForBPTOut=(a,n)=>t.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[e.ComposableStablePoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,a,n]),B.joinTokenInForExactBPTOut=(a,n)=>t.defaultAbiCoder.encode(["uint256","uint256","uint256"],[e.ComposableStablePoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,a,n]),B.exitExactBPTInForOneTokenOut=(a,n)=>t.defaultAbiCoder.encode(["uint256","uint256","uint256"],[e.ComposableStablePoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,a,n]),B.exitBPTInForExactTokensOut=(a,n)=>t.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[e.ComposableStablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,a,n]);var k="production"===process.env.NODE_ENV,v="Invariant failed";function C(e,t){if(!e){if(k)throw new Error(v);var a="function"==typeof t?t():t;throw new Error(a?v+": "+a:v)}}const R=e=>(C(66===e.length,"Invalid poolId length"),e.slice(0,42)),D=e=>{C(66===e.length,"Invalid poolId length");const t=parseInt(e[45]);return C(t<3,"Invalid pool specialization"),t},M=e=>(C(66===e.length,"Invalid poolId length"),n.BigNumber.from(`0x${e.slice(46)}`)),F={"000":"ADD_OVERFLOW","001":"SUB_OVERFLOW","002":"SUB_UNDERFLOW","003":"MUL_OVERFLOW","004":"ZERO_DIVISION","005":"DIV_INTERNAL","006":"X_OUT_OF_BOUNDS","007":"Y_OUT_OF_BOUNDS","008":"PRODUCT_OUT_OF_BOUNDS","009":"INVALID_EXPONENT",100:"OUT_OF_BOUNDS",101:"UNSORTED_ARRAY",102:"UNSORTED_TOKENS",103:"INPUT_LENGTH_MISMATCH",104:"ZERO_TOKEN",200:"MIN_TOKENS",201:"MAX_TOKENS",202:"MAX_SWAP_FEE_PERCENTAGE",203:"MIN_SWAP_FEE_PERCENTAGE",204:"MINIMUM_BPT",205:"CALLER_NOT_VAULT",206:"UNINITIALIZED",207:"BPT_IN_MAX_AMOUNT",208:"BPT_OUT_MIN_AMOUNT",209:"EXPIRED_PERMIT",210:"NOT_TWO_TOKENS",211:"DISABLED",300:"MIN_AMP",301:"MAX_AMP",302:"MIN_WEIGHT",303:"MAX_STABLE_TOKENS",304:"MAX_IN_RATIO",305:"MAX_OUT_RATIO",306:"MIN_BPT_IN_FOR_TOKEN_OUT",307:"MAX_OUT_BPT_FOR_TOKEN_IN",308:"NORMALIZED_WEIGHT_INVARIANT",309:"INVALID_TOKEN",310:"UNHANDLED_JOIN_KIND",311:"ZERO_INVARIANT",312:"ORACLE_INVALID_SECONDS_QUERY",313:"ORACLE_NOT_INITIALIZED",314:"ORACLE_QUERY_TOO_OLD",315:"ORACLE_INVALID_INDEX",316:"ORACLE_BAD_SECS",317:"AMP_END_TIME_TOO_CLOSE",318:"AMP_ONGOING_UPDATE",319:"AMP_RATE_TOO_HIGH",320:"AMP_NO_ONGOING_UPDATE",321:"STABLE_INVARIANT_DIDNT_CONVERGE",322:"STABLE_GET_BALANCE_DIDNT_CONVERGE",323:"RELAYER_NOT_CONTRACT",324:"BASE_POOL_RELAYER_NOT_CALLED",325:"REBALANCING_RELAYER_REENTERED",326:"GRADUAL_UPDATE_TIME_TRAVEL",327:"SWAPS_DISABLED",328:"CALLER_IS_NOT_LBP_OWNER",329:"PRICE_RATE_OVERFLOW",330:"INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED",331:"WEIGHT_CHANGE_TOO_FAST",332:"LOWER_GREATER_THAN_UPPER_TARGET",333:"UPPER_TARGET_TOO_HIGH",334:"UNHANDLED_BY_LINEAR_POOL",335:"OUT_OF_TARGET_RANGE",336:"UNHANDLED_EXIT_KIND ",337:"UNAUTHORIZED_EXIT",338:"MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE",339:"UNHANDLED_BY_MANAGED_POOL",340:"UNHANDLED_BY_PHANTOM_POOL",341:"TOKEN_DOES_NOT_HAVE_RATE_PROVIDER",342:"INVALID_INITIALIZATION",343:"OUT_OF_NEW_TARGET_RANGE",344:"UNAUTHORIZED_OPERATION",345:"UNINITIALIZED_POOL_CONTROLLER",400:"REENTRANCY",401:"SENDER_NOT_ALLOWED",402:"PAUSED",403:"PAUSE_WINDOW_EXPIRED",404:"MAX_PAUSE_WINDOW_DURATION",405:"MAX_BUFFER_PERIOD_DURATION",406:"INSUFFICIENT_BALANCE",407:"INSUFFICIENT_ALLOWANCE",408:"ERC20_TRANSFER_FROM_ZERO_ADDRESS",409:"ERC20_TRANSFER_TO_ZERO_ADDRESS",410:"ERC20_MINT_TO_ZERO_ADDRESS",411:"ERC20_BURN_FROM_ZERO_ADDRESS",412:"ERC20_APPROVE_FROM_ZERO_ADDRESS",413:"ERC20_APPROVE_TO_ZERO_ADDRESS",414:"ERC20_TRANSFER_EXCEEDS_ALLOWANCE",415:"ERC20_DECREASED_ALLOWANCE_BELOW_ZERO",416:"ERC20_TRANSFER_EXCEEDS_BALANCE",417:"ERC20_BURN_EXCEEDS_ALLOWANCE",418:"SAFE_ERC20_CALL_FAILED",419:"ADDRESS_INSUFFICIENT_BALANCE",420:"ADDRESS_CANNOT_SEND_VALUE",421:"SAFE_CAST_VALUE_CANT_FIT_INT256",422:"GRANT_SENDER_NOT_ADMIN",423:"REVOKE_SENDER_NOT_ADMIN",424:"RENOUNCE_SENDER_NOT_ALLOWED",425:"BUFFER_PERIOD_EXPIRED",426:"CALLER_IS_NOT_OWNER",427:"NEW_OWNER_IS_ZERO",428:"CODE_DEPLOYMENT_FAILED",429:"CALL_TO_NON_CONTRACT",430:"LOW_LEVEL_CALL_FAILED",431:"NOT_PAUSED",432:"ADDRESS_ALREADY_ALLOWLISTED",433:"ADDRESS_NOT_ALLOWLISTED",434:"ERC20_BURN_EXCEEDS_BALANCE",500:"INVALID_POOL_ID",501:"CALLER_NOT_POOL",502:"SENDER_NOT_ASSET_MANAGER",503:"USER_DOESNT_ALLOW_RELAYER",504:"INVALID_SIGNATURE",505:"EXIT_BELOW_MIN",506:"JOIN_ABOVE_MAX",507:"SWAP_LIMIT",508:"SWAP_DEADLINE",509:"CANNOT_SWAP_SAME_TOKEN",510:"UNKNOWN_AMOUNT_IN_FIRST_SWAP",511:"MALCONSTRUCTED_MULTIHOP_SWAP",512:"INTERNAL_BALANCE_OVERFLOW",513:"INSUFFICIENT_INTERNAL_BALANCE",514:"INVALID_ETH_INTERNAL_BALANCE",515:"INVALID_POST_LOAN_BALANCE",516:"INSUFFICIENT_ETH",517:"UNALLOCATED_ETH",518:"ETH_TRANSFER",519:"CANNOT_USE_ETH_SENTINEL",520:"TOKENS_MISMATCH",521:"TOKEN_NOT_REGISTERED",522:"TOKEN_ALREADY_REGISTERED",523:"TOKENS_ALREADY_SET",524:"TOKENS_LENGTH_MUST_BE_2",525:"NONZERO_TOKEN_BALANCE",526:"BALANCE_TOTAL_OVERFLOW",527:"POOL_NO_TOKENS",528:"INSUFFICIENT_FLASH_LOAN_BALANCE",600:"SWAP_FEE_PERCENTAGE_TOO_HIGH",601:"FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH",602:"INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT"};class U{constructor(){}}async function L(e){if("string"==typeof e)return e;if(r.Signer.isSigner(e))return e.getAddress();if(e.address)return e.address;throw new Error("Could not read account address")}var q;U.isErrorCode=e=>{if(!e.includes("BAL#"))return!1;const t=e.replace("BAL#","");return Object.keys(F).includes(t)},U.parseErrorCode=e=>{if(!e.includes("BAL#"))throw new Error("Error code not found");const t=e.replace("BAL#",""),a=F[t];if(!a)throw new Error("Error code not found");return a},U.tryParseErrorCode=e=>{try{return U.parseErrorCode(e)}catch{return e}},U.isBalancerError=e=>Object.values(F).includes(e),U.encodeError=e=>{const t=Object.entries(F).find((([,t])=>t===e));if(!t)throw Error("Error message not found");return`BAL#${t[0]}`},e.RelayerAction=void 0,(q=e.RelayerAction||(e.RelayerAction={})).JoinPool="JoinPool",q.ExitPool="ExitPool",q.Swap="Swap",q.BatchSwap="BatchSwap",q.SetRelayerApproval="SetRelayerApproval";class W{constructor(){}}W.encodeCalldataAuthorization=(e,t,a)=>{const n=i.hexZeroPad(i.hexValue(t),32).slice(2),{v:s,r:r,s:o}=i.splitSignature(a);return`${e}${n}${i.hexZeroPad(i.hexValue(s),32).slice(2)}${r.slice(2)}${o.slice(2)}`},W.signJoinAuthorization=(t,a,n,s,i,r)=>W.signAuthorizationFor(e.RelayerAction.JoinPool,t,a,n,s,i,r),W.signExitAuthorization=(t,a,n,s,i,r)=>W.signAuthorizationFor(e.RelayerAction.ExitPool,t,a,n,s,i,r),W.signSwapAuthorization=(t,a,n,s,i,r)=>W.signAuthorizationFor(e.RelayerAction.Swap,t,a,n,s,i,r),W.signBatchSwapAuthorization=(t,a,n,s,i,r)=>W.signAuthorizationFor(e.RelayerAction.BatchSwap,t,a,n,s,i,r),W.signSetRelayerApprovalAuthorization=(t,a,n,s,i,r)=>W.signAuthorizationFor(e.RelayerAction.SetRelayerApproval,t,a,n,s,i,r),W.signAuthorizationFor=async(e,t,n,s,i,r=a.MaxUint256,o)=>{const{chainId:d}=await t.provider.getNetwork();if(!o){const e=await n.getAddress();o=await t.getNextNonce(e)}const p={name:"Balancer V2 Vault",version:"1",chainId:d,verifyingContract:t.address},l={[e]:[{name:"calldata",type:"bytes"},{name:"sender",type:"address"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u={calldata:i,sender:await L(s),nonce:o.toString(),deadline:r.toString()};return n._signTypedData(p,l,u)};class ${constructor(){}}$.signSetMinterApproval=async(e,t,s,r,o=a.MaxUint256,d)=>{const{chainId:p}=await e.provider.getNetwork();if(!d){const t=await r.getAddress();d=await e.getNextNonce(t)}const l={name:"Balancer Minter",version:"1",chainId:p,verifyingContract:e.address},u={minter:await L(t),approval:s,nonce:d.toString(),deadline:o.toString()},c=await r._signTypedData(l,{SetMinterApproval:[{name:"minter",type:"address"},{name:"approval",type:"bool"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u);return{...i.splitSignature(c),deadline:n.BigNumber.from(o)}};const G=e=>e[0].map(((t,a)=>e.map((e=>e[a]))));class V{constructor(e){this.ETH=a.AddressZero,this.isETH=e=>V.isEqual(e,this.ETH),this.isWETH=e=>V.isEqual(e,this.WETH),this.translateToERC20=e=>this.isETH(e)?this.WETH:e,this.WETH=s.getAddress(e)}sortTokens(e,...t){t.forEach((t=>C(e.length===t.length,"array length mismatch")));const a=e.map(this.translateToERC20),n=G([a,...t]).sort((([e],[t])=>((e,t)=>e.toLowerCase()>t.toLowerCase()?1:-1)(e,t))),[s,...i]=G(n);return[e.includes(this.ETH)?s.map((e=>this.isWETH(e)?this.ETH:e)):s,...i]}}V.isEqual=(e,t)=>s.getAddress(e)===s.getAddress(t);var K=[{inputs:[{internalType:"contract IStaticAToken",name:"_waToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"waToken",outputs:[{internalType:"contract IStaticAToken",name:"",type:"address"}],stateMutability:"view",type:"function"}];const j=e=>({parsedTokens:e.tokens.map((e=>e.address)),parsedDecimals:e.tokens.map((e=>e.decimals?e.decimals.toString():void 0)),parsedBalances:e.tokens.map((e=>n.parseFixed(e.balance,e.decimals).toString())),parsedWeights:e.tokens.map((e=>e.weight?n.parseFixed(e.weight,18).toString():void 0)),parsedPriceRates:e.tokens.map((e=>e.priceRate?n.parseFixed(e.priceRate,18).toString():void 0)),parsedAmp:e.amp?n.parseFixed(e.amp,3).toString():void 0,parsedTotalShares:n.parseFixed(e.totalShares,18).toString(),parsedSwapFee:n.parseFixed(e.swapFee,18).toString()});const H=(e,t)=>s.getAddress(e)===s.getAddress(t);class X{format(e){return e}}class Z{constructor(){this.operatorMap={gt:"_gt",lt:"_lt",eq:"",in:"_in",not_in:"_not_in",contains:"_contains"}}format(e){const t={};return e.where&&Object.entries(e.where).forEach((([e,a])=>{Object.entries(a).forEach((([a,n])=>{t[`${e}${this.operatorMap[a]}`]=n}))})),{...e,where:t}}}class J{constructor(e){this.args=e}merge(e){const t=d.mergeWith(this.args,e.args,((e,t)=>{if(Array.isArray(e))return e.concat(t)}));return new J(t)}format(e){return e.format(this.args)}}var z,Y,Q,ee,te,ae;function ne(t,s,i,r,o,d){const p=new Array(o.length).fill(a.Zero);return o.forEach(((o,l)=>{if(t.some((e=>H(o,e)))){const t=n.BigNumber.from(d).add(a.WeiPerEther);p[l]=i===e.SwapType.SwapExactOut?p[l].add(n.BigNumber.from(r[l]).mul(t).div(a.WeiPerEther)):p[l].add(r[l])}if(s.some((e=>H(o,e)))){const t=a.WeiPerEther.sub(n.BigNumber.from(d));p[l]=i===e.SwapType.SwapExactIn?p[l].add(n.BigNumber.from(r[l]).mul(t).div(a.WeiPerEther)):p[l].add(r[l])}})),p}e.Network=void 0,(z=e.Network||(e.Network={}))[z.MAINNET=1]="MAINNET",z[z.ROPSTEN=3]="ROPSTEN",z[z.RINKEBY=4]="RINKEBY",z[z.GOERLI=5]="GOERLI",z[z["GÖRLI"]=5]="GÖRLI",z[z.OPTIMISM=10]="OPTIMISM",z[z.KOVAN=42]="KOVAN",z[z.POLYGON=137]="POLYGON",z[z.ARBITRUM=42161]="ARBITRUM",e.PoolSpecialization=void 0,(Y=e.PoolSpecialization||(e.PoolSpecialization={}))[Y.GeneralPool=0]="GeneralPool",Y[Y.MinimalSwapInfoPool=1]="MinimalSwapInfoPool",Y[Y.TwoTokenPool=2]="TwoTokenPool",e.UserBalanceOpKind=void 0,(Q=e.UserBalanceOpKind||(e.UserBalanceOpKind={}))[Q.DepositInternal=0]="DepositInternal",Q[Q.WithdrawInternal=1]="WithdrawInternal",Q[Q.TransferInternal=2]="TransferInternal",Q[Q.TransferExternal=3]="TransferExternal",e.PoolBalanceOpKind=void 0,(ee=e.PoolBalanceOpKind||(e.PoolBalanceOpKind={}))[ee.Withdraw=0]="Withdraw",ee[ee.Deposit=1]="Deposit",ee[ee.Update=2]="Update",e.PoolType=void 0,(te=e.PoolType||(e.PoolType={})).Weighted="Weighted",te.Investment="Investment",te.Stable="Stable",te.ComposableStable="ComposableStable",te.MetaStable="MetaStable",te.StablePhantom="StablePhantom",te.LiquidityBootstrapping="LiquidityBootstrapping",te.AaveLinear="AaveLinear",te.ERC4626Linear="ERC4626Linear",te.Element="Element",te.Gyro2="Gyro2",te.Gyro3="Gyro3",e.SwapType=void 0,(ae=e.SwapType||(e.SwapType={}))[ae.SwapExactIn=0]="SwapExactIn",ae[ae.SwapExactOut=1]="SwapExactOut";const se=n.BigNumber.from("10000"),ie=(e,t)=>e.mul(t).div(se),re=(e,t)=>{const a=ie(e,t);return e.sub(a)},oe=(e,t)=>{const a=ie(e,t);return e.add(a)},de="0xBA12222222228d8Ba445958a75a0704d566BF2C8",pe={[e.Network.MAINNET]:{chainId:e.Network.MAINNET,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0xeefba1e63905ef1d7acba5a8513c70307c1ce441",lidoRelayer:"0xdcdbf71A870cc60C6F9B621E28a7D3Ffd6Dd4965",gaugeController:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",feeDistributor:"0xD3cf852898b21fc233251427c2DC93d3d604F3BB",protocolFeePercentagesProvider:"0x97207B095e4D5C9a6e4cfbfcd2C3358E03B90c4A"},tokens:{wrappedNativeAsset:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",lbpRaisingTokens:["0x6B175474E89094C44Da98b954EedeAC495271d0F","0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"],stETH:"0xae7ab96520de3a18e5e111b5eaab095312d7fe84",wstETH:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",bal:"0xba100000625a3754423978a60c9317c58a424e3d",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",bbaUsd:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks"},pools:{wETHwstETH:{id:"0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080",address:"0x32296969ef14eb0c6d29669c550d4a0449130230"}}},[e.Network.POLYGON]:{chainId:e.Network.POLYGON,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0xa1B2b503959aedD81512C37e9dce48164ec6a94d"},tokens:{wrappedNativeAsset:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-polygon-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-polygon",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/ianlapham/polygon-blocks"},pools:{}},[e.Network.ARBITRUM]:{chainId:e.Network.ARBITRUM,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x269ff446d9892c9e19082564df3f5e8741e190a1"},tokens:{wrappedNativeAsset:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-arbitrum-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-arbitrum",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-one-blocks"},pools:{}},[e.Network.KOVAN]:{chainId:e.Network.KOVAN,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x2cc8688C5f75E365aaEEb4ea8D6a480405A48D2A"},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-kovan-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges"},pools:{}},[e.Network.ROPSTEN]:{chainId:e.Network.ROPSTEN,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x53c43764255c17bd724f74c4ef150724ac50a3ed"},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges"},pools:{}},[e.Network.RINKEBY]:{chainId:e.Network.RINKEBY,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821"},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-rinkeby-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges"},pools:{}},[e.Network.GOERLI]:{chainId:e.Network.GOERLI,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x77dCa2C955b15e9dE4dbBCf1246B4B85b651e50e",gaugeController:"0xBB1CE49b16d55A1f2c6e88102f32144C7334B116"},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-goerli-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/goerli-blocks"},pools:{}},[e.Network.OPTIMISM]:{chainId:e.Network.OPTIMISM,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x2dc0e2aa608532da689e89e237df582b783e552c"},tokens:{wrappedNativeAsset:"0x4200000000000000000000000000000000000006"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/beethovenxfi/beethovenx-optimism",gaugesSubgraph:""},pools:{}}};var le;e.BalancerErrorCode=void 0,(le=e.BalancerErrorCode||(e.BalancerErrorCode={})).SWAP_ZERO_RETURN_AMOUNT="SWAP_ZERO_RETURN_AMOUNT",le.UNWRAP_ZERO_AMOUNT="UNWRAP_ZERO_AMOUNT",le.WRAP_ZERO_AMOUNT="WRAP_ZERO_AMOUNT",le.QUERY_BATCH_SWAP="QUERY_BATCH_SWAP",le.POOL_DOESNT_EXIST="POOL_DOESNT_EXIST",le.UNSUPPORTED_POOL_TYPE="UNSUPPORTED_POOL_TYPE",le.UNSUPPORTED_PAIR="UNSUPPORTED_PAIR",le.NO_POOL_DATA="NO_POOL_DATA",le.INPUT_OUT_OF_BOUNDS="INPUT_OUT_OF_BOUNDS",le.INPUT_LENGTH_MISMATCH="INPUT_LENGTH_MISMATCH",le.INPUT_ZERO_NOT_ALLOWED="INPUT_ZERO_NOT_ALLOWED",le.TOKEN_MISMATCH="TOKEN_MISMATCH",le.MISSING_TOKENS="MISSING_TOKENS",le.MISSING_AMP="MISSING_AMP",le.MISSING_DECIMALS="MISSING_DECIMALS",le.MISSING_PRICE_RATE="MISSING_PRICE_RATE",le.MISSING_WEIGHT="MISSING_WEIGHT";class ue extends Error{constructor(e){super(ue.getMessage(e)),this.code=e,this.name="BalancerError"}static getMessage(t){switch(t){case e.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT:return"queryBatchSwapWithSor returned 0 amount";case e.BalancerErrorCode.UNWRAP_ZERO_AMOUNT:return"swapUnwrapAaveStaticExactIn unwrapped amount < 0";case e.BalancerErrorCode.WRAP_ZERO_AMOUNT:return"swapUnwrapAaveStaticExactOut wrapped amount < 0";case e.BalancerErrorCode.QUERY_BATCH_SWAP:return"queryBatchSwap on chain call error";case e.BalancerErrorCode.POOL_DOESNT_EXIST:return"balancer pool does not exist";case e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE:return"unsupported pool type";case e.BalancerErrorCode.UNSUPPORTED_PAIR:return"unsupported token pair";case e.BalancerErrorCode.NO_POOL_DATA:return"no pool data";case e.BalancerErrorCode.INPUT_OUT_OF_BOUNDS:return"input out of bounds";case e.BalancerErrorCode.INPUT_LENGTH_MISMATCH:return"input length mismatch";case e.BalancerErrorCode.TOKEN_MISMATCH:return"token mismatch";case e.BalancerErrorCode.MISSING_DECIMALS:return"missing decimals";case e.BalancerErrorCode.MISSING_TOKENS:return"missing tokens";case e.BalancerErrorCode.MISSING_AMP:return"missing amp";case e.BalancerErrorCode.MISSING_PRICE_RATE:return"missing price rate";case e.BalancerErrorCode.MISSING_WEIGHT:return"missing weight";case e.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED:return"zero input not allowed";default:return"Unknown error"}}}class ce{constructor(){this.buildExitExactBPTIn=({exiter:t,pool:s,bptIn:i,slippage:r,shouldUnwrapNativeAsset:o,wrappedNativeAsset:d,singleTokenMaxOut:p})=>{if(!i.length||n.parseFixed(i,18).isNegative())throw new ue(e.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(p&&p!==a.AddressZero&&!s.tokens.map((e=>e.address)).some((e=>e===p)))throw new ue(e.BalancerErrorCode.TOKEN_MISMATCH);if(!o&&p===a.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenMaxOut should not have conflicting values");if(s.tokens.some((e=>!e.decimals)))throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);if(!s.amp)throw new ue(e.BalancerErrorCode.MISSING_AMP);const{parsedTokens:u,parsedBalances:c,parsedAmp:y,parsedTotalShares:m,parsedSwapFee:b}=j(s),h=u.map((e=>e===d?a.AddressZero:e)),f=new V(d),[T,I]=f.sortTokens(o?h:u,c);let g,w=Array(u.length).fill("0");if(p){const e=u.indexOf(p),t=S.StableMathBigInt._calcTokenOutGivenExactBptIn(BigInt(y),I.map((e=>BigInt(e))),e,BigInt(i),BigInt(m),BigInt(b)).toString();w[e]=re(n.BigNumber.from(t),n.BigNumber.from(r)).toString(),g=A.exitExactBPTInForOneTokenOut(i,e)}else{w=S.StableMathBigInt._calcTokensOutGivenExactBptIn(I.map((e=>BigInt(e))),BigInt(i),BigInt(m)).map((e=>e.toString())).map((e=>re(n.BigNumber.from(e),n.BigNumber.from(r)).toString())),g=A.exitExactBPTInForTokensOut(i)}const E="exitPool",_={poolId:s.id,sender:t,recipient:t,exitPoolRequest:{assets:T,minAmountsOut:w,userData:g,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:E,attributes:_,data:l.Vault__factory.createInterface().encodeFunctionData(E,[_.poolId,_.sender,_.recipient,_.exitPoolRequest]),minAmountsOut:w,maxBPTIn:i}},this.buildExitExactTokensOut=({exiter:t,pool:a,tokensOut:s,amountsOut:i,slippage:r,wrappedNativeAsset:o})=>{if(s.length!=i.length||s.length!=a.tokensList.length)throw new ue(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>!e.decimals)))throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);if(!a.amp)throw new ue(e.BalancerErrorCode.MISSING_AMP);const{parsedTokens:d,parsedBalances:p,parsedAmp:u,parsedTotalShares:c,parsedSwapFee:y}=j(a),m=new V(o),[,b]=m.sortTokens(d,p),[h,f]=m.sortTokens(s,i),T=S.StableMathBigInt._calcBptInGivenExactTokensOut(BigInt(u),b.map((e=>BigInt(e))),f.map((e=>BigInt(e))),BigInt(c),BigInt(y)).toString(),I=oe(n.BigNumber.from(T),n.BigNumber.from(r)).toString(),g=A.exitBPTInForExactTokensOut(f,I),w="exitPool",E={poolId:a.id,sender:t,recipient:t,exitPoolRequest:{assets:h,minAmountsOut:f,userData:g,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:w,attributes:E,data:l.Vault__factory.createInterface().encodeFunctionData(w,[E.poolId,E.sender,E.recipient,E.exitPoolRequest]),minAmountsOut:f,maxBPTIn:I}}}}class ye{constructor(){this.buildJoin=({joiner:t,pool:s,tokensIn:i,amountsIn:r,slippage:o,wrappedNativeAsset:d})=>{if(i.length!=r.length||i.length!=s.tokensList.length)throw new ue(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(s.tokens.some((e=>!e.decimals)))throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);if(!s.amp)throw new ue(e.BalancerErrorCode.MISSING_AMP);const{parsedTokens:p,parsedBalances:u,parsedAmp:c,parsedTotalShares:y,parsedSwapFee:m}=j(s),b=new V(d),[h,f]=b.sortTokens(i,r),[,T]=b.sortTokens(p,u),I=S.StableMathBigInt._calcBptOutGivenExactTokensIn(BigInt(c),T.map((e=>BigInt(e))),f.map((e=>BigInt(e))),BigInt(y),BigInt(m)).toString(),g=re(n.BigNumber.from(I),n.BigNumber.from(o)).toString(),w=A.joinExactTokensInForBPTOut(f,g),E="joinPool",_={poolId:s.id,sender:t,recipient:t,joinPoolRequest:{assets:h,maxAmountsIn:f,userData:w,fromInternalBalance:!1}},x=l.Vault__factory.createInterface().encodeFunctionData(E,[_.poolId,_.sender,_.recipient,_.joinPoolRequest]),O=r.filter(((e,t)=>i[t]===a.AddressZero));return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:E,attributes:_,data:x,value:O[0]?n.BigNumber.from(O[0]):void 0,minBPTOut:g}}}}function me(e,t){const a=new RegExp(`[0-9]+\\.?[0-9]{0,${t}}`),s=e.match(a);let i=e;return s&&(i=s[0]),n.parseFixed(i,t)}function be(e,t){return n.formatFixed(e,t).replace(/(.0$)/,"")}class he{calcTotal(e){var t,a;let s=n.BigNumber.from(0),i=n.BigNumber.from(0);for(let a=0;a<e.length;a++){const n=e[a];if(!(null===(t=n.price)||void 0===t?void 0:t.usd))continue;const r=me(n.price.usd.toString(),18),o=me(n.balance,18),d=o.mul(r);i=i.add(d),s=s.add(o)}if(s.gt(0)){const t=i.div(s);for(let n=0;n<e.length;n++){const r=e[n];if(null===(a=r.price)||void 0===a?void 0:a.usd)continue;const o=me(r.balance,18),d=o.mul(t);i=i.add(d),s=s.add(o)}}return n.formatFixed(i,36).toString()}}class fe{calcPoolSpotPrice(e,t,a){const n=p.StablePool.fromPool(a),s=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(s,p.ZERO).toString()}}const Te=BigInt(0),Ie=BigInt(1),ge=BigInt("1000000000000000000"),we=(e,t)=>{if(!e)throw new Error(t)};function Ee(e){const t=BigInt(18)-e;return ge*BigInt(10)**t}function Se(e,t){return _e.mulDownFixed(e,t)}class _e{static add(e,t){const a=e+t;return we(t>=0&&a>=e||t<0&&a<e,"Errors.ADD_OVERFLOW"),a}static sub(e,t){we(t<=e,"Errors.SUB_OVERFLOW");return e-t}static max(e,t){return e>=t?e:t}static min(e,t){return e<t?e:t}static mul(e,t){const a=e*t;return we(e==Te||a/e==t,"Errors.MUL_OVERFLOW"),a}static div(e,t,a){return a?this.divUp(e,t):this.divDown(e,t)}static divDown(e,t){return we(t!=Te,"Errors.ZERO_DIVISION"),e/t}static divUp(e,t){return we(t!=Te,"Errors.ZERO_DIVISION"),e==Te?Te:Ie+(e-Ie)/t}static mulUpFixed(e,t){const a=e*t;return we(e==Te||a/e==t,"Errors.MUL_OVERFLOW"),a==Te?Te:(a-Ie)/ge+Ie}static divDownFixed(e,t){if(we(t!=Te,"Errors.ZERO_DIVISION"),e==Te)return Te;return e*ge/t}static divUpFixed(e,t){if(we(t!=Te,"Errors.ZERO_DIVISION"),e==Te)return Te;{const a=e*ge;return we(a/e==ge,"Errors.DIV_INTERNAL"),(a-Ie)/t+Ie}}static powUpFixed(e,t){const a=Ae.pow(e,t),n=this.add(this.mulUpFixed(a,this.MAX_POW_RELATIVE_ERROR),Ie);return this.add(a,n)}static complementFixed(e){return e<ge?ge-e:Te}static mulDownFixed(e,t){const a=e*t;return we(e==Te||a/e==t,"Errors.MUL_OVERFLOW"),a/ge}}_e.MAX_POW_RELATIVE_ERROR=BigInt(1e4);class Ae{static pow(e,t){if(t===Te)return this.ONE_18;if(e==Te)return Te;we(e<BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819968"),"Errors.X_OUT_OF_BOUNDS");const a=e;we(t<this.MILD_EXPONENT_BOUND,"Errors.Y_OUT_OF_BOUNDS");const n=t;let s;if(this.LN_36_LOWER_BOUND<a&&a<this.LN_36_UPPER_BOUND){const e=this._ln_36(a);s=e/this.ONE_18*n+e%this.ONE_18*n/this.ONE_18}else s=this._ln(a)*n;return s/=this.ONE_18,we(this.MIN_NATURAL_EXPONENT<=s&&s<=this.MAX_NATURAL_EXPONENT,"Errors.PRODUCT_OUT_OF_BOUNDS"),this.exp(s)}static exp(e){if(we(e>=this.MIN_NATURAL_EXPONENT&&e<=this.MAX_NATURAL_EXPONENT,"Errors.INVALID_EXPONENT"),e<0)return this.ONE_18*this.ONE_18/this.exp(BigInt(-1)*e);let t;e>=this.x0?(e-=this.x0,t=this.a0):e>=this.x1?(e-=this.x1,t=this.a1):t=BigInt(1),e*=BigInt(100);let a=this.ONE_20;e>=this.x2&&(e-=this.x2,a=a*this.a2/this.ONE_20),e>=this.x3&&(e-=this.x3,a=a*this.a3/this.ONE_20),e>=this.x4&&(e-=this.x4,a=a*this.a4/this.ONE_20),e>=this.x5&&(e-=this.x5,a=a*this.a5/this.ONE_20),e>=this.x6&&(e-=this.x6,a=a*this.a6/this.ONE_20),e>=this.x7&&(e-=this.x7,a=a*this.a7/this.ONE_20),e>=this.x8&&(e-=this.x8,a=a*this.a8/this.ONE_20),e>=this.x9&&(e-=this.x9,a=a*this.a9/this.ONE_20);let n,s=this.ONE_20;return n=e,s+=n,n=n*e/this.ONE_20/BigInt(2),s+=n,n=n*e/this.ONE_20/BigInt(3),s+=n,n=n*e/this.ONE_20/BigInt(4),s+=n,n=n*e/this.ONE_20/BigInt(5),s+=n,n=n*e/this.ONE_20/BigInt(6),s+=n,n=n*e/this.ONE_20/BigInt(7),s+=n,n=n*e/this.ONE_20/BigInt(8),s+=n,n=n*e/this.ONE_20/BigInt(9),s+=n,n=n*e/this.ONE_20/BigInt(10),s+=n,n=n*e/this.ONE_20/BigInt(11),s+=n,n=n*e/this.ONE_20/BigInt(12),s+=n,a*s/this.ONE_20*t/BigInt(100)}static _ln_36(e){const t=((e*=this.ONE_18)-this.ONE_36)*this.ONE_36/(e+this.ONE_36),a=t*t/this.ONE_36;let n=t,s=n;return n=n*a/this.ONE_36,s+=n/BigInt(3),n=n*a/this.ONE_36,s+=n/BigInt(5),n=n*a/this.ONE_36,s+=n/BigInt(7),n=n*a/this.ONE_36,s+=n/BigInt(9),n=n*a/this.ONE_36,s+=n/BigInt(11),n=n*a/this.ONE_36,s+=n/BigInt(13),n=n*a/this.ONE_36,s+=n/BigInt(15),s*BigInt(2)}static _ln(e){if(e<this.ONE_18)return BigInt(-1)*this._ln(this.ONE_18*this.ONE_18/e);let t=Te;e>=this.a0*this.ONE_18&&(e/=this.a0,t+=this.x0),e>=this.a1*this.ONE_18&&(e/=this.a1,t+=this.x1),t*=BigInt(100),(e*=BigInt(100))>=this.a2&&(e=e*this.ONE_20/this.a2,t+=this.x2),e>=this.a3&&(e=e*this.ONE_20/this.a3,t+=this.x3),e>=this.a4&&(e=e*this.ONE_20/this.a4,t+=this.x4),e>=this.a5&&(e=e*this.ONE_20/this.a5,t+=this.x5),e>=this.a6&&(e=e*this.ONE_20/this.a6,t+=this.x6),e>=this.a7&&(e=e*this.ONE_20/this.a7,t+=this.x7),e>=this.a8&&(e=e*this.ONE_20/this.a8,t+=this.x8),e>=this.a9&&(e=e*this.ONE_20/this.a9,t+=this.x9),e>=this.a10&&(e=e*this.ONE_20/this.a10,t+=this.x10),e>=this.a11&&(e=e*this.ONE_20/this.a11,t+=this.x11);const a=(e-this.ONE_20)*this.ONE_20/(e+this.ONE_20),n=a*a/this.ONE_20;let s=a,i=s;return s=s*n/this.ONE_20,i+=s/BigInt(3),s=s*n/this.ONE_20,i+=s/BigInt(5),s=s*n/this.ONE_20,i+=s/BigInt(7),s=s*n/this.ONE_20,i+=s/BigInt(9),s=s*n/this.ONE_20,i+=s/BigInt(11),i*=BigInt(2),(t+i)/BigInt(100)}}function xe(e,t){return ge-_e.divDownFixed(e,t)}Ae.ONE_18=BigInt("1000000000000000000"),Ae.ONE_20=BigInt("100000000000000000000"),Ae.ONE_36=BigInt("1000000000000000000000000000000000000"),Ae.MAX_NATURAL_EXPONENT=BigInt("130000000000000000000"),Ae.MIN_NATURAL_EXPONENT=BigInt("-41000000000000000000"),Ae.LN_36_LOWER_BOUND=BigInt(Ae.ONE_18)-BigInt("100000000000000000"),Ae.LN_36_UPPER_BOUND=BigInt(Ae.ONE_18)+BigInt("100000000000000000"),Ae.MILD_EXPONENT_BOUND=BigInt(2)**BigInt(254)/Ae.ONE_20,Ae.x0=BigInt("128000000000000000000"),Ae.a0=BigInt("38877084059945950922200000000000000000000000000000000000"),Ae.x1=BigInt("64000000000000000000"),Ae.a1=BigInt("6235149080811616882910000000"),Ae.x2=BigInt("3200000000000000000000"),Ae.a2=BigInt("7896296018268069516100000000000000"),Ae.x3=BigInt("1600000000000000000000"),Ae.a3=BigInt("888611052050787263676000000"),Ae.x4=BigInt("800000000000000000000"),Ae.a4=BigInt("298095798704172827474000"),Ae.x5=BigInt("400000000000000000000"),Ae.a5=BigInt("5459815003314423907810"),Ae.x6=BigInt("200000000000000000000"),Ae.a6=BigInt("738905609893065022723"),Ae.x7=BigInt("100000000000000000000"),Ae.a7=BigInt("271828182845904523536"),Ae.x8=BigInt("50000000000000000000"),Ae.a8=BigInt("164872127070012814685"),Ae.x9=BigInt("25000000000000000000"),Ae.a9=BigInt("128402541668774148407"),Ae.x10=BigInt("12500000000000000000"),Ae.a10=BigInt("113314845306682631683"),Ae.x11=BigInt("6250000000000000000"),Ae.a11=BigInt("106449445891785942956");const Oe=BigInt(1e3);function Pe(e,t,a,n){const s=t.length,i=function(e,t,a){let n=Te;const s=t.length;for(let e=0;e<s;e++)n+=t[e];if(n==Te)return Te;let i=Te,r=n;const o=e*BigInt(s);for(let e=0;e<255;e++){let e=t[0]*BigInt(s);for(let n=1;n<s;n++)e=_e.div(_e.mul(_e.mul(e,t[n]),BigInt(s)),r,a);if(i=r,r=_e.div(_e.mul(_e.mul(BigInt(s),r),r)+_e.div(_e.mul(_e.mul(o,n),e),Oe,a),_e.mul(BigInt(s+1),r)+_e.div(_e.mul(o-Oe,e),Oe,!a),a),r>i){if(r-i<=1)return r}else if(i-r<=1)return r}throw new Error("Errors.STABLE_INVARIANT_DIDNT_CONVERGE")}(e,t,!0);let r=Te,o=i/BigInt(s);for(let e=0;e<s;e++)e!=n&&(r+=t[e],o=o*i/(BigInt(s)*t[e]));const d=t[n],p=e*BigInt(s),l=p*r,u=BigInt(Oe)-p,c=BigInt(2)*p*d+l+u*i,y=o*BigInt(s+1)*Oe-u*d;return _e.divUpFixed(c*a/y,i)}class Ne{bptZeroPriceImpact(t,a){if(a.length!==t.tokensList.length)throw new ue(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const{parsedBalances:n,parsedDecimals:s,parsedAmp:i,parsedTotalShares:r}=j(t),o=s.map((t=>{if(!t)throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);return BigInt(t)}));if(!i)throw new ue(e.BalancerErrorCode.MISSING_PRICE_RATE);const d=BigInt(r),p=o.map((e=>Ee(BigInt(e)))),l=n.map(((e,t)=>Se(BigInt(e),p[t])));let u=Te;for(let e=0;e<l.length;e++){const t=Pe(BigInt(i),l,d,e),n=Ee(BigInt(o[e]));u+=t*Se(a[e],n)/ge}return u}calcPriceImpact(e,t,a){const n=this.bptZeroPriceImpact(e,t.map((e=>BigInt(e))));return xe(BigInt(a),n).toString()}}class Be{constructor(e=new ce,t=new ye,a=new he,n=new fe,s=new Ne){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=s}}class ke{constructor(){this.buildExitSingleTokenOut=({exiter:t,pool:s,bptIn:i,slippage:r,shouldUnwrapNativeAsset:o,wrappedNativeAsset:d,singleTokenMaxOut:p})=>{if(!i.length||n.parseFixed(i,18).isNegative())throw new ue(e.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(p&&p!==a.AddressZero&&!s.tokens.map((e=>e.address)).some((e=>e===p)))throw new ue(e.BalancerErrorCode.TOKEN_MISMATCH);if(!o&&p===a.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenMaxOut should not have conflicting values");if(s.tokens.some((e=>!e.decimals)))throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);if(!s.amp)throw new ue(e.BalancerErrorCode.MISSING_AMP);const{parsedTokens:u,parsedBalances:c,parsedAmp:y,parsedTotalShares:m,parsedSwapFee:b}=j(s),h=u.map((e=>e===d?a.AddressZero:e)),f=new V(d),[T,I]=f.sortTokens(o?h:u,c),g=Array(u.length).fill("0"),w=u.indexOf(p),E=S.StableMathBigInt._calcTokenOutGivenExactBptIn(BigInt(y),I.map((e=>BigInt(e))),w,BigInt(i),BigInt(m),BigInt(b)).toString();g[w]=re(n.BigNumber.from(E),n.BigNumber.from(r)).toString();const _=B.exitExactBPTInForOneTokenOut(i,w),A="exitPool",x={poolId:s.id,sender:t,recipient:t,exitPoolRequest:{assets:T,minAmountsOut:g,userData:_,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:A,attributes:x,data:l.Vault__factory.createInterface().encodeFunctionData(A,[x.poolId,x.sender,x.recipient,x.exitPoolRequest]),minAmountsOut:g,maxBPTIn:i}},this.buildExitExactTokensOut=({exiter:t,pool:a,tokensOut:s,amountsOut:i,slippage:r,wrappedNativeAsset:o})=>{if(s.length!=i.length||s.length!=a.tokensList.length)throw new ue(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>!e.decimals)))throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);if(!a.amp)throw new ue(e.BalancerErrorCode.MISSING_AMP);const{parsedTokens:d,parsedBalances:p,parsedAmp:u,parsedTotalShares:c,parsedSwapFee:y}=j(a),m=new V(o),[,b]=m.sortTokens(d,p),[h,f]=m.sortTokens(s,i),T=S.StableMathBigInt._calcBptInGivenExactTokensOut(BigInt(u),b.map((e=>BigInt(e))),f.map((e=>BigInt(e))),BigInt(c),BigInt(y)).toString(),I=oe(n.BigNumber.from(T),n.BigNumber.from(r)).toString(),g=B.exitBPTInForExactTokensOut(f,I),w="exitPool",E={poolId:a.id,sender:t,recipient:t,exitPoolRequest:{assets:h,minAmountsOut:f,userData:g,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:w,attributes:E,data:l.Vault__factory.createInterface().encodeFunctionData(w,[E.poolId,E.sender,E.recipient,E.exitPoolRequest]),minAmountsOut:f,maxBPTIn:I}}}}class ve{constructor(e=new ke,t=new ye,a=new he,n=new fe,s=new Ne){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=s}}class Ce{constructor(){this.buildExitExactBPTIn=({exiter:t,pool:s,bptIn:i,slippage:r,shouldUnwrapNativeAsset:o,wrappedNativeAsset:d,singleTokenMaxOut:p})=>{if(!i.length||n.parseFixed(i,18).isNegative())throw new ue(e.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(p&&p!==a.AddressZero&&!s.tokens.map((e=>e.address)).some((e=>e===p)))throw new ue(e.BalancerErrorCode.TOKEN_MISMATCH);if(!o&&p===a.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenMaxOut should not have conflicting values");const{parsedTokens:u,parsedBalances:c,parsedWeights:y,parsedTotalShares:m,parsedSwapFee:b}=j(s),h=u.map((e=>e===d?a.AddressZero:e)),f=new V(d),[T,I,g]=f.sortTokens(o?h:u,c,y);let w,E=Array(T.length).fill("0");if(p){const e=T.indexOf(p),t=S.WeightedMaths._calcTokenOutGivenExactBptIn(BigInt(I[e]),BigInt(g[e]),BigInt(i),BigInt(m),BigInt(b)).toString();E[e]=re(n.BigNumber.from(t),n.BigNumber.from(r)).toString(),w=x.exitExactBPTInForOneTokenOut(i,e)}else{E=S.WeightedMaths._calcTokensOutGivenExactBptIn(I.map((e=>BigInt(e))),BigInt(i),BigInt(m)).map((e=>e.toString())).map((e=>re(n.BigNumber.from(e),n.BigNumber.from(r)).toString())),w=x.exitExactBPTInForTokensOut(i)}const _="exitPool",A={poolId:s.id,sender:t,recipient:t,exitPoolRequest:{assets:T,minAmountsOut:E,userData:w,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:_,attributes:A,data:l.Vault__factory.createInterface().encodeFunctionData(_,[A.poolId,A.sender,A.recipient,A.exitPoolRequest]),minAmountsOut:E,maxBPTIn:i}},this.buildExitExactTokensOut=({exiter:t,pool:a,tokensOut:s,amountsOut:i,slippage:r,wrappedNativeAsset:o})=>{if(s.length!=i.length||s.length!=a.tokensList.length)throw new ue(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const{parsedTokens:d,parsedBalances:p,parsedWeights:u,parsedTotalShares:c,parsedSwapFee:y}=j(a),m=new V(o),[,b,h]=m.sortTokens(d,p,u),[f,T]=m.sortTokens(s,i),I=S.WeightedMaths._calcBptInGivenExactTokensOut(b.map((e=>BigInt(e))),h.map((e=>BigInt(e))),T.map((e=>BigInt(e))),BigInt(c),BigInt(y)).toString(),g=oe(n.BigNumber.from(I),n.BigNumber.from(r)).toString(),w=x.exitBPTInForExactTokensOut(T,g),E="exitPool",_={poolId:a.id,sender:t,recipient:t,exitPoolRequest:{assets:f,minAmountsOut:T,userData:w,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:E,attributes:_,data:l.Vault__factory.createInterface().encodeFunctionData(E,[_.poolId,_.sender,_.recipient,_.exitPoolRequest]),minAmountsOut:T,maxBPTIn:g}}}}class Re{constructor(){this.buildJoin=({joiner:t,pool:s,tokensIn:i,amountsIn:r,slippage:o,wrappedNativeAsset:d})=>{if(i.length!=r.length||i.length!=s.tokensList.length)throw new ue(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(s.tokens.some((e=>!e.decimals)))throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);if(s.tokens.some((e=>!e.weight)))throw new ue(e.BalancerErrorCode.MISSING_WEIGHT);const{parsedTokens:u,parsedBalances:c,parsedWeights:y,parsedTotalShares:m,parsedSwapFee:b}=j(s),h=new V(d),[f,T]=h.sortTokens(i,r),[,I,g]=h.sortTokens(u,c,y),w=p.WeightedMaths._calcBptOutGivenExactTokensIn(I.map((e=>BigInt(e))),g.map((e=>BigInt(e))),T.map((e=>BigInt(e))),BigInt(m),BigInt(b)).toString(),E=re(n.BigNumber.from(w),n.BigNumber.from(o)).toString(),S=x.joinExactTokensInForBPTOut(T,E),_="joinPool",A={poolId:s.id,sender:t,recipient:t,joinPoolRequest:{assets:f,maxAmountsIn:T,userData:S,fromInternalBalance:!1}},O=l.Vault__factory.createInterface().encodeFunctionData(_,[A.poolId,A.sender,A.recipient,A.joinPoolRequest]),P=r.filter(((e,t)=>i[t]===a.AddressZero));return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:_,attributes:A,data:O,value:P[0]?n.BigNumber.from(P[0]):void 0,minBPTOut:E}}}}class De{calcTotal(e){var t;let a=n.BigNumber.from(0),s=n.BigNumber.from(0);for(let n=0;n<e.length;n++){const i=e[n];if(!(null===(t=i.price)||void 0===t?void 0:t.usd))continue;const r=me(i.price.usd.toString(),18),o=me(i.balance,18),d=me(i.weight||"0",18),p=o.mul(r);s=s.add(p),a=a.add(d)}const i=e.reduce(((e,t)=>e.add(me(t.weight||"0",18))),n.BigNumber.from(0));if(a.gt(0)){return be(s.mul(i).div(a),36)}return"0"}}class Me{calcPoolSpotPrice(e,t,a){const n=p.WeightedPool.fromPool(a),s=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(s,p.ZERO).toString()}}class Fe{bptZeroPriceImpact(t,a){if(a.length!==t.tokensList.length)throw new ue(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const{parsedBalances:n,parsedDecimals:s,parsedTotalShares:i,parsedWeights:r}=j(t),o=BigInt(i),p=d.cloneDeep(t.tokensList);let l=Te;for(let t=0;t<p.length;t++){const i=s[t];let d,p;if(!i)throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);d=Ee(BigInt(i)),p=Se(BigInt(n[t]),d);const u=r[t];let c;if(!u)throw new ue(e.BalancerErrorCode.MISSING_WEIGHT);c=BigInt(u);l+=c*o/p*Se(a[t],d)/ge}return l}calcPriceImpact(e,t,a){const n=this.bptZeroPriceImpact(e,t.map((e=>BigInt(e))));return xe(BigInt(a),n).toString()}}class Ue{constructor(e=new Ce,t=new Re,a=new De,n=new Me,s=new Fe){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=s}}class Le{constructor(){this.buildExitExactBPTIn=({exiter:t,pool:s,bptIn:i,slippage:r,shouldUnwrapNativeAsset:o,wrappedNativeAsset:d,singleTokenMaxOut:p})=>{if(!i.length||n.parseFixed(i,18).isNegative())throw new ue(e.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(p&&p!==a.AddressZero&&!s.tokens.map((e=>e.address)).some((e=>e===p)))throw new ue(e.BalancerErrorCode.TOKEN_MISMATCH);if(!o&&p===a.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenMaxOut should not have conflicting values");if(s.tokens.some((e=>!e.decimals)))throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);if(!s.amp)throw new ue(e.BalancerErrorCode.MISSING_AMP);if(s.tokens.some((e=>!e.priceRate)))throw new ue(e.BalancerErrorCode.MISSING_PRICE_RATE);const{parsedTokens:u,parsedBalances:c,parsedAmp:y,parsedPriceRates:m,parsedTotalShares:b,parsedSwapFee:h}=j(s),f=u.map((e=>e===d?a.AddressZero:e)),T=new V(d),[I,g,w]=T.sortTokens(o?f:u,c,m),E=g.map(((e,t)=>n.BigNumber.from(e).mul(n.BigNumber.from(w[t])).div(n.parseFixed("1",18)).toString()));let _,x=Array(u.length).fill("0");if(p){const e=I.indexOf(p),t=S.StableMathBigInt._calcTokenOutGivenExactBptIn(BigInt(y),E.map((e=>BigInt(e))),e,BigInt(i),BigInt(b),BigInt(h)).toString(),a=n.BigNumber.from(t).div(n.BigNumber.from(w[e])).mul(n.parseFixed("1",18)).toString();x[e]=re(n.BigNumber.from(a),n.BigNumber.from(r)).toString(),_=A.exitExactBPTInForOneTokenOut(i,e)}else{x=S.StableMathBigInt._calcTokensOutGivenExactBptIn(E.map((e=>BigInt(e))),BigInt(i),BigInt(b)).map((e=>e.toString())).map(((e,t)=>n.BigNumber.from(e).div(n.BigNumber.from(w[t])).mul(n.parseFixed("1",18)).toString())).map((e=>re(n.BigNumber.from(e),n.BigNumber.from(r)).toString())),_=A.exitExactBPTInForTokensOut(i)}const O="exitPool",P={poolId:s.id,sender:t,recipient:t,exitPoolRequest:{assets:I,minAmountsOut:x,userData:_,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:O,attributes:P,data:l.Vault__factory.createInterface().encodeFunctionData(O,[P.poolId,P.sender,P.recipient,P.exitPoolRequest]),minAmountsOut:x,maxBPTIn:i}},this.buildExitExactTokensOut=({exiter:t,pool:a,tokensOut:s,amountsOut:i,slippage:r,wrappedNativeAsset:o})=>{if(s.length!=i.length||s.length!=a.tokensList.length)throw new ue(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>!e.decimals)))throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);if(!a.amp)throw new ue(e.BalancerErrorCode.MISSING_AMP);if(a.tokens.some((e=>!e.priceRate)))throw new ue(e.BalancerErrorCode.MISSING_PRICE_RATE);const{parsedTokens:d,parsedBalances:p,parsedPriceRates:u,parsedAmp:c,parsedTotalShares:y,parsedSwapFee:m}=j(a),b=new V(o),[,h,f]=b.sortTokens(d,p,u),[T,I]=b.sortTokens(s,i),g=I.map(((e,t)=>n.BigNumber.from(e).mul(n.BigNumber.from(f[t])).div(n.parseFixed("1",18)).toString())),w=h.map(((e,t)=>n.BigNumber.from(e).mul(n.BigNumber.from(f[t])).div(n.parseFixed("1",18)).toString())),E=S.StableMathBigInt._calcBptInGivenExactTokensOut(BigInt(c),w.map((e=>BigInt(e))),g.map((e=>BigInt(e))),BigInt(y),BigInt(m)).toString(),_=oe(n.BigNumber.from(E),n.BigNumber.from(r)).toString(),x=A.exitBPTInForExactTokensOut(I,_),O=I.map(((e,t)=>e===g[t]?e:n.BigNumber.from(e).sub(1).toString())),P="exitPool",N={poolId:a.id,sender:t,recipient:t,exitPoolRequest:{assets:T,minAmountsOut:O,userData:x,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:P,attributes:N,data:l.Vault__factory.createInterface().encodeFunctionData(P,[N.poolId,N.sender,N.recipient,N.exitPoolRequest]),minAmountsOut:O,maxBPTIn:_}}}}class qe{constructor(){this.buildJoin=({joiner:t,pool:s,tokensIn:i,amountsIn:r,slippage:o,wrappedNativeAsset:d})=>{if(i.length!=r.length||i.length!=s.tokensList.length)throw new ue(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(s.tokens.some((e=>!e.decimals)))throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);if(!s.amp)throw new ue(e.BalancerErrorCode.MISSING_AMP);if(s.tokens.some((e=>!e.priceRate)))throw new ue(e.BalancerErrorCode.MISSING_PRICE_RATE);const{parsedTokens:p,parsedBalances:u,parsedPriceRates:c,parsedAmp:y,parsedTotalShares:m,parsedSwapFee:b}=j(s),h=new V(d),[f,T]=h.sortTokens(i,r),[,I,g]=h.sortTokens(p,u,c),w=T.map(((e,t)=>n.BigNumber.from(e).mul(n.BigNumber.from(g[t])).div(n.parseFixed("1",18)).toString())),E=I.map(((e,t)=>n.BigNumber.from(e).mul(n.BigNumber.from(g[t])).div(n.parseFixed("1",18)).toString())),_=S.StableMathBigInt._calcBptOutGivenExactTokensIn(BigInt(y),E.map((e=>BigInt(e))),w.map((e=>BigInt(e))),BigInt(m),BigInt(b)).toString(),x=re(n.BigNumber.from(_),n.BigNumber.from(o)).toString(),O=A.joinExactTokensInForBPTOut(T,x),P="joinPool",N={poolId:s.id,sender:t,recipient:t,joinPoolRequest:{assets:f,maxAmountsIn:T,userData:O,fromInternalBalance:!1}},B=l.Vault__factory.createInterface().encodeFunctionData(P,[N.poolId,N.sender,N.recipient,N.joinPoolRequest]),k=r.filter(((e,t)=>i[t]===a.AddressZero));return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:P,attributes:N,data:B,value:k[0]?n.BigNumber.from(k[0]):void 0,minBPTOut:x}}}}class We{calcTotal(e){var t,s;let i=a.Zero,r=a.Zero;for(let a=0;a<e.length;a++){const n=e[a];if(!(null===(t=n.price)||void 0===t?void 0:t.usd))continue;const s=me(n.price.usd.toString(),18),o=me(n.balance,18),d=o.mul(s);r=r.add(d),i=i.add(o)}if(i.gt(0)){const t=r.div(i);for(let a=0;a<e.length;a++){const n=e[a];if(null===(s=n.price)||void 0===s?void 0:s.usd)continue;const o=me(n.balance,18),d=o.mul(t);r=r.add(d),i=i.add(o)}}return n.formatFixed(r,36).toString()}}class $e{calcPoolSpotPrice(e,t,a){const n=p.MetaStablePool.fromPool(a),s=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(s,p.ZERO).toString()}}class Ge{bptZeroPriceImpact(t,a){if(a.length!==t.tokensList.length)throw new ue(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const{parsedBalances:n,parsedDecimals:s,parsedPriceRates:i,parsedAmp:r,parsedTotalShares:o}=j(t),d=BigInt(o),p=s.map((t=>{if(!t)throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);return BigInt(t)})),l=i.map((t=>{if(!t)throw new ue(e.BalancerErrorCode.MISSING_PRICE_RATE);return BigInt(t)}));if(!r)throw new ue(e.BalancerErrorCode.MISSING_PRICE_RATE);const u=p.map((e=>Ee(BigInt(e)))),c=n.map(((e,t)=>Se(BigInt(e),u[t]))),y=c.map(((e,t)=>_e.mulDownFixed(e,l[t])));let m=Te;for(let e=0;e<c.length;e++){const n=Pe(BigInt(r),y,d,e)*l[e]/ge,s=Ee(BigInt(t.tokens[e].decimals));m+=n*Se(a[e],s)/ge}return m}calcPriceImpact(e,t,a){const n=this.bptZeroPriceImpact(e,t.map((e=>BigInt(e))));return xe(BigInt(a),n).toString()}}class Ve{constructor(e=new Le,t=new qe,a=new We,n=new $e,s=new Ge){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=s}}class Ke{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:s,wrappedNativeAsset:i,singleTokenMaxOut:r})=>{throw new Error("To be implemented")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:s,wrappedNativeAsset:i})=>{throw new Error("To be implemented")}}}class je{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:s,wrappedNativeAsset:i})=>{throw new Error("To be implemented")}}}class He{calcTotal(e){if(e.length>0)throw new Error("Not Implemented - StablePhantom liquidity should all come from sub-pools.");return"0"}}class Xe{calcPoolSpotPrice(e,t,a){const n=p.PhantomStablePool.fromPool(a),s=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(s,p.ZERO).toString()}}class Ze{bptZeroPriceImpact(t,a){if(a.length!==t.tokensList.length-1)throw new ue(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const n=d.cloneDeep(t.tokensList),s=n.findIndex((e=>e==t.address)),{parsedBalances:i,parsedDecimals:r,parsedPriceRates:o,parsedAmp:p,parsedTotalShares:l}=j(t),u=r.map((t=>{if(!t)throw new ue(e.BalancerErrorCode.MISSING_DECIMALS);return BigInt(t)})),c=o.map((t=>{if(!t)throw new ue(e.BalancerErrorCode.MISSING_PRICE_RATE);return BigInt(t)}));if(!p)throw new ue(e.BalancerErrorCode.MISSING_PRICE_RATE);const y=BigInt(l);n.splice(s,1);const m=u.map((e=>Ee(BigInt(e)))),b=i.map(((e,t)=>Se(BigInt(e),m[t])));if(a.length!==n.length)throw new ue(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);b.splice(s,1);const h=b.map(((e,t)=>_e.mulDownFixed(e,c[t])));let f=Te;for(let e=0;e<n.length;e++){const t=Pe(BigInt(p),h,y,e)*c[e]/ge,n=Ee(BigInt(u[e]));f+=t*Se(a[e],n)/ge}return f}calcPriceImpact(e,t,a){const n=this.bptZeroPriceImpact(e,t.map((e=>BigInt(e))));return xe(BigInt(a),n).toString()}}class Je{constructor(e=new Ke,t=new je,a=new He,n=new Xe,s=new Ze){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=s}}class ze{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:s,wrappedNativeAsset:i,singleTokenMaxOut:r})=>{throw new Error("To be implemented")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:s,wrappedNativeAsset:i})=>{throw new Error("To be implemented")}}}class Ye{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:s,wrappedNativeAsset:i})=>{throw new Error("To be implemented")}}}const Qe=18,et=me("1",Qe);class tt{calcTotal(e){var t,n;let s=a.Zero,i=a.Zero;for(let a=0;a<e.length;a++){const n=e[a];if(!(null===(t=n.price)||void 0===t?void 0:t.usd))continue;const r=me(n.price.usd.toString(),Qe),o=me(n.balance,Qe),d=o.mul(r);i=i.add(d),s=s.add(o)}if(s.gt(0)){const t=i.div(s);for(let a=0;a<e.length;a++){const r=e[a];if(null===(n=r.price)||void 0===n?void 0:n.usd)continue;const o=me(r.priceRate||"1",Qe),d=me(r.balance,Qe).mul(o).div(et),p=d.mul(t);i=i.add(p),s=s.add(d)}}return be(i,36)}}class at{calcPoolSpotPrice(e,t,a){const n=p.LinearPool.fromPool(a),s=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(s,p.ZERO).toString()}}class nt{bptZeroPriceImpact(e,t){throw new Error("Linear Pool bptZeroPriceImpact Not Implented")}calcPriceImpact(e,t,a){throw new Error("Linear Pool Price Impact Not Implented")}}class st{constructor(e=new ze,t=new Ye,a=new tt,n=new at,s=new nt){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=s}}class it{constructor(e,t=new Ue,a=new Be,n=new ve,s=new Ve,i=new Je,r=new st){this.weighted=t,this.stable=a,this.composableStable=n,this.metaStable=s,this.stablePhantom=i,this.linear=r}static from(t){switch(t){case"Weighted":case"Investment":case"LiquidityBootstrapping":return new Ue;case"Stable":return new Be;case"ComposableStable":return new ve;case"MetaStable":return new Ve;case"StablePhantom":return new Je;case"AaveLinear":case"ERC4626Linear":return new st;default:throw new ue(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}}}class rt{constructor(e,t){this.pools=e,this.tokenPrices=t}async getLiquidity(e){const t=e.tokens.filter((t=>t.address!==e.address)),a=await Promise.all(t.map((async e=>{const t=await this.pools.findBy("address",e.address);if(!t)return;const a=me(await this.getLiquidity(t),18),n=me(t.totalShares,18),s=me(e.balance,18),i=a.mul(s).div(n);return{address:t.address,liquidity:i.toString()}}))),s=a.reduce(((e,t)=>t?e.add(t.liquidity):n.BigNumber.from(0)),n.BigNumber.from(0)),i=t.filter((e=>!a.find((t=>(null==t?void 0:t.address)===e.address)))),r=await Promise.all(i.map((async e=>{const t=await this.tokenPrices.find(e.address);return{address:e.address,decimals:e.decimals,priceRate:e.priceRate,price:t,balance:e.balance,weight:e.weight}}))),o=me(it.from(e.poolType).liquidity.calcTotal(r),18);return be(s.add(o),18)}}async function ot(e,t,n,s){const i={sender:a.AddressZero,recipient:a.AddressZero,fromInternalBalance:!1,toInternalBalance:!1};try{return(await e.callStatic.queryBatchSwap(t,n,s,i)).map((e=>e.toString()))}catch(e){throw`queryBatchSwap call error: ${e}`}}async function dt(t,n,s){s.fetchPools.fetchPools&&await t.fetchPools();const i=[],r=[];for(let n=0;n<s.tokensIn.length;n++){const o=await pt(s.tokensIn[n],s.tokensOut[n],s.swapType,s.amounts[n].toString(),t);if(!o.returnAmount.gt(a.Zero))throw new ue(e.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);i.push(o.swaps),r.push(o.tokenAddresses)}const o=function(e,t){const a=[...new Set(e.flat())];t.forEach(((t,n)=>{t.forEach((t=>{t.assetInIndex=a.indexOf(e[n][t.assetInIndex]),t.assetOutIndex=a.indexOf(e[n][t.assetOutIndex])}))}));return{swaps:t.flat(),assets:a}}(r,i),d=s.swapType===e.SwapType.SwapExactIn?s.tokensOut:s.tokensIn,p=Array(d.length).fill("0");let l=Array(o.assets.length).fill("0");try{l=await ot(n,s.swapType,o.swaps,o.assets),l.length>0&&d.forEach(((e,t)=>{var n;return p[t]=null!==(n=l[o.assets.indexOf(e.toLowerCase())].toString())&&void 0!==n?n:a.Zero.toString()}))}catch(t){throw new ue(e.BalancerErrorCode.QUERY_BATCH_SWAP)}return{returnAmounts:p,swaps:o.swaps,assets:o.assets,deltas:l.map((e=>e.toString()))}}async function pt(t,a,n,s,i){const r=n===e.SwapType.SwapExactIn?p.SwapTypes.SwapExactIn:p.SwapTypes.SwapExactOut;return await i.getSwaps(t.toLowerCase(),a.toLowerCase(),r,s)}var lt=function(){return lt=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var s in t=arguments[a])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e},lt.apply(this,arguments)},ut=new Map,ct=new Map,yt=!0,mt=!1;function bt(e){return e.replace(/[\s,]+/g," ").trim()}function ht(e){var t=new Set,a=[];return e.definitions.forEach((function(e){if("FragmentDefinition"===e.kind){var n=e.name.value,s=bt((r=e.loc).source.body.substring(r.start,r.end)),i=ct.get(n);i&&!i.has(s)?yt&&console.warn("Warning: fragment with name "+n+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"):i||ct.set(n,i=new Set),i.add(s),t.has(s)||(t.add(s),a.push(e))}else a.push(e);var r})),lt(lt({},e),{definitions:a})}function ft(e){var t=bt(e);if(!ut.has(t)){var a=y.parse(e,{experimentalFragmentVariables:mt,allowLegacyFragmentVariables:mt});if(!a||"Document"!==a.kind)throw new Error("Not a valid GraphQL document.");ut.set(t,function(e){var t=new Set(e.definitions);t.forEach((function(e){e.loc&&delete e.loc,Object.keys(e).forEach((function(a){var n=e[a];n&&"object"==typeof n&&t.add(n)}))}));var a=e.loc;return a&&(delete a.startToken,delete a.endToken),e}(ht(a)))}return ut.get(t)}function Tt(e){for(var t=[],a=1;a<arguments.length;a++)t[a-1]=arguments[a];"string"==typeof e&&(e=[e]);var n=e[0];return t.forEach((function(t,a){t&&"Document"===t.kind?n+=t.loc.source.body:n+=t,n+=e[a+1]})),ft(n)}var It,gt=Tt,wt=function(){ut.clear(),ct.clear()},Et=function(){yt=!1},St=function(){mt=!0},_t=function(){mt=!1};(It=Tt||(Tt={})).gql=gt,It.resetCaches=wt,It.disableFragmentWarnings=Et,It.enableExperimentalFragmentVariables=St,It.disableExperimentalFragmentVariables=_t,Tt.default=Tt;var At,xt,Ot,Pt,Nt,Bt,kt,vt,Ct,Rt,Dt,Mt,Ft,Ut,Lt,qt,Wt,$t,Gt,Vt,Kt,jt,Ht,Xt,Zt,Jt=Tt;!function(e){e.EndAmp="endAmp",e.EndTimestamp="endTimestamp",e.Id="id",e.PoolId="poolId",e.ScheduledTimestamp="scheduledTimestamp",e.StartAmp="startAmp",e.StartTimestamp="startTimestamp"}(At||(At={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Timestamp="timestamp",e.TotalLiquidity="totalLiquidity",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.Vault="vault"}(xt||(xt={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Pools="pools",e.TotalLiquidity="totalLiquidity",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(Ot||(Ot={})),function(e){e.EndTimestamp="endTimestamp",e.EndWeights="endWeights",e.Id="id",e.PoolId="poolId",e.ScheduledTimestamp="scheduledTimestamp",e.StartTimestamp="startTimestamp",e.StartWeights="startWeights"}(Pt||(Pt={})),function(e){e.Exit="Exit",e.Join="Join"}(Nt||(Nt={})),function(e){e.Amounts="amounts",e.Id="id",e.Pool="pool",e.Sender="sender",e.Timestamp="timestamp",e.Tx="tx",e.Type="type",e.User="user"}(Bt||(Bt={})),function(e){e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.Price="price",e.PricingAsset="pricingAsset"}(kt||(kt={})),function(e){e.CashDelta="cashDelta",e.Id="id",e.ManagedDelta="managedDelta",e.PoolTokenId="poolTokenId",e.Timestamp="timestamp",e.Type="type"}(vt||(vt={})),function(e){e.Deposit="Deposit",e.Update="Update",e.Withdraw="Withdraw"}(Ct||(Ct={})),function(e){e.Asc="asc",e.Desc="desc"}(Rt||(Rt={})),function(e){e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolLiquidity="poolLiquidity",e.PoolShareValue="poolShareValue",e.PoolTotalShares="poolTotalShares",e.PricingAsset="pricingAsset"}(Dt||(Dt={})),function(e){e.Balance="balance",e.Id="id",e.PoolId="poolId",e.UserAddress="userAddress"}(Mt||(Mt={})),function(e){e.Amounts="amounts",e.HoldersCount="holdersCount",e.Id="id",e.Liquidity="liquidity",e.Pool="pool",e.SwapFees="swapFees",e.SwapVolume="swapVolume",e.SwapsCount="swapsCount",e.Timestamp="timestamp",e.TotalShares="totalShares"}(Ft||(Ft={})),function(e){e.Address="address",e.AssetManager="assetManager",e.Balance="balance",e.CashBalance="cashBalance",e.Decimals="decimals",e.Id="id",e.ManagedBalance="managedBalance",e.Managements="managements",e.Name="name",e.PoolId="poolId",e.PriceRate="priceRate",e.Symbol="symbol",e.Token="token",e.Weight="weight"}(Ut||(Ut={})),function(e){e.Address="address",e.Amp="amp",e.BaseToken="baseToken",e.CreateTime="createTime",e.ExpiryTime="expiryTime",e.Factory="factory",e.HistoricalValues="historicalValues",e.HoldersCount="holdersCount",e.Id="id",e.LowerTarget="lowerTarget",e.MainIndex="mainIndex",e.ManagementFee="managementFee",e.Name="name",e.OracleEnabled="oracleEnabled",e.Owner="owner",e.PoolType="poolType",e.PriceRateProviders="priceRateProviders",e.PrincipalToken="principalToken",e.Root3Alpha="root3Alpha",e.Shares="shares",e.Snapshots="snapshots",e.SqrtAlpha="sqrtAlpha",e.SqrtBeta="sqrtBeta",e.StrategyType="strategyType",e.SwapEnabled="swapEnabled",e.SwapFee="swapFee",e.Swaps="swaps",e.SwapsCount="swapsCount",e.Symbol="symbol",e.Tokens="tokens",e.TokensList="tokensList",e.TotalLiquidity="totalLiquidity",e.TotalShares="totalShares",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.TotalWeight="totalWeight",e.Tx="tx",e.UnitSeconds="unitSeconds",e.UpperTarget="upperTarget",e.VaultId="vaultID",e.WeightUpdates="weightUpdates",e.WrappedIndex="wrappedIndex"}(Lt||(Lt={})),function(e){e.Address="address",e.CacheDuration="cacheDuration",e.CacheExpiry="cacheExpiry",e.Id="id",e.LastCached="lastCached",e.PoolId="poolId",e.Rate="rate",e.Token="token"}(qt||(qt={})),function(e){e.Caller="caller",e.Id="id",e.PoolId="poolId",e.Timestamp="timestamp",e.TokenAmountIn="tokenAmountIn",e.TokenAmountOut="tokenAmountOut",e.TokenIn="tokenIn",e.TokenInSym="tokenInSym",e.TokenOut="tokenOut",e.TokenOutSym="tokenOutSym",e.Tx="tx",e.UserAddress="userAddress",e.ValueUsd="valueUSD"}(Wt||(Wt={})),function(e){e.Amount="amount",e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.Price="price",e.PricingAsset="pricingAsset",e.Timestamp="timestamp"}($t||($t={})),function(e){e.Id="id",e.Timestamp="timestamp",e.Token="token",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(Gt||(Gt={})),function(e){e.Address="address",e.Decimals="decimals",e.Id="id",e.LatestPrice="latestPrice",e.LatestUsdPrice="latestUSDPrice",e.Name="name",e.Pool="pool",e.Symbol="symbol",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(Vt||(Vt={})),function(e){e.Id="id",e.Pair="pair",e.Timestamp="timestamp",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(Kt||(Kt={})),function(e){e.Id="id",e.Token0="token0",e.Token1="token1",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(jt||(jt={})),function(e){e.Balance="balance",e.Id="id",e.Token="token",e.UserAddress="userAddress"}(Ht||(Ht={})),function(e){e.Id="id",e.SharesOwned="sharesOwned",e.Swaps="swaps",e.UserInternalBalances="userInternalBalances"}(Xt||(Xt={})),function(e){e.Allow="allow",e.Deny="deny"}(Zt||(Zt={}));const zt=Jt`
    fragment SubgraphPoolToken on PoolToken {
  id
  symbol
  name
  decimals
  address
  balance
  managedBalance
  weight
  priceRate
  token {
    pool {
      poolType
    }
  }
}
    `,Yt=Jt`
    fragment SubgraphPool on Pool {
  id
  address
  poolType
  factory
  strategyType
  symbol
  name
  swapEnabled
  swapFee
  owner
  totalWeight
  totalSwapVolume
  totalSwapFee
  totalLiquidity
  totalShares
  tokens(first: 100) {
    ...SubgraphPoolToken
  }
  swapsCount
  holdersCount
  tokensList
  amp
  expiryTime
  unitSeconds
  createTime
  principalToken
  baseToken
  wrappedIndex
  mainIndex
  lowerTarget
  upperTarget
  sqrtAlpha
  sqrtBeta
  root3Alpha
}
    ${zt}`,Qt=Jt`
    fragment SubgraphPoolWithoutLinear on Pool {
  id
  address
  poolType
  symbol
  name
  swapFee
  totalWeight
  totalSwapVolume
  totalSwapFee
  totalLiquidity
  totalShares
  tokens(first: 1000) {
    ...SubgraphPoolToken
  }
  swapsCount
  holdersCount
  tokensList
  totalWeight
  amp
  expiryTime
  unitSeconds
  principalToken
  baseToken
  swapEnabled
}
    ${zt}`,ea=Jt`
    fragment SubgraphPoolSnapshot on PoolSnapshot {
  id
  pool {
    id
  }
  totalShares
  swapVolume
  swapFees
  timestamp
}
    `,ta=Jt`
    fragment SubgraphJoinExit on JoinExit {
  amounts
  id
  sender
  timestamp
  tx
  type
  user {
    id
  }
  pool {
    id
    tokensList
  }
}
    `,aa=Jt`
    fragment SubgraphBalancer on Balancer {
  id
  totalLiquidity
  totalSwapVolume
  totalSwapFee
  totalSwapCount
  poolCount
}
    `,na=Jt`
    fragment SubgraphTokenPrice on TokenPrice {
  id
  poolId {
    id
  }
  asset
  amount
  pricingAsset
  price
  block
  timestamp
}
    `,sa=Jt`
    fragment SubgraphTokenLatestPrice on LatestPrice {
  id
  asset
  price
  poolId {
    id
  }
  pricingAsset
}
    `,ia=Jt`
    fragment SubgraphUser on User {
  id
  sharesOwned(first: 1000) {
    balance
    poolId {
      id
    }
  }
}
    `,ra=Jt`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${Yt}`,oa=Jt`
    query AllPools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pool0: pools(
    first: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool1000: pools(
    first: 1000
    skip: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool2000: pools(
    first: 1000
    skip: 2000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${Yt}`,da=Jt`
    query Pool($id: ID!, $block: Block_height) {
  pool(id: $id, block: $block) {
    ...SubgraphPool
  }
}
    ${Yt}`,pa=Jt`
    query PoolsWithoutLinear($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolWithoutLinear
  }
}
    ${Qt}`,la=Jt`
    query PoolWithoutLinear($id: ID!, $block: Block_height) {
  pool(id: $id, block: $block) {
    ...SubgraphPoolWithoutLinear
  }
}
    ${Qt}`,ua=Jt`
    query PoolHistoricalLiquidities($skip: Int, $first: Int, $orderBy: PoolHistoricalLiquidity_orderBy, $orderDirection: OrderDirection, $where: PoolHistoricalLiquidity_filter, $block: Block_height) {
  poolHistoricalLiquidities(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    id
    poolId {
      id
    }
    poolTotalShares
    poolLiquidity
    poolShareValue
    pricingAsset
    block
  }
}
    `,ca=Jt`
    query PoolSnapshots($skip: Int, $first: Int, $orderBy: PoolSnapshot_orderBy, $orderDirection: OrderDirection, $where: PoolSnapshot_filter, $block: Block_height) {
  poolSnapshots(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolSnapshot
  }
}
    ${ea}`,ya=Jt`
    query JoinExits($skip: Int, $first: Int, $orderBy: JoinExit_orderBy, $orderDirection: OrderDirection, $where: JoinExit_filter, $block: Block_height) {
  joinExits(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphJoinExit
  }
}
    ${ta}`,ma=Jt`
    query Balancers($skip: Int, $first: Int, $orderBy: Balancer_orderBy, $orderDirection: OrderDirection, $where: Balancer_filter, $block: Block_height) {
  balancers(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphBalancer
  }
}
    ${aa}`,ba=Jt`
    query TokenPrices($skip: Int, $first: Int, $orderBy: TokenPrice_orderBy, $orderDirection: OrderDirection, $where: TokenPrice_filter, $block: Block_height) {
  tokenPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenPrice
  }
}
    ${na}`,ha=Jt`
    query TokenLatestPrices($skip: Int, $first: Int, $orderBy: LatestPrice_orderBy, $orderDirection: OrderDirection, $where: LatestPrice_filter, $block: Block_height) {
  latestPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenLatestPrice
  }
}
    ${sa}`,fa=Jt`
    query TokenLatestPrice($id: ID!) {
  latestPrice(id: $id) {
    ...SubgraphTokenLatestPrice
  }
}
    ${sa}`,Ta=Jt`
    query User($id: ID!, $block: Block_height) {
  user(id: $id, block: $block) {
    ...SubgraphUser
  }
}
    ${ia}`,Ia=Jt`
    query Users($skip: Int, $first: Int, $orderBy: User_orderBy, $orderDirection: OrderDirection, $where: User_filter, $block: Block_height) {
  users(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphUser
  }
}
    ${ia}`,ga=(e,t,a)=>e();function wa(e,t=ga){return{Pools:(a,n)=>t((t=>e.request(ra,a,{...n,...t})),"Pools","query"),AllPools:(a,n)=>t((t=>e.request(oa,a,{...n,...t})),"AllPools","query"),Pool:(a,n)=>t((t=>e.request(da,a,{...n,...t})),"Pool","query"),PoolsWithoutLinear:(a,n)=>t((t=>e.request(pa,a,{...n,...t})),"PoolsWithoutLinear","query"),PoolWithoutLinear:(a,n)=>t((t=>e.request(la,a,{...n,...t})),"PoolWithoutLinear","query"),PoolHistoricalLiquidities:(a,n)=>t((t=>e.request(ua,a,{...n,...t})),"PoolHistoricalLiquidities","query"),PoolSnapshots:(a,n)=>t((t=>e.request(ca,a,{...n,...t})),"PoolSnapshots","query"),JoinExits:(a,n)=>t((t=>e.request(ya,a,{...n,...t})),"JoinExits","query"),Balancers:(a,n)=>t((t=>e.request(ma,a,{...n,...t})),"Balancers","query"),TokenPrices:(a,n)=>t((t=>e.request(ba,a,{...n,...t})),"TokenPrices","query"),TokenLatestPrices:(a,n)=>t((t=>e.request(ha,a,{...n,...t})),"TokenLatestPrices","query"),TokenLatestPrice:(a,n)=>t((t=>e.request(fa,a,{...n,...t})),"TokenLatestPrice","query"),User:(a,n)=>t((t=>e.request(Ta,a,{...n,...t})),"User","query"),Users:(a,n)=>t((t=>e.request(Ia,a,{...n,...t})),"Users","query")}}var Ea,Sa,_a,Aa,xa,Oa,Pa,Na,Ba,ka,va,Ca,Ra,Da,Ma;!function(e){e.Arbitrum="Arbitrum",e.Optimism="Optimism",e.Polygon="Polygon"}(Ea||(Ea={})),function(e){e.Gauges="gauges",e.Id="id",e.NumGauges="numGauges"}(Sa||(Sa={})),function(e){e.Balance="balance",e.Gauge="gauge",e.Id="id",e.User="user"}(_a||(_a={})),function(e){e.Id="id",e.Name="name"}(Aa||(Aa={})),function(e){e.Gauge="gauge",e.Id="id",e.Timestamp="timestamp",e.User="user",e.Weight="weight"}(xa||(xa={})),function(e){e.AddedTimestamp="addedTimestamp",e.Address="address",e.Id="id",e.LiquidityGauge="liquidityGauge",e.RootGauge="rootGauge",e.Type="type"}(Oa||(Oa={})),function(e){e.Factory="factory",e.Gauge="gauge",e.Id="id",e.IsKilled="isKilled",e.IsPreferentialGauge="isPreferentialGauge",e.Pool="pool",e.PoolAddress="poolAddress",e.PoolId="poolId",e.RelativeWeightCap="relativeWeightCap",e.Shares="shares",e.Streamer="streamer",e.Symbol="symbol",e.Tokens="tokens",e.TotalSupply="totalSupply"}(Pa||(Pa={})),function(e){e.Asc="asc",e.Desc="desc"}(Na||(Na={})),function(e){e.Address="address",e.Gauges="gauges",e.GaugesList="gaugesList",e.Id="id",e.PoolId="poolId",e.PreferentialGauge="preferentialGauge"}(Ba||(Ba={})),function(e){e.Decimals="decimals",e.Gauge="gauge",e.Id="id",e.Symbol="symbol",e.TotalDeposited="totalDeposited"}(ka||(ka={})),function(e){e.Chain="chain",e.Factory="factory",e.Gauge="gauge",e.Id="id",e.IsKilled="isKilled",e.Recipient="recipient",e.RelativeWeightCap="relativeWeightCap"}(va||(va={})),function(e){e.GaugeShares="gaugeShares",e.GaugeVotes="gaugeVotes",e.Id="id",e.VotingLocks="votingLocks"}(Ca||(Ca={})),function(e){e.Id="id",e.LockedBalance="lockedBalance",e.UnlockTime="unlockTime",e.UpdatedAt="updatedAt",e.User="user",e.VotingEscrowId="votingEscrowID"}(Ra||(Ra={})),function(e){e.Id="id",e.Locks="locks",e.StakedSupply="stakedSupply"}(Da||(Da={})),function(e){e.Allow="allow",e.Deny="deny"}(Ma||(Ma={}));const Fa=Jt`
    fragment SubgraphLiquidityGauge on LiquidityGauge {
  id
  symbol
  poolAddress
  poolId
  streamer
  factory {
    id
    numGauges
  }
  totalSupply
  tokens {
    id
    symbol
    decimals
    totalDeposited
  }
}
    `,Ua=Jt`
    fragment SubgraphPoolWithPreferentialGauge on Pool {
  id
  poolId
  preferentialGauge {
    ...SubgraphLiquidityGauge
  }
}
    ${Fa}`,La=Jt`
    query LiquidityGauges($skip: Int, $first: Int, $orderBy: LiquidityGauge_orderBy, $orderDirection: OrderDirection, $where: LiquidityGauge_filter, $block: Block_height) {
  liquidityGauges(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphLiquidityGauge
  }
}
    ${Fa}`,qa=Jt`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolWithPreferentialGauge
  }
}
    ${Ua}`,Wa=(e,t,a)=>e();function $a(e){return wa(new c.GraphQLClient(e))}function Ga(e){return function(e,t=Wa){return{LiquidityGauges:(a,n)=>t((t=>e.request(La,a,{...n,...t})),"LiquidityGauges","query"),Pools:(a,n)=>t((t=>e.request(qa,a,{...n,...t})),"Pools","query")}}(new c.GraphQLClient(e))}const Va=["function aggregate(tuple[](address target, bytes callData) memory calls) public view returns (uint256 blockNumber, bytes[] memory returnData)"],Ka=(e,t)=>new o.Contract(e,Va,t);class ja{constructor(e,a,n,s={}){this.options={},this.calls=[],this.paths=[],this.multiAddress=e,this.provider=a,this.interface=new t.Interface(n),this.options=s}call(e,t,a,n){return this.calls.push([t,a,n]),this.paths.push(e),this}async execute(e={}){const t=e;return(await this.executeMulticall()).forEach(((e,a)=>d.set(t,this.paths[a],e.length>1?e:e[0]))),this.calls=[],this.paths=[],t}async executeMulticall(){const e=Ka(this.multiAddress,this.provider),[,t]=await e.aggregate(this.calls.map((([e,t,a])=>[e,this.interface.encodeFunctionData(t,a)])),this.options);return t.map(((e,t)=>this.interface.decodeFunctionResult(this.calls[t][1],e)))}}var Ha=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNormalizedWeights",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"increaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],Xa=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],Za=[{inputs:[{internalType:"contract IERC20",name:"_underlying",type:"address"},{internalType:"contract IERC20",name:"_bond",type:"address"},{internalType:"uint256",name:"_expiration",type:"uint256"},{internalType:"uint256",name:"_unitSeconds",type:"uint256"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"uint256",name:"_percentFee",type:"uint256"},{internalType:"uint256",name:"_percentFeeGov",type:"uint256"},{internalType:"address",name:"_governance",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"collectedBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collectedBond",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBond",type:"uint256"}],name:"FeeCollection",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"FEE_BOUND",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"bond",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"bondDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"expiration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesBond",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesUnderlying",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"governance",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"increaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256",name:"currentBalanceTokenIn",type:"uint256"},{internalType:"uint256",name:"currentBalanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"percentFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"percentFeeGov",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountX",type:"uint256"},{internalType:"uint256",name:"reserveX",type:"uint256"},{internalType:"uint256",name:"reserveY",type:"uint256"},{internalType:"bool",name:"out",type:"bool"}],name:"solveTradeInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"underlying",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"underlyingDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"unitSeconds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],Ja=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],za=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct ComposableStablePool.NewPoolParams",name:"params",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rate",type:"uint256"}],name:"TokenRateCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!0,internalType:"contract IRateProvider",name:"provider",type:"address"},{indexed:!1,internalType:"uint256",name:"cacheDuration",type:"uint256"}],name:"TokenRateProviderSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastJoinExitData",outputs:[{internalType:"uint256",name:"lastJoinExitAmplification",type:"uint256"},{internalType:"uint256",name:"lastPostJoinExitInvariant",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinimumBpt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRateCache",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"oldRate",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"expires",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"isTokenExemptFromYieldProtocolFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"duration",type:"uint256"}],name:"setTokenRateCacheDuration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"updateTokenRateCache",outputs:[],stateMutability:"nonpayable",type:"function"}];const Ya=[e.Network.MAINNET,e.Network.POLYGON,e.Network.ROPSTEN,e.Network.RINKEBY,e.Network.GOERLI,e.Network.KOVAN];class Qa{constructor(e,t,a,n){this.client=e,this.provider=t,this.network=a,this.sorConfig=n}async getPools(){const e=function(e){return e.map((e=>({...e,poolType:e.poolType||"",tokens:(e.tokens||[]).map((e=>({...e,weight:e.weight||null}))),totalWeight:e.totalWeight||void 0,amp:e.amp||void 0,expiryTime:e.expiryTime?d.parseInt(e.expiryTime):void 0,unitSeconds:e.unitSeconds?d.parseInt(e.unitSeconds):void 0,principalToken:e.principalToken||void 0,baseToken:e.baseToken||void 0})))}(this.supportsLinearPools?await this.getLinearPools():await this.getNonLinearPools());return!1===this.sorConfig.fetchOnChainBalances?e:async function(e,t,a,s){if(0===e.length)return e;const i=Object.values(Object.fromEntries([...l.Vault__factory.abi,...K,...Ha,...Xa,...Za,...Ja,...za].map((e=>[e.name,e])))),r=new ja(t,s,i),o=Object.values(p.PoolFilter),d=[];e.forEach((e=>{o.includes(e.poolType)?(d.push(e),r.call(`${e.id}.poolTokens`,a,"getPoolTokens",[e.id]),r.call(`${e.id}.totalSupply`,e.address,"totalSupply"),(e.poolType.includes("Linear")||"StablePhantom"===e.poolType)&&r.call(`${e.id}.virtualSupply`,e.address,"getVirtualSupply"),"ComposableStable"===e.poolType&&r.call(`${e.id}.actualSupply`,e.address,"getActualSupply"),"Weighted"===e.poolType||"LiquidityBootstrapping"===e.poolType||"Investment"===e.poolType?(r.call(`${e.id}.weights`,e.address,"getNormalizedWeights"),r.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage")):"Stable"===e.poolType||"MetaStable"===e.poolType||"StablePhantom"===e.poolType||"ComposableStable"===e.poolType?(r.call(`${e.id}.amp`,e.address,"getAmplificationParameter"),r.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage")):"Element"===e.poolType?r.call(`${e.id}.swapFee`,e.address,"percentFee"):e.poolType.toString().includes("Linear")?(r.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage"),r.call(`${e.id}.targets`,e.address,"getTargets"),r.call(`${e.id}.rate`,e.address,"getWrappedTokenRate")):e.poolType.toString().includes("Gyro")&&r.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage")):console.error(`Unknown pool type: ${e.poolType} ${e.id}`)}));let u={};try{u=await r.execute()}catch(e){throw"Issue with multicall execution."}const c=[];return Object.entries(u).forEach((([e,t],a)=>{try{const{poolTokens:s,swapFee:i,weights:r,totalSupply:o,virtualSupply:p,actualSupply:l}=t;if("Stable"===d[a].poolType||"MetaStable"===d[a].poolType||"StablePhantom"===d[a].poolType||"ComposableStable"===d[a].poolType){if(!t.amp)return void console.error(`Stable Pool Missing Amp: ${e}`);d[a].amp=n.formatFixed(t.amp[0],3)}if(d[a].poolType.includes("Linear")){if(!t.targets)return void console.error(`Linear Pool Missing Targets: ${e}`);d[a].lowerTarget=n.formatFixed(t.targets[0],18),d[a].upperTarget=n.formatFixed(t.targets[1],18);const s=d[a].wrappedIndex;if(void 0===s||void 0===t.rate)return void console.error(`Linear Pool Missing WrappedIndex or PriceRate: ${e}`);d[a].tokens[s].priceRate=n.formatFixed(t.rate,18)}if(d[a].swapFee=n.formatFixed(i,18),s.tokens.forEach(((t,i)=>{const o=d[a].tokens.find((e=>H(e.address,t)));if(!o)throw`Pool Missing Expected Token: ${e} ${t}`;o.balance=n.formatFixed(s.balances[i],o.decimals),r&&(o.weight=n.formatFixed(r[i],18))})),d[a].poolType.includes("Linear")||"StablePhantom"===d[a].poolType){if(void 0===p)return void console.error(`Pool with pre-minted BPT missing Virtual Supply: ${e}`);d[a].totalShares=n.formatFixed(p,18)}else if("ComposableStable"===d[a].poolType){if(void 0===l)return void console.error(`ComposableStable missing Actual Supply: ${e}`);d[a].totalShares=n.formatFixed(l,18)}else d[a].totalShares=n.formatFixed(o,18);c.push(d[a])}catch(e){throw`Issue with pool onchain data: ${e}`}})),c}(e,this.network.addresses.contracts.multicall,this.network.addresses.contracts.vault,this.provider)}get supportsLinearPools(){return Ya.includes(this.network.chainId)}async getLinearPools(){const{pool0:e,pool1000:t,pool2000:a}=await this.client.AllPools({where:{swapEnabled:!0,totalShares_gt:"0"},orderBy:Lt.TotalLiquidity,orderDirection:Rt.Desc});return[...e,...t,...a]}async getNonLinearPools(){const{pools:e}=await this.client.PoolsWithoutLinear({where:{swapEnabled:!0,totalShares_gt:"0"},orderBy:Lt.TotalLiquidity,orderDirection:Rt.Desc,first:1e3});return e}}class en{constructor(e){this.chainId=e}async getNativeAssetPriceInToken(e){const t=await this.getTokenPriceInNativeAsset(e);return""+1/parseFloat(t)}async getTokenPriceInNativeAsset(e){const t=`https://api.coingecko.com/api/v3/simple/token_price/${this.platformId}?contract_addresses=${e}&vs_currencies=${this.nativeAssetId}`,{data:a}=await _.default.get(t,{headers:{Accept:"application/json","Content-Type":"application/json"}});if(void 0===a[e.toLowerCase()][this.nativeAssetId])throw Error("No price returned from Coingecko");return a[e.toLowerCase()][this.nativeAssetId]}get platformId(){switch(this.chainId){case 1:case 42:return"ethereum";case 137:return"polygon-pos";case 42161:return"arbitrum-one"}return"2"}get nativeAssetId(){switch(this.chainId){case 1:case 42:case 42161:return"eth";case 137:return""}return""}}class tn{constructor(e,t){this.client=e,this.weth=t.toLowerCase()}async getNativeAssetPriceInToken(e){const t=await this.getLatestPriceInEthFromSubgraph(e);if(!t)throw Error("No price found in the subgraph");return""+1/t}async getLatestPriceInEthFromSubgraph(e){e=e.toLowerCase();const{latestPrices:t}=await this.client.TokenLatestPrices({where:{asset_in:[e,this.weth]}}),a=d.keyBy(t,"id");if(a[`${e}-${this.weth}`])return parseFloat(a[`${e}-${this.weth}`].price);const n=t.filter((t=>t.asset===e));for(const e of n){const t=a[`${e.pricingAsset}-${this.weth}`];if(t)return parseFloat(e.price)*parseFloat(t.price)}return null}}function an(e){var t,a;if("number"==typeof e.network){const a=pe[e.network];return{...a,urls:{...a.urls,subgraph:null!==(t=e.customSubgraphUrl)&&void 0!==t?t:a.urls.subgraph}}}return{...e.network,urls:{...e.network.urls,subgraph:null!==(a=e.customSubgraphUrl)&&void 0!==a?a:e.network.urls.subgraph}}}class nn extends p.SOR{constructor(e){const t=an(e),a=nn.getSorConfig(e),n=nn.getSorNetworkConfig(t),s=new u.JsonRpcProvider(e.rpcUrl,e.network),i=$a(t.urls.subgraph);super(s,n,nn.getPoolDataService(t,a,s,i),nn.getTokenPriceService(t,a,i))}static getSorConfig(e){return{tokenPriceService:"coingecko",poolDataService:"subgraph",fetchOnChainBalances:!0,...e.sor}}static getSorNetworkConfig(e){var t;return{...e,vault:e.addresses.contracts.vault,weth:e.addresses.tokens.wrappedNativeAsset,lbpRaisingTokens:null===(t=e.addresses.tokens)||void 0===t?void 0:t.lbpRaisingTokens,wETHwstETH:e.pools.wETHwstETH}}static getPoolDataService(e,t,a,n){return"object"==typeof t.poolDataService?t.poolDataService:new Qa(n,a,e,t)}static getTokenPriceService(e,t,a){return"object"==typeof t.tokenPriceService?t.tokenPriceService:("subgraph"===t.tokenPriceService&&new tn(a,e.addresses.tokens.wrappedNativeAsset),new en(e.chainId))}}function sn(e){if(e.poolIds.length>2)throw new Error("Simple flash swap only supports a maximum of two pools");if(e.assets.length>2)throw new Error("Simple flash swap only supports a maximum of to two assets (tokens)")}function rn(e,t){return[{poolId:e[0],assetInIndex:0,assetOutIndex:1,amount:t,userData:"0x"},{poolId:e[1],assetInIndex:1,assetOutIndex:0,amount:"0",userData:"0x"}]}function on(e){return-1*Number(e)}function dn(e){return d.sum(e)}var pn=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"wstETH",type:"address"},{internalType:"contract IBalancerMinter",name:"minter",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"exitPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge[]",name:"gauges",type:"address[]"}],name:"gaugeClaimRewards",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeDeposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"gaugeMint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"approval",type:"bool"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"gaugeSetMinterApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeWithdraw",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"getEntrypoint",outputs:[{internalType:"contract IBalancerRelayer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"},{internalType:"uint256",name:"value",type:"uint256"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"},{internalType:"bytes",name:"authorisation",type:"bytes"}],name:"setRelayerApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETHAndWrap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapWstETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20Permit",name:"token",type:"address"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20PermitDAI",name:"token",type:"address"},{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"bool",name:"allowed",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermitDAI",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapStETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"uAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"}];const ln={"0xae7ab96520de3a18e5e111b5eaab095312d7fe84":"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0","0xd46ba6d942050d489dbd938a2c909a5d5039a161":"0xedb171c18ce90b633db442f2a6f72874093b49ef","0x1e6bb68acec8fefbd87d192be09bb274170a0548":"0xF03387d8d0FF326ab586A58E0ab4121d106147DF"};function un(e){let t=e;return ln.hasOwnProperty(e)&&(t=ln[e]),t}var cn;function yn(e,t,a){const{tokens:n,contracts:s}=(e=>pe[e].addresses)(a);let i={id:cn.vault,address:s.vault};return n.stETH&&s.lidoRelayer&&[e,t].includes(n.stETH)&&(i={id:cn.lido,address:s.lidoRelayer}),i}function mn(e){let t=l.Vault__factory.abi;e.id===cn.lido&&(t=pn);return t.filter((e=>e.name&&["swap","batchSwap"].includes(e.name)))}function bn(e){return{amount:e,max:t=>e.mul(1e3+t).div(1e3),min:t=>e.mul(1e3-t).div(1e3)}}function hn(t,a){const n=a===e.SwapType.SwapExactIn?t.swapAmount:t.returnAmount,s=a===e.SwapType.SwapExactIn?t.returnAmount:t.swapAmount,i=a===e.SwapType.SwapExactIn?t.swapAmountForSwaps||t.swapAmount:t.returnAmountFromSwaps||t.returnAmount,r=a===e.SwapType.SwapExactIn?t.returnAmountFromSwaps||t.returnAmount:t.swapAmountForSwaps||t.swapAmount,o=un(t.tokenIn),d=un(t.tokenOut);return{...t,amountIn:n,amountOut:s,amountInForLimits:bn(i),amountOutForLimits:bn(r),tokenInForSwaps:o,tokenOutFromSwaps:d}}!function(e){e[e.vault=1]="vault",e[e.lido=2]="lido"}(cn||(cn={}));class fn{constructor(e,t,a){this.kind=t,this.chainId=a,this.functionName="swap",this.swapInfo=hn(e,t),this.relayer=yn(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e.toString()}get amount(){return this.kind===e.SwapType.SwapExactOut?this.swapInfo.amountOutForLimits.amount:this.swapInfo.amountInForLimits.amount}setLimits(t){this.limit=this.kind===e.SwapType.SwapExactIn?this.swapInfo.amountOutForLimits.min(t).toString():this.swapInfo.amountInForLimits.max(t).toString()}get singleSwap(){return{poolId:this.swapInfo.swaps[0].poolId,kind:this.kind,assetIn:this.swapInfo.tokenInForSwaps,assetOut:this.swapInfo.tokenOutFromSwaps,amount:this.amount.toString(),userData:"0x"}}attributes(){var e;if(!this.funds||!this.limit||!this.deadline)throw new Error("Uninitialized arguments");let t={request:this.singleSwap,funds:this.funds,limit:this.limit,deadline:this.deadline};const a=this.fragment();return a[0].inputs&&(null===(e=a[0].inputs)||void 0===e?void 0:e.length)>4&&(t={...t,value:"0",outputReference:"0"}),t}data(){return new t.Interface(this.fragment()).encodeFunctionData("swap",Object.values(this.attributes()))}value(t){let s=n.BigNumber.from(0);return this.swapInfo.tokenIn===a.AddressZero&&(s=this.kind===e.SwapType.SwapExactIn?this.swapInfo.amountIn:this.swapInfo.amountInForLimits.max(t)),s}to(){return this.relayer.address}fragment(){return mn(this.relayer).filter((e=>e.name===this.functionName))}}class Tn{constructor(e,t,a){this.kind=t,this.chainId=a,this.functionName="batchSwap",this.swapInfo=hn(e,t),this.relayer=yn(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e}minAmountOut(t){return this.kind===e.SwapType.SwapExactIn?this.swapInfo.amountOutForLimits.min(t):this.swapInfo.amountOutForLimits.amount}maxAmountIn(t){return this.kind===e.SwapType.SwapExactOut?this.swapInfo.amountInForLimits.max(t):this.swapInfo.amountInForLimits.amount}setLimits(e){this.limits=this.swapInfo.tokenAddresses.map((t=>{let a=n.BigNumber.from(0);return t===this.swapInfo.tokenInForSwaps&&(a=this.maxAmountIn(e)),t===this.swapInfo.tokenOutFromSwaps&&(a=this.minAmountOut(e).mul(-1)),a})).map((e=>e.toString().split(".")[0]))}attributes(){var e;if(!this.funds||!this.limits||!this.deadline)throw new Error("Uninitialized arguments");let t={kind:this.kind,swaps:this.swapInfo.swaps,assets:this.swapInfo.tokenAddresses,funds:this.funds,limits:this.limits,deadline:this.deadline};const a=this.fragment();return a[0].inputs&&(null===(e=a[0].inputs)||void 0===e?void 0:e.length)>6&&(t={...t,value:"0",outputReferences:[]}),t}data(){return new t.Interface(this.fragment()).encodeFunctionData("batchSwap",Object.values(this.attributes()))}value(e){let t=n.BigNumber.from(0);return this.swapInfo.tokenIn===a.AddressZero&&(t=this.maxAmountIn(e)),t}to(){return this.relayer.address}fragment(){return mn(this.relayer).filter((e=>e.name===this.functionName))}}class In{constructor(e){e instanceof p.SOR?(this.sor=e,this.chainId=this.sor.provider._network.chainId):(this.sor=new nn(e),this.chainId=e.network),this.vaultContract=l.Vault__factory.connect(de,this.sor.provider)}static getLimitsForSlippage(e,t,a,n,s,i){return ne(e,t,a,n,s,i).map((e=>e.toString()))}async findRouteGivenIn({tokenIn:e,tokenOut:t,amount:a,gasPrice:n,maxPools:s=4}){return this.sor.getSwaps(e,t,p.SwapTypes.SwapExactIn,a,{gasPrice:n,maxPools:s})}async findRouteGivenOut({tokenIn:e,tokenOut:t,amount:a,gasPrice:n,maxPools:s}){return this.sor.getSwaps(e,t,p.SwapTypes.SwapExactOut,a,{gasPrice:n,maxPools:s})}buildSwap({userAddress:e,recipient:t,swapInfo:a,kind:n,deadline:s,maxSlippage:i}){if(!this.chainId)throw"Missing network configuration";const r=a.swaps.length>1?new Tn(a,n,this.chainId):new fn(a,n,this.chainId);r.setFunds(e,t),r.setDeadline(s),r.setLimits(i);const o=r.to(),{functionName:d}=r;return{to:o,functionName:d,attributes:r.attributes(),data:r.data(),value:r.value(i)}}static encodeBatchSwap(e){return l.Vault__factory.createInterface().encodeFunctionData("batchSwap",[e.kind,e.swaps,e.assets,e.funds,e.limits,e.deadline])}static encodeSimpleFlashSwap(t){return this.encodeBatchSwap(function({poolIds:t,assets:a,flashLoanAmount:n,walletAddress:s}){sn({poolIds:t,assets:a});const i=rn(t,n),r={sender:s,fromInternalBalance:!1,recipient:s,toInternalBalance:!1};return{kind:e.SwapType.SwapExactIn,swaps:i,assets:a,funds:r,limits:["0","0"],deadline:"999999999999999999"}}(t))}async fetchPools(){return this.sor.fetchPools()}getPools(){return this.sor.getPools()}async queryBatchSwap(e){return await ot(this.vaultContract,e.kind,e.swaps,e.assets)}async queryBatchSwapWithSor(e){return await dt(this.sor,this.vaultContract,e)}async querySimpleFlashSwap(t){return await async function(t){sn(t);const[a,n]=t.assets;try{const s=await ot(t.vaultContract,e.SwapType.SwapExactIn,rn(t.poolIds,t.flashLoanAmount),t.assets),i={[a]:on(s[0]).toString(),[n]:on(s[1]).toString()};return{profits:i,isProfitable:dn([i[a],i[n]])>0}}catch(e){throw`Failed to querySimpleFlashSwap: ${e}`}}({...t,vaultContract:this.vaultContract})}async getSorSwap(e){return await pt(e.tokenIn,e.tokenOut,e.swapType,e.amount,this.sor)}}var gn=[{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"}];const wn=new t.Interface(pn);class En{constructor(e){this.swaps=e instanceof In?e:new In(e)}static encodeApproveVault(e,t){return wn.encodeFunctionData("approveVault",[e,t])}static encodeSetRelayerApproval(e,t,a){return wn.encodeFunctionData("setRelayerApproval",[e,t,a])}static encodeGaugeWithdraw(e,t,a,n){return wn.encodeFunctionData("gaugeWithdraw",[e,t,a,n])}static encodeGaugeDeposit(e,t,a,n){return wn.encodeFunctionData("gaugeDeposit",[e,t,a,n])}static encodeBatchSwap(e){return wn.encodeFunctionData("batchSwap",[e.swapType,e.swaps,e.assets,e.funds,e.limits,e.deadline,e.value,e.outputReferences])}static encodeExitPool(e){return wn.encodeFunctionData("exitPool",[e.poolId,e.poolKind,e.sender,e.recipient,e.exitPoolRequest,e.outputReferences])}static encodeUnwrapAaveStaticToken(e){return new t.Interface(gn).encodeFunctionData("unwrapAaveStaticToken",[e.staticToken,e.sender,e.recipient,e.amount,e.toUnderlying,e.outputReferences])}static toChainedReference(e){const t=`0x${En.CHAINED_REFERENCE_PREFIX}${"0".repeat(64-En.CHAINED_REFERENCE_PREFIX.length)}`;return n.BigNumber.from(t).add(e)}static constructExitCall(e){const{assets:t,minAmountsOut:a,userData:n,toInternalBalance:s,poolId:i,poolKind:r,sender:o,recipient:d,outputReferences:p}=e,l={poolId:i,poolKind:r,sender:o,recipient:d,outputReferences:p,exitPoolRequest:{assets:t,minAmountsOut:a,userData:n,toInternalBalance:s}};return En.encodeExitPool(l)}async fetchPools(){return this.swaps.fetchPools()}getPools(){return this.swaps.getPools()}async exitPoolAndBatchSwap(t){const s=a.WeiPerEther.sub(n.BigNumber.from(t.slippage)),i=t.expectedAmountsOut.map((e=>n.BigNumber.from(e).mul(s).div(a.WeiPerEther).toString())),r=[];t.exitTokens.forEach(((e,t)=>{const a=En.toChainedReference(t);r.push({index:t,key:a})}));const o=En.constructExitCall({assets:t.exitTokens,minAmountsOut:i,userData:t.userData,toInternalBalance:!0,poolId:t.poolId,poolKind:0,sender:t.exiter,recipient:t.exiter,outputReferences:r,exitPoolRequest:{}}),d=await this.swaps.queryBatchSwapWithSor({tokensIn:t.exitTokens,tokensOut:t.finalTokensOut,swapType:e.SwapType.SwapExactIn,amounts:i,fetchPools:t.fetchPools});if(d.returnAmounts.includes("0"))throw new ue(e.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);d.swaps.forEach((e=>{const a=d.assets[e.assetInIndex],n=t.exitTokens.indexOf(a);-1!==n&&(e.amount=r[n].key.toString())}));const p=a.WeiPerEther.add(t.slippage);t.exitTokens.forEach(((e,s)=>{const i=d.assets.map((e=>e.toLowerCase())).indexOf(e.toLowerCase());-1!==i&&(d.deltas[i]=n.BigNumber.from(t.expectedAmountsOut[s]).mul(p).div(a.WeiPerEther).toString())}));const l=In.getLimitsForSlippage(t.exitTokens,t.finalTokensOut,e.SwapType.SwapExactIn,d.deltas,d.assets,"0"),u={sender:t.exiter,recipient:t.swapRecipient,fromInternalBalance:!0,toInternalBalance:!1};return{function:"multicall",params:[o,En.encodeBatchSwap({swapType:e.SwapType.SwapExactIn,swaps:d.swaps,assets:d.assets,funds:u,limits:l.map((e=>e.toString())),deadline:a.MaxUint256,value:"0",outputReferences:[]})],outputs:{amountsOut:d.returnAmounts}}}async swapUnwrapAaveStaticExactIn(t,s,i,r,o,d,p={fetchPools:!0,fetchOnChain:!1}){const l=await this.swaps.queryBatchSwapWithSor({tokensIn:t,tokensOut:s,swapType:e.SwapType.SwapExactIn,amounts:i,fetchPools:p});if(l.returnAmounts.includes("0"))throw new ue(e.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);const u=In.getLimitsForSlippage(t,s,e.SwapType.SwapExactIn,l.deltas,l.assets,d);return{function:"multicall",params:this.encodeSwapUnwrap(s,e.SwapType.SwapExactIn,l.swaps,l.assets,o,u),outputs:{amountsOut:l.returnAmounts.map(((t,s)=>{const i=n.BigNumber.from(t).abs().mul(r[s]).div(a.WeiPerEther);if(!i.gt(a.Zero))throw new ue(e.BalancerErrorCode.UNWRAP_ZERO_AMOUNT);return i.toString()}))}}}async swapUnwrapAaveStaticExactOut(t,s,i,r,o,d,p={fetchPools:!0,fetchOnChain:!1}){const l=i.map(((t,s)=>{const i=n.BigNumber.from(t).mul(a.WeiPerEther).div(r[s]);if(!i.gt(a.Zero))throw new ue(e.BalancerErrorCode.WRAP_ZERO_AMOUNT);return i.toString()})),u=await this.swaps.queryBatchSwapWithSor({tokensIn:t,tokensOut:s,swapType:e.SwapType.SwapExactOut,amounts:l,fetchPools:p});if(u.returnAmounts.includes("0"))throw new ue(e.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);const c=In.getLimitsForSlippage(t,s,e.SwapType.SwapExactOut,u.deltas,u.assets,d);return{function:"multicall",params:this.encodeSwapUnwrap(s,e.SwapType.SwapExactOut,u.swaps,u.assets,o,c),outputs:{amountsIn:u.returnAmounts.map((e=>e.toString()))}}}encodeSwapUnwrap(e,t,n,s,i,r){const o=[],d=[];e.forEach(((e,t)=>{const a=s.findIndex((t=>t.toLowerCase()===e.toLowerCase()));if(-1===a)return;const n=En.toChainedReference(t);o.push({index:a,key:n});const r=En.encodeUnwrapAaveStaticToken({staticToken:e,sender:i.recipient,recipient:i.sender,amount:n,toUnderlying:!0,outputReferences:0});d.push(r)}));return[En.encodeBatchSwap({swapType:t,swaps:n,assets:s,funds:i,limits:r.map((e=>e.toString())),deadline:a.MaxUint256,value:"0",outputReferences:o}),...d]}}En.CHAINED_REFERENCE_PREFIX="ba10";class Sn{constructor(e){this.url=an(e).urls.subgraph,this.client=this.initClient()}initClient(){return wa(new c.GraphQLClient(this.url))}}class _n{constructor(e,t){this.swaps=t||new In(e)}async fetchPools(){return this.swaps.fetchPools()}getPools(){return this.swaps.getPools()}async getSpotPrice(t,a,n=[]){0===n.length&&(await this.fetchPools(),n=this.getPools());const s=p.parseToPoolsDict(n,0),i=this.swaps.sor.routeProposer.getCandidatePathsFromDict(t,a,0,s,4);if(0===i.length)throw new ue(e.BalancerErrorCode.UNSUPPORTED_PAIR);return p.getSpotPriceAfterSwapForPath(i[0],0,p.ZERO).toString()}}var An=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];class xn{constructor(e,t){this.contractAddresses="number"==typeof e?pe[e].addresses.contracts:e,this.vault=l.Vault__factory.connect(this.contractAddresses.vault,t),this.contractAddresses.lidoRelayer&&(this.lidoRelayer=l.LidoRelayer__factory.connect(this.contractAddresses.lidoRelayer,t)),this.multicall=Ka(this.contractAddresses.multicall,t)}get contracts(){return{vault:this.vault,lidoRelayer:this.lidoRelayer,multicall:this.multicall,ERC20:this.getErc20}}getErc20(e,t){return((e,t)=>new o.Contract(e,An,t))(e,t)}}const On={1:{relayer:"0x886A3Ec7bcC508B8795990B60Fa21f85F9dB7948",staBal3:{id:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063",address:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42",gauge:"0x34f33cdaed8ba0e1ceece80e5f4a73bcf234cfac",assetOrder:["DAI","USDC","USDT"]},bbausd1:{id:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe",address:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2",gauge:"0x68d019f64a7aa97e2d4e7363aee42251d08124fb",assetOrder:["bb-a-USDT","bb-a-DAI","bb-a-USDC"]},bbausd2:{id:"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d",address:"0xa13a9247ea42d743238089903570127dda72fe44",gauge:"0xa6325e799d266632d347e41265a69af111b05403"},linearUsdc1:{id:"0x9210f1204b5a24742eba12f710636d76240df3d00000000000000000000000fc",address:"0x9210F1204b5a24742Eba12f710636D76240dF3d0"},linearDai1:{id:"0x804cdb9116a10bb78768d3252355a1b18067bf8f0000000000000000000000fb",address:"0x804CdB9116a10bB78768D3252355a1b18067bF8f"},linearUsdt1:{id:"0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c0000000000000000000000fd",address:"0x2BBf681cC4eb09218BEe85EA2a5d3D13Fa40fC0C"},linearUsdc2:{id:"0x82698AECC9E28E9BB27608BD52CF57F704BD1B83000000000000000000000336",address:"0x82698aeCc9E28e9Bb27608Bd52cF57f704BD1B83"},linearDai2:{id:"0xAE37D54AE477268B9997D4161B96B8200755935C000000000000000000000337",address:"0xae37D54Ae477268B9997d4161B96b8200755935c"},linearUsdt2:{id:"0x2F4EB100552EF93840D5ADC30560E5513DFFFACB000000000000000000000334",address:"0x2F4eb100552ef93840d5aDC30560E5513DFfFACb"},maiusd:{id:"",address:"",gauge:"",assetOrder:["USDT","miMATIC","DAI","USDC"]},maibbausd:{id:"",address:"",gauge:"",assetOrder:["bb-a-USD","miMATIC"]},DAI:"0x6b175474e89094c44da98b954eedeac495271d0f",USDC:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",USDT:"0xdAC17F958D2ee523a2206206994597C13D831ec7",waDAI:"0x02d60b84491589974263d922d9cc7a3152618ef6",waUSDC:"0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de",waUSDT:"0xf8fd466f12e236f4c96f7cce6c79eadb819abf58",miMATIC:""},5:{relayer:"0x7b9B6f094DC2Bd1c12024b0D9CC63d6993Be1888",staBal3:{id:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062",address:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2",gauge:"0xfd364cda96bb7db06b65706182c448a73f0a5f9a",assetOrder:["USDT","DAI","USDC"]},staBal3_2:{id:"0xff9d677474d4344379924e10b68c8fea67e03294000000000000000000000072",address:"0xff9d677474d4344379924e10b68c8fea67e03294",gauge:"0x4e4ebf2aa90e41174d716a5168895357762d68af",assetOrder:["USDT","DAI","USDC"]},staBal3_3:{id:"0x3bfc8a0509f1a68aefd446f6c19bf37b3c75a8fc0000000000000000000000a5",address:"0x3bfc8a0509f1a68aefd446f6c19bf37b3c75a8fc",gauge:"0x7776e1008d7c20ab54aa57a7c44fc7de602de29a",assetOrder:["USDT","DAI","USDC"]},bbausd1:{id:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",address:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd",gauge:"0xa2d0ea81a47d68598922cd54c59249ff58c2a3ff",assetOrder:["bb-a-USDC","bb-a-DAI","bb-a-USDT"]},bbausd2:{id:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",address:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd",gauge:"0xa2d0ea81a47d68598922cd54c59249ff58c2a3ff"},linearUsdc1:{id:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc8668100000000000000000000005c",address:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc86681"},linearDai1:{id:"0x5cea6a84ed13590ed14903925fa1a73c36297d9900000000000000000000005d",address:"0x5cea6a84ed13590ed14903925fa1a73c36297d99"},linearUsdt1:{id:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f00000000000000000000005e",address:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f"},linearUsdc2:{id:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc8668100000000000000000000005c",address:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc86681"},linearDai2:{id:"0x5cea6a84ed13590ed14903925fa1a73c36297d9900000000000000000000005d",address:"0x5cea6a84ed13590ed14903925fa1a73c36297d99"},linearUsdt2:{id:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f00000000000000000000005e",address:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f"},maiusd:{id:"0x6a8f9ab364b85725973d2a33cb9aae2dac43b5e30000000000000000000000a6",address:"0x6a8f9ab364b85725973d2a33cb9aae2dac43b5e3",gauge:"0x58141bdcecb7fbae006964f4131cf6f65c948357",assetOrder:["USDT","miMATIC","DAI","USDC"]},maibbausd:{id:"0xb04b03b78cf79788a1931545bd2744161029648f0000000000000000000000a8",address:"0xb04b03b78cf79788a1931545bd2744161029648f",gauge:"0xdc3f6fc8898830e53c777543fe252b14f22680d4",assetOrder:["bb-a-USD","miMATIC","MAI BSP"]},USDT:"0x1f1f156e0317167c11aa412e3d1435ea29dc3cce",DAI:"0x8c9e6c40d3402480ace624730524facc5482798c",USDC:"0xe0c9275e44ea80ef17579d33c55136b7da269aeb",waDAI:"0x89534a24450081aa267c79b07411e9617d984052",waUSDC:"0x811151066392fd641fe74a9b55a712670572d161",waUSDT:"0x4cb1892fddf14f772b2e39e299f44b2e5da90d04",miMATIC:"0x398106564948feeb1fedea0709ae7d969d62a391"},137:{relayer:"0xcf6a66E32dCa0e26AcC3426b851FD8aCbF12Dac7",staBal3:{id:"",address:"",gauge:"",assetOrder:["USDT","DAI","USDC"]},bbausd1:{id:"",address:"",gauge:"",assetOrder:["bb-a-USDC","bb-a-DAI","bb-a-USDT"]},bbausd2:{id:"0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b",address:"0x48e6b98ef6329f8f0a30ebb8c7c960330d648085",gauge:""},linearUsdc1:{id:"",address:""},linearDai1:{id:"",address:""},linearUsdt1:{id:"",address:""},linearUsdc2:{id:"0xf93579002dbe8046c43fefe86ec78b1112247bb8000000000000000000000759",address:"0xf93579002dbe8046c43fefe86ec78b1112247bb8"},linearDai2:{id:"0x178e029173417b1f9c8bc16dcec6f697bc323746000000000000000000000758",address:"0x178e029173417b1f9c8bc16dcec6f697bc323746"},linearUsdt2:{id:"0xff4ce5aaab5a627bf82f4a571ab1ce94aa365ea600000000000000000000075a",address:"0xff4ce5aaab5a627bf82f4a571ab1ce94aa365ea6"},maiusd:{id:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012",address:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42",gauge:"0x72843281394e68de5d55bcf7072bb9b2ebc24150",assetOrder:["USDC","DAI","miMATIC","USDT"]},maibbausd:{id:"0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e",address:"0xb54b2125b711cd183edd3dd09433439d53961652",gauge:"0x9a105ef22a59484aa2731c357049f6a13d0891f5",assetOrder:["bb-a-USD","miMATIC"]},USDT:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",DAI:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063",USDC:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",waDAI:"0xEE029120c72b0607344f35B17cdD90025e647B00",waUSDC:"0x221836a597948Dce8F3568E044fF123108aCc42A",waUSDT:"0x19C60a251e525fa88Cd6f3768416a8024e98fC19",miMATIC:"0xa3fa99a148fa48d14ed51d610c367c61876997f1"}};var Pn=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];const Nn=new t.Interface(Pn),Bn=En.toChainedReference("21"),kn=En.toChainedReference("22"),vn=En.toChainedReference("23"),Cn=En.toChainedReference("24");class Rn{constructor(e){this.addresses=On[e]}calldata(t,a,s,i,r){if(n.BigNumber.from(a).lte(0))throw new ue(e.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED);const o=this.addresses.relayer;let d=[];r&&(d=[this.buildSetRelayerApproval(r)]),d=i?[...d,this.buildWithdraw(t,a),this.buildExit(o,a),this.buildSwap(s,o),this.buildDeposit(t)]:[...d,this.buildExit(t,a),this.buildSwap(s,t)];return{to:o,data:Nn.encodeFunctionData("multicall",[d])}}buildExit(e,t){const{assetOrder:a}=this.addresses.staBal3,n=a.map((e=>this.addresses[e])),s=A.exitExactBPTInForTokensOut(t),i=[{index:a.indexOf("DAI"),key:Bn},{index:a.indexOf("USDC"),key:kn},{index:a.indexOf("USDT"),key:vn}];return En.constructExitCall({assets:n,minAmountsOut:["0","0","0"],userData:s,toInternalBalance:!0,poolId:this.addresses.staBal3.id,poolKind:0,sender:e,recipient:this.addresses.relayer,outputReferences:i,exitPoolRequest:{}})}buildSwap(t,s){const i=[this.addresses.bbausd2.address,this.addresses.DAI,this.addresses.linearDai2.address,this.addresses.USDC,this.addresses.linearUsdc2.address,this.addresses.USDT,this.addresses.linearUsdt2.address],r=[{index:0,key:Cn}],o=[{poolId:this.addresses.linearDai2.id,assetInIndex:1,assetOutIndex:2,amount:Bn.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:2,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdc2.id,assetInIndex:3,assetOutIndex:4,amount:kn.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:4,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdt2.id,assetInIndex:5,assetOutIndex:6,amount:vn.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:6,assetOutIndex:0,amount:"0",userData:"0x"}],d=[n.BigNumber.from(t).mul(-1).toString(),a.MaxInt256.toString(),"0",a.MaxInt256.toString(),"0",a.MaxInt256.toString(),"0"],p={sender:this.addresses.relayer,recipient:s,fromInternalBalance:!0,toInternalBalance:!1};return En.encodeBatchSwap({swapType:e.SwapType.SwapExactIn,swaps:o,assets:i,funds:p,limits:d,deadline:n.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:r})}buildWithdraw(e,t){return En.encodeGaugeWithdraw(this.addresses.staBal3.gauge,e,this.addresses.relayer,t)}buildDeposit(e){return En.encodeGaugeDeposit(this.addresses.bbausd2.gauge,this.addresses.relayer,e,Cn.toString())}buildSetRelayerApproval(e){return En.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}const Dn=new t.Interface(Pn),Mn=En.toChainedReference("24");class Fn{constructor(e){this.addresses=On[e]}calldata(t,a,s,i,r,o){if(n.BigNumber.from(a).lte(0))throw new ue(e.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED);const d=this.addresses.relayer;let p=[];o&&(p=[this.buildSetRelayerApproval(o)]),p=i?[...p,this.buildWithdraw(t,a),this.buildSwap(a,s,d,d,r),this.buildDeposit(t)]:[...p,this.buildSwap(a,s,t,t,r)];const l=Dn.encodeFunctionData("multicall",[p]);return{to:this.addresses.relayer,data:l}}buildSwap(t,s,i,r,o){const d=[this.addresses.bbausd2.address,this.addresses.waDAI,this.addresses.linearDai1.address,this.addresses.linearDai2.address,this.addresses.waUSDC,this.addresses.linearUsdc1.address,this.addresses.linearUsdc2.address,this.addresses.waUSDT,this.addresses.linearUsdt1.address,this.addresses.linearUsdt2.address,this.addresses.bbausd1.address],p=[{index:0,key:Mn}],l=o.reduce(((e,t)=>e.add(n.BigNumber.from(t))),a.Zero),{assetOrder:u}=this.addresses.bbausd1,c=n.BigNumber.from(t).mul(o[u.indexOf("bb-a-USDC")]).div(l).toString(),y=n.BigNumber.from(t).mul(o[u.indexOf("bb-a-DAI")]).div(l).toString(),m=n.BigNumber.from(t).sub(c).sub(y).toString(),b=[{poolId:this.addresses.bbausd1.id,assetInIndex:10,assetOutIndex:2,amount:y,userData:"0x"},{poolId:this.addresses.linearDai1.id,assetInIndex:2,assetOutIndex:1,amount:"0",userData:"0x"},{poolId:this.addresses.linearDai2.id,assetInIndex:1,assetOutIndex:3,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:3,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd1.id,assetInIndex:10,assetOutIndex:5,amount:c,userData:"0x"},{poolId:this.addresses.linearUsdc1.id,assetInIndex:5,assetOutIndex:4,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdc2.id,assetInIndex:4,assetOutIndex:6,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:6,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd1.id,assetInIndex:10,assetOutIndex:8,amount:m,userData:"0x"},{poolId:this.addresses.linearUsdt1.id,assetInIndex:8,assetOutIndex:7,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdt2.id,assetInIndex:7,assetOutIndex:9,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:9,assetOutIndex:0,amount:"0",userData:"0x"}],h=[n.BigNumber.from(s).mul(-1).toString(),"0","0","0","0","0","0","0","0","0",t],f={sender:i,recipient:r,fromInternalBalance:!1,toInternalBalance:!1};return En.encodeBatchSwap({swapType:e.SwapType.SwapExactIn,swaps:b,assets:d,funds:f,limits:h,deadline:n.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:p})}buildWithdraw(e,t){return En.encodeGaugeWithdraw(this.addresses.bbausd1.gauge,e,this.addresses.relayer,t)}buildDeposit(e){return En.encodeGaugeDeposit(this.addresses.bbausd2.gauge,this.addresses.relayer,e,Mn.toString())}buildSetRelayerApproval(e){return En.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}const Un=new t.Interface(Pn),Ln=En.toChainedReference("0"),qn=[];class Wn{constructor(e){this.addresses=On[e]}calldata(e,t,a,n,s,i,r,o){if(i&&(null==t.gauge||null==a.gauge))throw new Error("Staked flow migration requires gauge addresses to be provided");const d=this.addresses.relayer;let p=[];o&&(p=[this.buildSetRelayerApproval(o)]),p=i?[...p,this.buildWithdraw(e,n,t.gauge),this.buildExit(t.id,d,n,r),this.buildSwap(s,d,a.id,a.address,r),this.buildDeposit(e,a.gauge)]:[...p,this.buildExit(t.id,e,n,r),this.buildSwap(s,e,a.id,a.address,r)];const l=Un.encodeFunctionData("multicall",[p]);return{to:this.addresses.relayer,data:l}}buildExit(e,t,a,n){const s=A.exitExactBPTInForTokensOut(a),i=[];for(let e=0;e<n.length;e++)i[e]={index:e,key:En.toChainedReference(`${e+1}`)},qn.push(i[e].key);const r=Array(n.length).fill("0");return En.constructExitCall({assets:n,minAmountsOut:r,userData:s,toInternalBalance:!0,poolId:e,poolKind:0,sender:t,recipient:this.addresses.relayer,outputReferences:i,exitPoolRequest:{}})}buildSwap(t,s,i,r,o){const d=[r,...o],p=[{index:0,key:Ln}],l=[];for(let e=0;e<o.length;e++)l.push({poolId:i,assetInIndex:e+1,assetOutIndex:0,amount:qn[e].toString(),userData:"0x"});const u=[n.BigNumber.from(t).mul(-1).toString()];for(let e=0;e<o.length;e++)u.push(a.MaxInt256.toString());const c={sender:this.addresses.relayer,recipient:s,fromInternalBalance:!0,toInternalBalance:!1};return En.encodeBatchSwap({swapType:e.SwapType.SwapExactIn,swaps:l,assets:d,funds:c,limits:u,deadline:n.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:p})}buildWithdraw(e,t,a){return En.encodeGaugeWithdraw(a,e,this.addresses.relayer,t)}buildDeposit(e,t){return En.encodeGaugeDeposit(t,this.addresses.relayer,e,Ln.toString())}buildSetRelayerApproval(e){return En.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}const $n=new t.Interface(Pn),Gn=En.toChainedReference("20"),Vn=En.toChainedReference("21"),Kn=En.toChainedReference("22"),jn=En.toChainedReference("23"),Hn=En.toChainedReference("24");class Xn{constructor(e){this.addresses=On[e]}calldata(t,a,s,i,r){if(n.BigNumber.from(a).lte(0))throw new ue(e.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED);const o=this.addresses.relayer;let d=[];r&&(d=[this.buildSetRelayerApproval(r)]),d=i?[...d,this.buildWithdraw(t,a),this.buildExit(o,a),this.buildSwap(o,s),this.buildDeposit(t)]:[...d,this.buildExit(t,a),this.buildSwap(t,s)];return{to:o,data:$n.encodeFunctionData("multicall",[d])}}buildExit(e,t){const{assetOrder:a}=this.addresses.maiusd,n=a.map((e=>this.addresses[e])),s=A.exitExactBPTInForTokensOut(t),i=[{index:a.indexOf("miMATIC"),key:Gn},{index:a.indexOf("DAI"),key:Vn},{index:a.indexOf("USDC"),key:Kn},{index:a.indexOf("USDT"),key:jn}],r=Array(n.length).fill("0");return En.constructExitCall({assets:n,minAmountsOut:r,userData:s,toInternalBalance:!0,poolId:this.addresses.maiusd.id,poolKind:0,sender:e,recipient:this.addresses.relayer,outputReferences:i,exitPoolRequest:{}})}buildSwap(t,s){const i=[this.addresses.bbausd2.address,this.addresses.DAI,this.addresses.linearDai2.address,this.addresses.USDC,this.addresses.linearUsdc2.address,this.addresses.USDT,this.addresses.linearUsdt2.address,this.addresses.miMATIC,this.addresses.maibbausd.address],r=[{index:8,key:Hn}],o=[{poolId:this.addresses.linearDai2.id,assetInIndex:1,assetOutIndex:2,amount:Vn.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:2,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:0,assetOutIndex:8,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdc2.id,assetInIndex:3,assetOutIndex:4,amount:Kn.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:4,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:0,assetOutIndex:8,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdt2.id,assetInIndex:5,assetOutIndex:6,amount:jn.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:6,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:0,assetOutIndex:8,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:7,assetOutIndex:8,amount:Gn.toString(),userData:"0x"}],d=["0",a.MaxInt256.toString(),"0",a.MaxInt256.toString(),"0",a.MaxInt256.toString(),"0",a.MaxInt256.toString(),n.BigNumber.from(s).mul(-1).toString()],p={sender:this.addresses.relayer,recipient:t,fromInternalBalance:!0,toInternalBalance:!1};return En.encodeBatchSwap({swapType:e.SwapType.SwapExactIn,swaps:o,assets:i,funds:p,limits:d,deadline:n.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:r})}buildWithdraw(e,t){return En.encodeGaugeWithdraw(this.addresses.maiusd.gauge,e,this.addresses.relayer,t)}buildDeposit(e){return En.encodeGaugeDeposit(this.addresses.maibbausd.gauge,this.addresses.relayer,e,Hn.toString())}buildSetRelayerApproval(e){return En.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}class Zn{constructor(e){this.network=e}stabal3(e,a,n,s,i){const r=new Rn(this.network).calldata(e,a,n,s,i);return{to:r.to,data:r.data,decode:(e,a)=>{let n=a?2:1;i&&(n+=1);const s=t.defaultAbiCoder.decode(["bytes[]"],e);return t.defaultAbiCoder.decode(["int256[]"],s[0][n])[0][0].abs().toString()}}}bbaUsd(e,a,n,s,i,r){const o=new Fn(this.network).calldata(e,a,n,s,i,r);return{to:o.to,data:o.data,decode:(e,a)=>{let n=a?1:0;r&&(n+=1);const s=t.defaultAbiCoder.decode(["bytes[]"],e);return t.defaultAbiCoder.decode(["int256[]"],s[0][n])[0][0].abs().toString()}}}stables(e,a,n,s,i,r,o,d){const p=new Wn(this.network).calldata(e,a,n,s,i,r,o,d);return{to:p.to,data:p.data,decode:(e,a)=>{let n=a?2:1;d&&(n+=1);const s=t.defaultAbiCoder.decode(["bytes[]"],e);return t.defaultAbiCoder.decode(["int256[]"],s[0][n])[0][0].abs().toString()}}}maiusd(e,a,n,s,i){const r=new Xn(this.network).calldata(e,a,n,s,i);return{to:r.to,data:r.data,decode:(e,a)=>{let n=a?2:1;i&&(n+=1);const s=t.defaultAbiCoder.decode(["bytes[]"],e);return t.defaultAbiCoder.decode(["int256[]"],s[0][n])[0][8].abs().toString()}}}}class Jn{constructor(e){this.network=e,this.migrations=new Zn(e)}}let zn=!1,Yn=!1;const Qn={debug:1,default:2,info:2,warning:3,error:4,off:5};let es=Qn.default,ts=null;const as=function(){try{const e=[];if(["NFD","NFC","NFKD","NFKC"].forEach((t=>{try{if("test"!=="test".normalize(t))throw new Error("bad normalize")}catch(a){e.push(t)}})),e.length)throw new Error("missing "+e.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(e){return e.message}return null}();var ns,ss;!function(e){e.DEBUG="DEBUG",e.INFO="INFO",e.WARNING="WARNING",e.ERROR="ERROR",e.OFF="OFF"}(ns||(ns={})),function(e){e.UNKNOWN_ERROR="UNKNOWN_ERROR",e.NOT_IMPLEMENTED="NOT_IMPLEMENTED",e.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",e.NETWORK_ERROR="NETWORK_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.TIMEOUT="TIMEOUT",e.BUFFER_OVERRUN="BUFFER_OVERRUN",e.NUMERIC_FAULT="NUMERIC_FAULT",e.MISSING_NEW="MISSING_NEW",e.INVALID_ARGUMENT="INVALID_ARGUMENT",e.MISSING_ARGUMENT="MISSING_ARGUMENT",e.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",e.CALL_EXCEPTION="CALL_EXCEPTION",e.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",e.NONCE_EXPIRED="NONCE_EXPIRED",e.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",e.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",e.TRANSACTION_REPLACED="TRANSACTION_REPLACED",e.ACTION_REJECTED="ACTION_REJECTED"}(ss||(ss={}));const is="0123456789abcdef";class rs{constructor(e){Object.defineProperty(this,"version",{enumerable:!0,value:e,writable:!1})}_log(e,t){const a=e.toLowerCase();null==Qn[a]&&this.throwArgumentError("invalid log level name","logLevel",e),es>Qn[a]||console.log.apply(console,t)}debug(...e){this._log(rs.levels.DEBUG,e)}info(...e){this._log(rs.levels.INFO,e)}warn(...e){this._log(rs.levels.WARNING,e)}makeError(e,t,a){if(Yn)return this.makeError("censored error",t,{});t||(t=rs.errors.UNKNOWN_ERROR),a||(a={});const n=[];Object.keys(a).forEach((e=>{const t=a[e];try{if(t instanceof Uint8Array){let a="";for(let e=0;e<t.length;e++)a+=is[t[e]>>4],a+=is[15&t[e]];n.push(e+"=Uint8Array(0x"+a+")")}else n.push(e+"="+JSON.stringify(t))}catch(t){n.push(e+"="+JSON.stringify(a[e].toString()))}})),n.push(`code=${t}`),n.push(`version=${this.version}`);const s=e;let i="";switch(t){case ss.NUMERIC_FAULT:{i="NUMERIC_FAULT";const t=e;switch(t){case"overflow":case"underflow":case"division-by-zero":i+="-"+t;break;case"negative-power":case"negative-width":i+="-unsupported";break;case"unbound-bitwise-result":i+="-unbound-result"}break}case ss.CALL_EXCEPTION:case ss.INSUFFICIENT_FUNDS:case ss.MISSING_NEW:case ss.NONCE_EXPIRED:case ss.REPLACEMENT_UNDERPRICED:case ss.TRANSACTION_REPLACED:case ss.UNPREDICTABLE_GAS_LIMIT:i=t}i&&(e+=" [ See: https://links.ethers.org/v5-errors-"+i+" ]"),n.length&&(e+=" ("+n.join(", ")+")");const r=new Error(e);return r.reason=s,r.code=t,Object.keys(a).forEach((function(e){r[e]=a[e]})),r}throwError(e,t,a){throw this.makeError(e,t,a)}throwArgumentError(e,t,a){return this.throwError(e,rs.errors.INVALID_ARGUMENT,{argument:t,value:a})}assert(e,t,a,n){e||this.throwError(t,a,n)}assertArgument(e,t,a,n){e||this.throwArgumentError(t,a,n)}checkNormalize(e){as&&this.throwError("platform missing String.prototype.normalize",rs.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:as})}checkSafeUint53(e,t){"number"==typeof e&&(null==t&&(t="value not safe"),(e<0||e>=9007199254740991)&&this.throwError(t,rs.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:e}),e%1&&this.throwError(t,rs.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:e}))}checkArgumentCount(e,t,a){a=a?": "+a:"",e<t&&this.throwError("missing argument"+a,rs.errors.MISSING_ARGUMENT,{count:e,expectedCount:t}),e>t&&this.throwError("too many arguments"+a,rs.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:t})}checkNew(e,t){e!==Object&&null!=e||this.throwError("missing new",rs.errors.MISSING_NEW,{name:t.name})}checkAbstract(e,t){e===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",rs.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:"new"}):e!==Object&&null!=e||this.throwError("missing new",rs.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return ts||(ts=new rs("logger/5.7.0")),ts}static setCensorship(e,t){if(!e&&t&&this.globalLogger().throwError("cannot permanently disable censorship",rs.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),zn){if(!e)return;this.globalLogger().throwError("error censorship permanent",rs.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}Yn=!!e,zn=!!t}static setLogLevel(e){const t=Qn[e.toLowerCase()];null!=t?es=t:rs.globalLogger().warn("invalid log level - "+e)}static from(e){return new rs(e)}}rs.errors=ss,rs.levels=ns;new rs("units/5.7.0");const os=["wei","kwei","mwei","gwei","szabo","finney","ether"];function ds(e,t){if("string"==typeof t){const e=os.indexOf(t);-1!==e&&(t=3*e)}return n.formatFixed(e,null!=t?t:18)}const ps=145e3,ls=1648465251,us=31536e3,cs=2**(1/4),ys=e=>365*(ps*cs**-e/7),ms=(e,t)=>{if(e<ls)throw"start timestamp before emission schedule deployment";if(t<e)throw"cannot finish before starting";let a=0;const n=Math.floor((e-ls)/us),s=Math.floor((t-ls)/us);for(let e=n;e<=s;e++)a+=ys(e);const i=ls+us*(n+1)-e,r=t-(ls+us*s);return a-=ys(n)*(us-i)/us,a-=ys(s)*(us-r)/us,a};var bs=Object.freeze({__proto__:null,INITIAL_RATE:ps,START_EPOCH_TIME:ls,weekly:(e=Math.round((new Date).getTime()/1e3))=>{const t=Math.floor((e-ls)/us);return ps*cs**-t},total:ys,between:ms});class hs{constructor(e,t){this.repository=e,this.tokenPrices=t}async data(e=Date.now()){const t=await this.repository.multicallData(e),a=await this.tokenPrices.find(t.balAddress);if(!a||!a.usd)throw"No BAL USD price found";return{lastWeekBalRevenue:t.balAmount*parseFloat(a.usd),lastWeekBBAUsdRevenue:t.bbAUsdAmount*t.bbAUsdPrice,veBalSupply:t.veBalSupply}}}class fs{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapFee?t&&t.totalSwapFee?parseFloat(e.totalSwapFee)-parseFloat(t.totalSwapFee):parseFloat(e.totalSwapFee):0}}class Ts{constructor(e,t,a,n,s,i,r,o,d){this.pools=e,this.tokenPrices=t,this.tokenMeta=a,this.tokenYields=n,this.feeCollector=s,this.yesterdaysPools=i,this.liquidityGauges=r,this.feeDistributor=o,this.protocolFees=d}async swapFees(e){const t=await this.last24hFees(e),a=await this.totalLiquidity(e);if(!t||!a)return 0;const n=t*(1-await this.protocolSwapFeePercentage())/parseFloat(a)*1e4;return Math.round(365*n)}async tokenAprs(e){if(!e.tokens)return{total:0,breakdown:{}};const t=await this.totalLiquidity(e),a=e.tokens.filter((t=>t.address!==e.address)),n=a.map((async t=>{let a=0;const n=await this.tokenYields.find(t.address);if(n)if("MetaStable"===e.poolType)a=n*(1-await this.protocolSwapFeePercentage());else if("ComposableStable"===e.poolType){a=n*(1-(await this.protocolFeesPercentage()).yieldFee)}else a=n;else{const e=await this.pools.findBy("address",t.address);if(e){a=await this.swapFees(e)+(await this.tokenAprs(e)).total}}return a})),s=a.map((async e=>{var a,n;if(e.weight)return parseFloat(e.weight);{let s=(null===(a=e.price)||void 0===a?void 0:a.usd)||(null===(n=await this.tokenPrices.find(e.address))||void 0===n?void 0:n.usd);if(!s){const t=await this.pools.findBy("address",e.address);if(!t)throw`No price for ${e.address}`;s=(await this.bptPrice(t)).toString()}return parseFloat(e.balance)*parseFloat(s)/parseFloat(t)}})),i=await Promise.all(n.map((async(e,t)=>{const[a,n]=await Promise.all([e,s[t]]);return Math.round(a*n)})));return{total:i.reduce(((e,t)=>e+t),0),breakdown:d.pickBy(d.zipObject(a.map((e=>e.address)),i),d.identity)}}async stakingApr(e,t=1){if(!this.liquidityGauges||1!=e.chainId)return 0;const a=await this.liquidityGauges.findBy("poolId",e.id);if(!a)return 0;const[n,s]=await Promise.all([this.tokenPrices.find("0xba100000625a3754423978a60c9317c58a424e3d"),this.bptPrice(e)]),i=parseFloat((null==n?void 0:n.usd)||"0"),r=Math.round((new Date).getTime()/1e3),o=ms(r,r+31536e3)*a.relativeWeight*i,d=(a.workingSupply+.4)/.4*s;return Math.round(1e4*t*o/d)}async rewardAprs(e){if(!this.liquidityGauges)return{total:0,breakdown:{}};const t=await this.liquidityGauges.findBy("poolId",e.id);if(!t||!t.rewardTokens||Object.keys(t.rewardTokens).length<1)return{total:0,breakdown:{}};const a=Object.keys(t.rewardTokens).map((async e=>{const a=t.rewardTokens[e];return this.rewardTokenApr(e,a)})),n=await this.bptPrice(e),s=t.totalSupply*n;if(0==s)return{total:0,breakdown:{}};const i={};let r=0;for await(const e of Object.values(a)){r+=e.value/s,i[e.address]=e.value}return{total:Math.round(1e4*r),breakdown:i}}async protocolApr(e){if("0x5c6ee304399dbdb9c8ef030ab642b10820db8f56000200000000000000000014"!=e.id||!this.feeDistributor)return 0;const t=new hs(this.feeDistributor,this.tokenPrices),{lastWeekBalRevenue:a,lastWeekBBAUsdRevenue:n,veBalSupply:s}=await t.data(),i=await this.bptPrice(e);if(!i)throw"bptPrice for veBal pool missing";const r=(a+n)/7;return Math.round(365*r*1e4/(i*s))}async apr(e){const[t,a,n,s,i,r]=await Promise.all([this.swapFees(e),this.tokenAprs(e),this.stakingApr(e),this.stakingApr(e,2.5),this.rewardAprs(e),this.protocolApr(e)]);return{swapFees:t,tokenAprs:a,stakingApr:{min:n,max:s},rewardAprs:i,protocolApr:r,min:t+a.total+i.total+n,max:t+a.total+i.total+r+s}}async last24hFees(e){return new fs(this.yesterdaysPools).last24h(e)}async totalLiquidity(e){const t=new rt(this.pools,this.tokenPrices);return await t.getLiquidity(e)}async bptPrice(e){return parseFloat(await this.totalLiquidity(e))/parseFloat(e.totalShares)}async protocolSwapFeePercentage(){const e=await this.feeCollector.find("");return e||0}async protocolFeesPercentage(){return this.protocolFees?await this.protocolFees.getFees():{swapFee:0,yieldFee:0}}async rewardTokenApr(e,t){if(t.period_finish.toNumber()<Date.now()/1e3)return{address:e,value:0};{const a=t.rate.mul(86400).mul(365),n=await this.tokenPrices.find(e);if(n&&n.usd){const t=await this.tokenMeta.find(e),s=(null==t?void 0:t.decimals)||18;return{address:e,value:parseFloat(ds(a,s))*parseFloat(n.usd)}}throw`No USD price for ${e}`}}}class Is{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapVolume?t&&t.totalSwapVolume?parseFloat(e.totalSwapVolume)-parseFloat(t.totalSwapVolume):parseFloat(e.totalSwapVolume):0}}class gs{constructor(e,t){this.networkConfig=e,this.repositories=t,this.aprService=new Ts(this.repositories.pools,this.repositories.tokenPrices,this.repositories.tokenMeta,this.repositories.tokenYields,this.repositories.feeCollector,this.repositories.yesterdaysPools,this.repositories.liquidityGauges,this.repositories.feeDistributor),this.liquidityService=new rt(t.pools,t.tokenPrices),this.feesService=new fs(t.yesterdaysPools),this.volumeService=new Is(t.yesterdaysPools)}dataSource(){return this.repositories.pools}async apr(e){return this.aprService.apr(e)}async liquidity(e){return this.liquidityService.getLiquidity(e)}async fees(e){return this.feesService.last24h(e)}async volume(e){return this.volumeService.last24h(e)}static wrap(e,t){const a=it.from(e.poolType),n=t.addresses.tokens.wrappedNativeAsset.toLowerCase();return{...e,buildJoin:(t,s,i,r)=>a.join.buildJoin({joiner:t,pool:e,tokensIn:s,amountsIn:i,slippage:r,wrappedNativeAsset:n}),calcPriceImpact:async(t,n)=>a.priceImpactCalculator.calcPriceImpact(e,t,n),buildExitExactBPTIn:(t,s,i,r=!1,o)=>{if(a.exit.buildExitExactBPTIn)return a.exit.buildExitExactBPTIn({exiter:t,pool:e,bptIn:s,slippage:i,shouldUnwrapNativeAsset:r,wrappedNativeAsset:n,singleTokenMaxOut:o});throw"ExitExactBPTIn not supported"},buildExitExactTokensOut:(t,s,i,r)=>a.exit.buildExitExactTokensOut({exiter:t,pool:e,tokensOut:s,amountsOut:i,slippage:r,wrappedNativeAsset:n}),calcSpotPrice:(t,n)=>a.spotPriceCalculator.calcPoolSpotPrice(t,n,e)}}async find(e){const t=await this.dataSource().find(e);if(t)return gs.wrap(t,this.networkConfig)}async findBy(e,t){if("id"==e)return this.find(t);if("address"==e){const e=await this.dataSource().findBy("address",t);if(!e)return;return gs.wrap(e,this.networkConfig)}throw`search by ${e} not implemented`}async all(){const e=await this.dataSource().all();return e?e.map((e=>gs.wrap(e,this.networkConfig))):[]}async where(e){const t=await this.dataSource().where(e);return t?t.map((e=>gs.wrap(e,this.networkConfig))):[]}}const ws=new t.Interface(["function gauge_relative_weight(address gauge, uint timestamp) view returns (uint)"]);class Es{constructor(e,t,a){this.gaugeControllerAddress=t,this.multicall=Ka(e,a)}async getRelativeWeights(e,t){const a=e.map((e=>[this.gaugeControllerAddress,ws.encodeFunctionData("gauge_relative_weight",[s.getAddress(e),t||Math.floor(Date.now()/1e3)])])),[,n]=await this.multicall.aggregate(a);return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(ds(n[a],18))),e)),{})}}const Ss=new t.Interface(["function totalSupply() view returns (uint)","function working_supply() view returns (uint)","function reward_count() view returns (uint)","function reward_tokens(uint rewardIndex) view returns (address)","function reward_data(address rewardToken) view returns (tuple(address token, address distributor, uint period_finish, uint rate, uint last_update, uint integral) data)"]);class _s{constructor(e,t,a){this.chainId=t,this.multicall=Ka(e,a)}async getTotalSupplies(e){const t=e.map((e=>[e,Ss.encodeFunctionData("totalSupply",[])])),[,a]=await this.multicall.aggregate(t),n=a.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(ds(n[a],18))),e)),{})}async getWorkingSupplies(e){const t=e.map((e=>[e,Ss.encodeFunctionData("working_supply",[])])),[,a]=await this.multicall.aggregate(t),n=a.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(ds(n[a],18))),e)),{})}async getRewardCounts(e){let t;if(1==this.chainId){const a=e.map((e=>[e,Ss.encodeFunctionData("reward_count",[])])),[,n]=await this.multicall.aggregate(a),s=n.map((e=>"0x"==e?"0x0":e));t=e.reduce(((e,t,a)=>(e[t]||(e[t]=parseInt(s[a])),e)),{})}else t=e.reduce(((e,t)=>(e[t]||(e[t]=1),e)),{});return t}async getRewardTokens(e,t){const a=t||await this.getRewardCounts(e),n=e.filter((e=>a[e]>0)),s=[0],i=n.map(((e,t)=>{const n=[];for(let t=0;t<a[e];t++)n.push([e,Ss.encodeFunctionData("reward_tokens",[t])]);return s[t+1]=s[t]+a[e],n})).flat(),[,r]=await this.multicall.aggregate(i);return n.reduce(((e,t,a)=>{const n=s[a],i=s[a+1],o=[];for(let e=n;e<i;e++)o.push(Ss.decodeFunctionResult("reward_tokens",r[e])[0]);return e[t]||(e[t]=o),e}),{})}async getRewardData(e,t){const a=t||await this.getRewardTokens(e),n=[0],s=Object.keys(a).map(((e,t)=>{const s=[];for(let t=0;t<a[e].length;t++)s.push([e,Ss.encodeFunctionData("reward_data",[a[e][t]])]);return n[t+1]=n[t]+a[e].length,s})).flat(),[,i]=await this.multicall.aggregate(s),r=i.map((e=>Ss.decodeFunctionResult("reward_data",e)[0]));return Object.keys(a).reduce(((e,t,s)=>{const i=n[s],o=a[t].reduce(((e,t,a)=>(e[t]||(e[t]=r[i+a]),e)),{});return e[t]||(e[t]=o),e}),{})}}class As{constructor(e){this.gauges=[],this.client=Ga(e)}async fetch(){const e=(await this.client.Pools({where:{preferentialGauge_not:null}})).pools.map((e=>e.preferentialGauge));return this.gauges=e,this.gauges}async find(e){return 0==this.gauges.length&&await this.fetch(),this.gauges.find((t=>t.id==e))}async findBy(e,t){if(0==this.gauges.length&&await this.fetch(),"id"==e)return this.find(t);if("poolId"==e)return this.gauges.find((e=>e.poolId==t));if("poolAddress"==e)return this.gauges.find((e=>e.poolAddress==t));throw`search by ${e} not implemented`}}class xs{constructor(e,t,a,n,s){this.chainId=n,this.workingSupplies={},this.relativeWeights={},this.rewardData={},a&&(this.gaugeController=new Es(t,a,s)),this.multicall=new _s(t,n,s),this.subgraph=new As(e)}async fetch(){const e=await this.subgraph.fetch(),t=e.map((e=>e.id));return 1==this.chainId&&(this.workingSupplies=await this.multicall.getWorkingSupplies(t)),this.gaugeController&&(this.relativeWeights=await this.gaugeController.getRelativeWeights(t)),this.rewardData=await this.multicall.getRewardData(t),e.map(this.compose.bind(this))}async find(e){return this.gauges||(this.gauges=this.fetch()),(await this.gauges).find((t=>t.id==e))}async findBy(e,t){let a;if(this.gauges||(this.gauges=this.fetch()),"id"==e)return this.find(t);if("address"==e)return this.find(t);if("poolId"==e)a=(await this.gauges).find((e=>e.poolId==t));else{if("poolAddress"!=e)throw`search by ${e} not implemented`;a=(await this.gauges).find((e=>e.poolAddress==t))}return a}compose(e){return{id:e.id,address:e.id,name:e.symbol,poolId:e.poolId,poolAddress:e.poolAddress,totalSupply:parseFloat(e.totalSupply),workingSupply:this.workingSupplies[e.id],relativeWeight:this.relativeWeights[e.id],rewardTokens:this.rewardData[e.id]}}}class Os{constructor(e,t){this.url=e,this.apiKey=t}async get(e){try{const t=this.toPayload(e),{data:a}=await _.default.post(this.url,t,{headers:{"x-api-key":this.apiKey}});if(a.errors)throw new Error(a.errors.map((e=>e.message)).join(","));return a.data}catch(e){throw console.error(e),e}return[]}toPayload(e){return JSON.stringify({query:b.jsonToGraphQLQuery({query:e})})}}class Ps{constructor(e){var t,a;this.skip=0,this.client=$a(e.url),this.blockHeight=e.blockHeight,this.chainId=e.chainId;const n={orderBy:Lt.TotalLiquidity,orderDirection:Rt.Desc,where:{swapEnabled:{eq:!0},totalShares:{gt:0}}},s=(null===(t=e.query)||void 0===t?void 0:t.args)||n,i=(null===(a=e.query)||void 0===a?void 0:a.attrs)||{};this.query={args:s,attrs:i}}async fetchDefault(){const{pool0:e,pool1000:t,pool2000:a}=await this.client.AllPools({where:{swapEnabled:!0,totalShares_gt:"0"},orderBy:Lt.TotalLiquidity,orderDirection:Rt.Desc,block:this.blockHeight?{number:await this.blockHeight()}:void 0});return[...e,...t,...a].map(this.mapType.bind(this))}async fetch(e){(null==e?void 0:e.skip)&&(this.query.args.skip=e.skip),this.blockHeight&&(this.query.args.block={number:await this.blockHeight()}),this.query.args.first=(null==e?void 0:e.first)||1e3;const t=new J(this.query.args).format(new Z),{pools:a}=await this.client.Pools(t);return this.skip=((null==e?void 0:e.skip)||0)+a.length,a.map(this.mapType.bind(this))}async find(e){return await this.findBy("id",e)}async findBy(e,t){return this.pools||(this.pools=this.fetchDefault()),(await this.pools).find((a=>a[e]==t))}async all(){return this.pools||(this.pools=this.fetchDefault()),this.pools}async where(e){return this.pools||(this.pools=this.fetchDefault()),(await this.pools).filter(e)}mapType(e){var t,a,n,s,i;return{id:e.id,name:e.name||"",address:e.address,chainId:this.chainId,poolType:e.poolType,swapFee:e.swapFee,swapEnabled:e.swapEnabled,amp:null!==(t=e.amp)&&void 0!==t?t:void 0,owner:null!==(a=e.owner)&&void 0!==a?a:void 0,factory:null!==(n=e.factory)&&void 0!==n?n:void 0,tokens:(e.tokens||[]).map(this.mapToken),tokensList:e.tokensList,tokenAddresses:(e.tokens||[]).map((e=>e.address)),totalLiquidity:e.totalLiquidity,totalShares:e.totalShares,totalSwapFee:e.totalSwapFee,totalSwapVolume:e.totalSwapVolume,createTime:e.createTime,mainIndex:null!==(s=e.mainIndex)&&void 0!==s?s:void 0,wrappedIndex:null!==(i=e.wrappedIndex)&&void 0!==i?i:void 0,totalWeight:e.totalWeight||"1"}}mapToken(e){var t;let a=null;return(null===(t=e.token)||void 0===t?void 0:t.pool)&&(a={...e.token.pool,poolType:e.token.pool.poolType}),{...e,token:{pool:a}}}}class Ns{constructor(e){this.tokens=e}async find(e){return this.tokens.find((t=>t.address.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.tokens.find((a=>a[e]===t))}}const Bs={waUSDT:"0xf8fd466f12e236f4c96f7cce6c79eadb819abf58",waUSDC:"0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de",waDAI:"0x02d60b84491589974263d922d9cc7a3152618ef6"},ks={[Bs.waUSDT]:{aToken:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",underlying:"0xdac17f958d2ee523a2206206994597c13d831ec7"},[Bs.waUSDC]:{aToken:"0xbcca60bb61934080951369a648fb03df4f96263c",underlying:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"},[Bs.waDAI]:{aToken:"0x028171bca77440897b824ca71d1c56cac55b68a3",underlying:"0x6b175474e89094c44da98b954eedeac495271d0f"}},vs=Object.values(ks).map((e=>e.aToken)),Cs=Object.values(ks).map((e=>e.underlying)),Rs=Object.fromEntries(Object.keys(ks).map((e=>[ks[e].underlying,e]))),Ds=async()=>{try{const e={operationName:"getReserves",query:"\n  query getReserves($aTokens: [String!], $underlyingAssets: [Bytes!]) {\n    reserves(\n      where: {\n        aToken_in: $aTokens\n        underlyingAsset_in: $underlyingAssets\n        isActive: true\n      }\n    ) {\n      underlyingAsset\n      liquidityRate\n    }\n  }\n",variables:{aTokens:vs,underlyingAssets:Cs}},t=await _.default.post("https://api.thegraph.com/subgraphs/name/aave/protocol-v2",e),{data:{reserves:a}}=t.data,s=a.map((e=>[Rs[e.underlyingAsset],Math.round(1e4*parseFloat(ds(n.BigNumber.from(e.liquidityRate),27)))]));return Object.fromEntries(s)}catch(e){return Object.fromEntries(Object.keys(ks).map((e=>[e,0])))}};class Ms{constructor(e,t=1){this.prices={},this.requestedAddresses=new Set,this.debounceWait=200,this.promisedCalls=[],this.promisedCount=0,this.debounceCancel=()=>{},this.baseTokenAddresses=e.map((e=>e.toLowerCase())).map((e=>Fs(e))),this.urlBase=`https://api.coingecko.com/api/v3/simple/token_price/${this.platform(t)}?vs_currencies=usd,eth`}fetch(e,{signal:t}={}){return e.length,_.default.get(this.url(e),{signal:t}).then((({data:e})=>e)).finally((()=>{e.length}))}debouncedFetch(){this.promisedCalls[this.promisedCount]||(this.promisedCalls[this.promisedCount]=(()=>{let e=()=>{},t=()=>{};return{promise:new Promise(((a,n)=>{[e,t]=[a,n]})),reject:t,resolve:e}})());const{promise:e,resolve:t,reject:a}=this.promisedCalls[this.promisedCount];return this.timeout&&clearTimeout(this.timeout),this.timeout=setTimeout((()=>{this.promisedCount++,this.fetch([...this.requestedAddresses]).then((e=>{t(e),this.debounceCancel=()=>{}})).catch((e=>{console.error(e)}))}),this.debounceWait),this.debounceCancel=()=>{this.timeout&&clearTimeout(this.timeout),a("Cancelled"),delete this.promisedCalls[this.promisedCount]},e}async find(e){const t=e.toLowerCase(),a=Fs(t);if(!this.prices[a])try{let e=!1;0===Object.keys(this.prices).length&&(this.baseTokenAddresses.forEach(this.requestedAddresses.add.bind(this.requestedAddresses)),e=!0),this.requestedAddresses.add(a);const t=await this.debouncedFetch();this.prices[a]=t[a],this.requestedAddresses.delete(a),e&&this.baseTokenAddresses.forEach((e=>{this.prices[e]=t[e],this.requestedAddresses.delete(e)}))}catch(e){console.error(e)}return this.prices[a]}async findBy(e,t){if("address"==e)return this.find(t)}platform(e){switch(e){case 1:case 42:case 31337:return"ethereum";case 137:return"polygon-pos";case 42161:return"arbitrum-one"}return"2"}url(e){return`${this.urlBase}&contract_addresses=${e.join(",")}`}}const Fs=e=>{const t=e.toLocaleLowerCase();return Object.keys(ks).includes(t)?ks[t].aToken:t},Us=new t.Interface(["function getTokensDistributedInWeek(address token, uint timestamp) view returns (uint)"]),Ls=new t.Interface(["function totalSupply() view returns (uint)"]),qs=new t.Interface(["function getRate() view returns (uint)"]);class Ws{constructor(e,t,a,n,s,i){this.feeDistributorAddress=t,this.balAddress=a,this.veBalAddress=n,this.bbAUsdAddress=s,this.multicall=Ka(e,i)}async fetch(e){const t=this.getPreviousWeek(e),a=[[this.feeDistributorAddress,Us.encodeFunctionData("getTokensDistributedInWeek",[s.getAddress(this.balAddress),t])],[this.feeDistributorAddress,Us.encodeFunctionData("getTokensDistributedInWeek",[s.getAddress(this.bbAUsdAddress),t])],[this.veBalAddress,Ls.encodeFunctionData("totalSupply",[])],[this.bbAUsdAddress,qs.encodeFunctionData("getRate",[])]],[,n]=await this.multicall.aggregate(a);return{balAmount:parseFloat(ds(n[0],18)),bbAUsdAmount:parseFloat(ds(n[1],18)),veBalSupply:parseFloat(ds(n[2],18)),bbAUsdPrice:parseFloat(ds(n[3],18)),balAddress:this.balAddress}}async multicallData(e){return this.data||(this.data=await this.fetch(e)),this.data}getPreviousWeek(e){const t=new Date(e);t.setUTCHours(0),t.setUTCMinutes(0),t.setUTCSeconds(0),t.setUTCMilliseconds(0);let a=t.getUTCDay()-4;return a<0&&(a+=7),a+=7,Math.floor(t.getTime()/1e3)-86400*a}}const $s=new t.Interface(["function getProtocolFeesCollector() view returns (address)"]),Gs=new t.Interface(["function getSwapFeePercentage() view returns (uint)"]);let Vs;class Ks{constructor(e,t){this.provider=t,this.vault=new o.Contract(e,$s,this.provider)}async fetch(){const e=await this.vault.getProtocolFeesCollector(),t=new o.Contract(e,Gs,this.provider),a=await t.getSwapFeePercentage();return parseFloat(ds(a,18))}async find(){return Vs||(Vs=this.fetch()),this.swapFeePercentage=await Vs,this.swapFeePercentage}async findBy(){return this.find()}}const js=new t.Interface(["function getSwapFeePercentage() view returns (uint)"]);let Hs;class Xs{constructor(e,t,a){this.protocolFeePercentagesProviderAddress=t,this.multicall=Ka(e,a)}async fetch(){const e=[[this.protocolFeePercentagesProviderAddress,js.encodeFunctionData("getFeeTypePercentage",[0])],[this.protocolFeePercentagesProviderAddress,js.encodeFunctionData("getFeeTypePercentage",[2])]],[,t]=await this.multicall.aggregate(e);return{swapFee:parseFloat(ds(t[0],18)),yieldFee:parseFloat(ds(t[2],18))}}async getFees(){return Hs||(Hs=this.fetch()),this.protocolFees=await Hs,this.protocolFees}}const Zs={stETH:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"},Js=async()=>{let e=0;try{const t=await _.default.get("https://stake.lido.fi/api/apr"),{data:a}=t.data;e=Math.round(100*parseFloat(a.steth))}catch(e){console.error("Failed to fetch stETH APR:",e)}return{[Zs.stETH]:e}},zs={usdcUSDplus:"0x1aafc31091d93c3ff003cff5d2d8f7ba2e728425",usdcUSDplus2:"0x6933ec1ca55c06a894107860c92acdfd2dd8512f"},Ys=async()=>{let e=0;try{const{data:t}=await _.default.get("https://app.overnight.fi/api/balancer/week/apr");e=Math.round(1e4*parseFloat(t)/100)}catch(e){console.error("Failed to fetch USD+ APR:",e)}return Object.fromEntries(Object.values(zs).map((t=>[t,e])))},Qs=Object.fromEntries([...Object.values(Zs).map((e=>[e,Js])),...Object.values(Bs).map((e=>[e,Ds])),...Object.values(zs).map((e=>[e,Ys]))]);class ei{constructor(e=Qs){this.sources=e,this.yields={}}async fetch(e){const t=await this.sources[e]();this.yields={...this.yields,...t}}async find(e){const t=e.toLocaleLowerCase();return Object.keys(this.sources).includes(t)&&!Object.keys(this.yields).includes(t)&&await this.fetch(e),this.yields[t]}async findBy(e,t){if("address"==e)return this.find(t)}}const ti=e=>`{\n  blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: ${e} }) {\n    number\n  }\n}`,ai=async(e,t)=>{const a={query:ti(t)},n=await _.default.post(e,a),{data:{blocks:s}}=n.data;return parseInt(s[0].number)};class ni{constructor(e){this.endpoint=e,this.blocks={}}async find(e){if("dayAgo"==e){const e=""+(Math.floor(Date.now()/1e3)-86400);return this.blocks[e]||(this.blocks={...this.blocks,[e]:ai(this.endpoint,e)}),this.blocks[e]}}async findBy(e="",t=""){}}var si=[{chainId:1,address:"0x8888801af4d980682e47f1a9036e589479e835c5",symbol:"mph"},{chainId:1,address:"0x27054b13b1b798b345b591a4d22e6562d47ea75a",symbol:"ast"},{chainId:1,address:"0x3301ee63fb29f863f2333bd4466acb46cd8323e6",symbol:"akita"},{chainId:1,address:"0x616e8bfa43f920657b3497dbf40d6b1a02d4608d",symbol:"aurabal"},{chainId:1,address:"0xc0c293ce456ff0ed870add98a0828dd4d2903dbf",symbol:"aura"},{chainId:1,address:"0x3472a5a71965499acd81997a54bba8d852c6e53d",symbol:"badger"},{chainId:1,address:"0xba100000625a3754423978a60c9317c58a424e3d",symbol:"bal"},{chainId:1,address:"0x804cdb9116a10bb78768d3252355a1b18067bf8f",symbol:"bb-a-dai"},{chainId:1,address:"0x9210f1204b5a24742eba12f710636d76240df3d0",symbol:"bb-a-usdc"},{chainId:1,address:"0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c",symbol:"bb-a-usdt"},{chainId:1,address:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2",symbol:"bb-a-usd"},{chainId:1,address:"0x2d94aa3e47d9d5024503ca8491fce9a2fb4da198",symbol:"bank"},{chainId:1,address:"0x0d8775f648430679a709e98d2b0cb6250d2887ef",symbol:"bat"},{chainId:1,address:"0xf17e65822b568b3903685a7c9f496cf7656cc6c2",symbol:"bico"},{chainId:1,address:"0x799ebfabe77a6e34311eeee9825190b9ece32824",symbol:"btrst"},{chainId:1,address:"0x514910771af9ca656af840dff83e8264ecf986ca",symbol:"link"},{chainId:1,address:"0x3506424f91fd33084466f402d5d97f05f8e3b4af",symbol:"chz"},{chainId:1,address:"0x41e5560054824ea6b0732e656e3ad64e20e94e45",symbol:"cvc"},{chainId:1,address:"0xc00e94cb662c3520282e6f5717214004a7f26888",symbol:"comp"},{chainId:1,address:"0xdef1ca1fb7fbcdc777520aa7f396b4e015f497ab",symbol:"cow"},{chainId:1,address:"0xd533a949740bb3306d119cc777fa900ba034cd52",symbol:"crv"},{chainId:1,address:"0x6b175474e89094c44da98b954eedeac495271d0f",symbol:"dai"},{chainId:1,address:"0xf2051511b9b121394fa75b8f7d4e7424337af687",symbol:"haus"},{chainId:1,address:"0x888888435fde8e7d4c54cab67f206e4199454c60",symbol:"dfx"},{chainId:1,address:"0x798d1be841a82a273720ce31c822c61a67a601c3",symbol:"digg"},{chainId:1,address:"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c",symbol:"enj"},{chainId:1,address:"0xc18360217d8f7ab5e7c516566761ea12ce7f9d72",symbol:"ens"},{chainId:1,address:"0x4e15361fd6b4bb609fa63c81a2be19d873717870",symbol:"ftm"},{chainId:1,address:"0x956f47f50a910163d8bf957cf5846d573e7f87ca",symbol:"fei"},{chainId:1,address:"0xed1480d12be41d92f36f5f7bdd88212e381a3677",symbol:"fdt"},{chainId:1,address:"0x586aa273f262909eef8fa02d90ab65f5015e0516",symbol:"fiat"},{chainId:1,address:"0xde30da39c46104798bb5aa3fe8b9e0e1f348163f",symbol:"gtc"},{chainId:1,address:"0x900db999074d9277c5da2a43f252d74366230da0",symbol:"giv"},{chainId:1,address:"0x6810e776880c02933d47db1b9fc05908e5386b96",symbol:"gno"},{chainId:1,address:"0xba485b556399123261a5f9c95d413b4f93107407",symbol:"graviaura"},{chainId:1,address:"0x3ec8798b81485a254928b70cda1cf0a2bb0b74d7",symbol:"gro"},{chainId:1,address:"0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f",symbol:"snx"},{chainId:1,address:"0x5a98fcbea516cf06857215779fd812ca3bef1b32",symbol:"ldo"},{chainId:1,address:"0x6dea81c8171d0ba574754ef6f8b412f2ed88c54d",symbol:"lqty"},{chainId:1,address:"0x5f98805a4e8be255a32880fdec7f6728c6568ba0",symbol:"lusd"},{chainId:1,address:"0x965d79f1a1016b574a62986e13ca8ab04dfdd15c",symbol:"m2"},{chainId:1,address:"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",symbol:"mkr"},{chainId:1,address:"0xd084944d3c05cd115c09d072b9f44ba3e0e45921",symbol:"fold"},{chainId:1,address:"0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",symbol:"matic"},{chainId:1,address:"0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2",symbol:"mta"},{chainId:1,address:"0x4b13006980acb09645131b91d259eaa111eaf5ba",symbol:"myc"},{chainId:1,address:"0x333a4823466879eef910a04d473505da62142069",symbol:"nation"},{chainId:1,address:"0xcfeaead4947f0705a14ec42ac3d44129e1ef3ed5",symbol:"note"},{chainId:1,address:"0x967da4048cd07ab37855c090aaf366e4ce1b9f48",symbol:"ocean"},{chainId:1,address:"0x64aa3364f17a4d01c6f1751fd97c2bd3d7e7f1d5",symbol:"ohm"},{chainId:1,address:"0xab846fb6c81370327e784ae7cbb6d6a6af6ff4bf",symbol:"pal"},{chainId:1,address:"0xcafe001067cdef266afb7eb5a286dcfd277f3de5",symbol:"psp"},{chainId:1,address:"0x68037790a0229e9ce6eaa8a99ea92964106c4703",symbol:"par"},{chainId:1,address:"0x45804880de22913dafe09f4980848ece6ecbaf78",symbol:"paxg"},{chainId:1,address:"0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed",symbol:"pnt"},{chainId:1,address:"0x9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",symbol:"poly"},{chainId:1,address:"0x43d4a3cd90ddd2f8f4f693170c9c8098163502ad",symbol:"d2d"},{chainId:1,address:"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d",symbol:"renbtc"},{chainId:1,address:"0x408e41876cccdc0f92210600ef50372656052a38",symbol:"ren"},{chainId:1,address:"0xfb5453340c03db5ade474b27e68b6a9c6b2823eb",symbol:"robot"},{chainId:1,address:"0xd33526068d116ce69f19a9ee46f0bd304f21a51f",symbol:"rpl"},{chainId:1,address:"0xae78736cd615f374d3085123a210448e74fc6393",symbol:"reth"},{chainId:1,address:"0xfe18be6b3bd88a2d2a7f928d00292e7a9963cfc6",symbol:"sbtc"},{chainId:1,address:"0x476c5e26a75bd202a9683ffd34359c0cc15be0ff",symbol:"srm"},{chainId:1,address:"0x35e78b3982e87ecfd5b3f3265b601c046cdbe232",symbol:"xai"},{chainId:1,address:"0x3affcca64c2a6f4e3b6bd9c64cd2c969efd1ecbe",symbol:"dsla"},{chainId:1,address:"0xf24d8651578a55b0c119b9910759a351a3458895",symbol:"sdbal"},{chainId:1,address:"0x11c1a6b3ed6bb362954b29d3183cfa97a0c806aa",symbol:"str"},{chainId:1,address:"0x8f693ca8d21b157107184d29d398a8d082b38b76",symbol:"data"},{chainId:1,address:"0x470ebf5f030ed85fc1ed4c2d36b9dd02e77cf1b7",symbol:"temple"},{chainId:1,address:"0xa36fdbbae3c9d55a1d67ee5821d53b50b63a1ab9",symbol:"temp"},{chainId:1,address:"0xdac17f958d2ee523a2206206994597c13d831ec7",symbol:"usdt"},{chainId:1,address:"0x9c4a4204b79dd291d6b6571c5be8bbcd0622f050",symbol:"tcr"},{chainId:1,address:"0x226f7b842e0f0120b7e194d05432b3fd14773a9d",symbol:"unn"},{chainId:1,address:"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",symbol:"uni"},{chainId:1,address:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",symbol:"usdc"},{chainId:1,address:"0x81f8f0bb1cb2a06649e51913a151f0e7ef6fa321",symbol:"vita"},{chainId:1,address:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",symbol:"weth"},{chainId:1,address:"0xedb171c18ce90b633db442f2a6f72874093b49ef",symbol:"wampl"},{chainId:1,address:"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",symbol:"wbtc"},{chainId:1,address:"0xf203ca1769ca8e9e8fe1da9d147db68b6c919817",symbol:"wncg"},{chainId:1,address:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",symbol:"wsteth"},{chainId:1,address:"0x79c71d3436f39ce382d0f58f1b011d88100b9d91",symbol:"xns"},{chainId:1,address:"0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e",symbol:"yfi"},{chainId:1,address:"0xbcca60bb61934080951369a648fb03df4f96263c",symbol:"ausdc"},{chainId:1,address:"0x028171bca77440897b824ca71d1c56cac55b68a3",symbol:"adai"},{chainId:1,address:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",symbol:"ausdt"},{chainId:137,address:"0x9c2c5fd7b07e95ee044ddeba0e97a665f142394f",symbol:"1inch"},{chainId:137,address:"0xd6df932a45c0f255f85145f286ea0b292b21c90b",symbol:"aave"},{chainId:137,address:"0xc3fdbadc7c795ef1d6ba111e06ff8f16a20ea539",symbol:"addy"},{chainId:137,address:"0xf84bd51eab957c2e7b7d646a3427c5a50848281d",symbol:"agar"},{chainId:137,address:"0x033d942a6b495c4071083f4cde1f17e986fe856c",symbol:"aga"},{chainId:137,address:"0x0e9b89007eee9c958c0eda24ef70723c2c93dd58",symbol:"amaticc"},{chainId:137,address:"0x034b2090b579228482520c589dbd397c53fc51cc",symbol:"vision"},{chainId:137,address:"0x2c89bbc92bd86f8075d1decc58c7f4e0107f286b",symbol:"avax"},{chainId:137,address:"0x49690541e3f6e933a9aa3cffee6010a7bb5b72d7",symbol:"axiav3"},{chainId:137,address:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",symbol:"bal"},{chainId:137,address:"0xdb7cb471dd0b49b29cab4a1c14d070f27216a0ab",symbol:"bank"},{chainId:137,address:"0xfbdd194376de19a88118e84e279b977f165d01b8",symbol:"bifi"},{chainId:137,address:"0xd6ca869a4ec9ed2c7e618062cdc45306d8dbbc14",symbol:"btc2x-fli-p"},{chainId:137,address:"0x53e0bca35ec356bd5dddfebbd1fc0fd03fabad39",symbol:"link"},{chainId:137,address:"0x172370d5cd63279efa6d502dab29171933a610af",symbol:"crv"},{chainId:137,address:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063",symbol:"dai"},{chainId:137,address:"0x1d607faa0a51518a7728580c238d912747e71f7a",symbol:"data"},{chainId:137,address:"0x85955046df4668e1dd369d2de9f3aeb98dd2a369",symbol:"dpi"},{chainId:137,address:"0xe7804d91dfcde7f776c90043e03eaa6df87e6395",symbol:"dfx"},{chainId:137,address:"0xf28164a485b0b2c90639e47b0f377b4a438a16b1",symbol:"dquick"},{chainId:137,address:"0x45c32fa6df82ead1e2ef74d17b76547eddfaff89",symbol:"frax"},{chainId:137,address:"0x50b728d8d964fd00c2d0aad81718b71311fef68a",symbol:"snx"},{chainId:137,address:"0x72928d5436ff65e57f72d5566dcd3baedc649a88",symbol:"hdao"},{chainId:137,address:"0x3ad707da309f3845cd602059901e39c4dcd66473",symbol:"eth2x-fli-p"},{chainId:137,address:"0x4f025829c4b13df652f38abd2ab901185ff1e609",symbol:"ieth-fli-p"},{chainId:137,address:"0x340f412860da7b7823df372a2b59ff78b7ae6abc",symbol:"imatic-fli-p"},{chainId:137,address:"0xf287d97b6345bad3d88856b26fb7c0ab3f2c7976",symbol:"matic2x-fli-p"},{chainId:137,address:"0x130ce4e4f76c2265f94a961d70618562de0bb8d2",symbol:"ibtc-fli-p"},{chainId:137,address:"0x596ebe76e2db4470966ea395b0d063ac6197a8c5",symbol:"jrt"},{chainId:137,address:"0x3a58a54c066fdc0f2d55fc9c89f0415c92ebf3c4",symbol:"stmatic"},{chainId:137,address:"0xf501dd45a1198c2e1b5aef5314a68b9006d842e0",symbol:"mta"},{chainId:137,address:"0xeaecc18198a475c921b24b8a6c1c1f0f5f3f7ea0",symbol:"seed"},{chainId:137,address:"0xfe712251173a2cd5f5be2b46bb528328ea3565e1",symbol:"mvi"},{chainId:137,address:"0xa3fa99a148fa48d14ed51d610c367c61876997f1",symbol:"mimatic"},{chainId:137,address:"0xa486c6bc102f409180ccb8a94ba045d39f8fc7cb",symbol:"nex"},{chainId:137,address:"0xe2aa7db6da1dae97c5f5c6914d285fbfcc32a128",symbol:"par"},{chainId:137,address:"0x580a84c73811e1839f75d86d75d88cca0c241ff4",symbol:"qi"},{chainId:137,address:"0x831753dd7087cac61ab5644b308642cc1c33dc13",symbol:"quick"},{chainId:137,address:"0xb5c064f955d8e7f38fe0460c556a72987494ee17",symbol:"quick"},{chainId:137,address:"0x00e5646f60ac6fb446f621d146b6e1886f002905",symbol:"rai"},{chainId:137,address:"0x431cd3c9ac9fc73644bf68bf5691f4b83f9e104f",symbol:"rbw"},{chainId:137,address:"0xdbf31df14b66535af65aac99c32e9ea844e14501",symbol:"renbtc"},{chainId:137,address:"0x501ace9c35e60f03a2af4d484f49f9b1efde9f40",symbol:"solace"},{chainId:137,address:"0xfa68fb4628dff1028cfec22b4162fccd0d45efb6",symbol:"maticx"},{chainId:137,address:"0x0b3f868e0be5597d5db7feb59e1cadbb0fdda50a",symbol:"sushi"},{chainId:137,address:"0xdf7837de1f2fa4631d716cf2502f8b230f1dcc32",symbol:"tel"},{chainId:137,address:"0xe6469ba6d2fd6130788e0ea9c0a0515900563b59",symbol:"ust"},{chainId:137,address:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",symbol:"usdt"},{chainId:137,address:"0x5fe2b58c013d7601147dcdd68c143a77499f5531",symbol:"grt"},{chainId:137,address:"0xbbba073c31bf03b8acf7c28ef0738decf3695683",symbol:"sand"},{chainId:137,address:"0x2934b36ca9a4b31e633c5be670c8c8b28b6aa015",symbol:"thx"},{chainId:137,address:"0x2f800db0fdb5223b3c3f354886d907a671414a7f",symbol:"bct"},{chainId:137,address:"0x2e1ad108ff1d8c782fcbbb89aad783ac49586756",symbol:"tusd"},{chainId:137,address:"0x3809dcdd5dde24b37abe64a5a339784c3323c44f",symbol:"swap"},{chainId:137,address:"0x7fbc10850cae055b27039af31bd258430e714c62",symbol:"ubt"},{chainId:137,address:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",symbol:"usdc"},{chainId:137,address:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",symbol:"weth"},{chainId:137,address:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",symbol:"wmatic"},{chainId:137,address:"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6",symbol:"wbtc"},{chainId:137,address:"0x24834bbec7e39ef42f4a75eaf8e5b6486d3f0e57",symbol:"lunc"},{chainId:137,address:"0xf153eff70dc0bf3b085134928daeea248d9b30d0",symbol:"xmark"},{chainId:42161,address:"0x9f20de1fc9b161b34089cbeae888168b44b03461",symbol:"arbis"},{chainId:42161,address:"0x040d1edc9569d4bab2d15287dc5a4f10f56a56b8",symbol:"bal"},{chainId:42161,address:"0x031d35296154279dc1984dcd93e392b1f946737b",symbol:"cap"},{chainId:42161,address:"0xf97f4df75117a78c1a5a0dbb814af92458539fb4",symbol:"link"},{chainId:42161,address:"0x354a6da3fcde098f8389cad84b0182725c6c91de",symbol:"comp"},{chainId:42161,address:"0xf4d48ce3ee1ac3651998971541badbb9a14d7234",symbol:"cream"},{chainId:42161,address:"0x11cdb42b0eb46d95f990bedd4695a6e3fa034978",symbol:"crv"},{chainId:42161,address:"0xda10009cbd5d07dd0cecc66161fc93d7c9000da1",symbol:"dai"},{chainId:42161,address:"0x8038f3c971414fd1fc220ba727f2d4a0fc98cb65",symbol:"dht"},{chainId:42161,address:"0xf0b5ceefc89684889e5f7e0a7775bd100fcd3709",symbol:"dusd"},{chainId:42161,address:"0x6c2c06790b3e3e3c38e12ee22f8183b37a13ee55",symbol:"dpx"},{chainId:42161,address:"0x32eb7902d4134bf98a28b963d26de779af92a212",symbol:"rdpx"},{chainId:42161,address:"0xc3ae0333f0f34aa734d5493276223d95b8f9cb37",symbol:"dxd"},{chainId:42161,address:"0xfc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a",symbol:"gmx"},{chainId:42161,address:"0xa0b862f60edef4452f25b4160f177db44deb6cf1",symbol:"gno"},{chainId:42161,address:"0xb965029343d55189c25a7f3e0c9394dc0f5d41b1",symbol:"ndx"},{chainId:42161,address:"0x539bde0d7dbd336b79148aa742883198bbf60342",symbol:"magic"},{chainId:42161,address:"0x4e352cf164e64adcbad318c3a1e222e9eba4ce42",symbol:"mcb"},{chainId:42161,address:"0x3f56e0c36d275367b8c502090edf38289b3dea0d",symbol:"mimatic"},{chainId:42161,address:"0x965772e0e9c84b6f359c8597c891108dcf1c5b1a",symbol:"pickle"},{chainId:42161,address:"0x6694340fc020c5e6b96567843da2df01b2ce1eb6",symbol:"stg"},{chainId:42161,address:"0xd4d42f0b6def4ce0383636770ef773390d85c61a",symbol:"sushi"},{chainId:42161,address:"0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",symbol:"usdt"},{chainId:42161,address:"0x23a941036ae778ac51ab04cea08ed6e2fe103614",symbol:"grt"},{chainId:42161,address:"0xa72159fc390f0e3c6d415e658264c7c4051e9b87",symbol:"tcr"},{chainId:42161,address:"0x4d15a3a2286d883af0aa1b3f21367843fac63e07",symbol:"tusd"},{chainId:42161,address:"0xfa7f8980b0f1e64a2062791cc3b0871572f1f7f0",symbol:"uni"},{chainId:42161,address:"0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",symbol:"usdc"},{chainId:42161,address:"0xa684cd057951541187f288294a1e1c2646aa2d24",symbol:"vsta"},{chainId:42161,address:"0x64343594ab9b56e99087bfa6f2335db24c2d1f17",symbol:"vst"},{chainId:42161,address:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1",symbol:"weth"},{chainId:42161,address:"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f",symbol:"wbtc"},{chainId:42161,address:"0x82e3a8f066a6989666b031d916c43672085b1582",symbol:"yfi"}];class ii{constructor(e,t){if(this.pools=new Ps({url:e.urls.subgraph,chainId:e.chainId}),e.urls.blockNumberSubgraph){this.blockNumbers=new ni(e.urls.blockNumberSubgraph);const t=async()=>{if(this.blockNumbers)return await this.blockNumbers.find("dayAgo")};this.yesterdaysPools=new Ps({url:e.urls.subgraph,chainId:e.chainId,blockHeight:t})}const a=si.filter((t=>t.chainId==e.chainId)).map((e=>e.address));this.tokenPrices=new Ms(a,e.chainId),this.tokenMeta=new Ns([]),e.urls.gaugesSubgraph&&(this.liquidityGauges=new xs(e.urls.gaugesSubgraph,e.addresses.contracts.multicall,e.addresses.contracts.gaugeController||"",e.chainId,t)),e.addresses.contracts.feeDistributor&&e.addresses.tokens.bal&&e.addresses.tokens.veBal&&e.addresses.tokens.bbaUsd&&(this.feeDistributor=new Ws(e.addresses.contracts.multicall,e.addresses.contracts.feeDistributor,e.addresses.tokens.bal,e.addresses.tokens.veBal,e.addresses.tokens.bbaUsd,t)),this.feeCollector=new Ks(e.addresses.contracts.vault,t),e.addresses.contracts.protocolFeePercentagesProvider&&(this.protocolFees=new Xs(e.addresses.contracts.multicall,e.addresses.contracts.protocolFeePercentagesProvider,t)),this.tokenYields=new ei}}Object.defineProperty(e,"PoolFilter",{enumerable:!0,get:function(){return p.PoolFilter}}),Object.defineProperty(e,"RouteProposer",{enumerable:!0,get:function(){return p.RouteProposer}}),Object.defineProperty(e,"SOR",{enumerable:!0,get:function(){return p.SOR}}),Object.defineProperty(e,"SwapTypes",{enumerable:!0,get:function(){return p.SwapTypes}}),Object.defineProperty(e,"formatSequence",{enumerable:!0,get:function(){return p.formatSequence}}),Object.defineProperty(e,"getTokenAddressesForSwap",{enumerable:!0,get:function(){return p.getTokenAddressesForSwap}}),Object.defineProperty(e,"parseToPoolsDict",{enumerable:!0,get:function(){return p.parseToPoolsDict}}),Object.defineProperty(e,"phantomStableBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return p.phantomStableBPTForTokensZeroPriceImpact}}),Object.defineProperty(e,"queryBatchSwapTokensIn",{enumerable:!0,get:function(){return p.queryBatchSwapTokensIn}}),Object.defineProperty(e,"queryBatchSwapTokensOut",{enumerable:!0,get:function(){return p.queryBatchSwapTokensOut}}),Object.defineProperty(e,"stableBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return p.stableBPTForTokensZeroPriceImpact}}),Object.defineProperty(e,"weightedBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return p.weightedBPTForTokensZeroPriceImpact}}),e.AaveHelpers=class{static async getRate(e,t){const a=new o.Contract(e,K,t);return(await a.getRate()).toString()}},e.AssetHelpers=V,e.BalancerAPIArgsFormatter=X,e.BalancerError=ue,e.BalancerErrors=U,e.BalancerMinterAuthorization=$,e.BalancerSDK=class{constructor(e,t=new nn(e),a=new Sn(e)){this.config=e,this.sor=t,this.subgraph=a,this.networkConfig=an(e),this.data=new ii(this.networkConfig,t.provider),this.swaps=new In(this.config),this.relayer=new En(this.swaps),this.pricing=new _n(e,this.swaps),this.pools=new gs(this.networkConfig,this.data),this.balancerContracts=new xn(this.networkConfig.addresses.contracts,t.provider),this.zaps=new Jn(this.networkConfig.chainId)}get rpcProvider(){return this.sor.provider}get contracts(){return this.balancerContracts.contracts}},e.BlockNumberRepository=ni,e.CoingeckoPriceRepository=Ms,e.ComposableStablePoolEncoder=B,e.Data=ii,e.FeeCollectorRepository=Ks,e.FeeDistributorRepository=Ws,e.GaugeControllerMulticallRepository=Es,e.GraphQLArgsBuilder=J,e.Liquidity=rt,e.LiquidityGaugeSubgraphRPCProvider=xs,e.LiquidityGaugesMulticallRepository=_s,e.LiquidityGaugesSubgraphRepository=As,e.ManagedPoolEncoder=O,e.Pools=gs,e.PoolsBalancerAPIRepository=class{constructor(e){var t,a;this.pools=[],this.skip=0,this.client=new Os(e.url,e.apiKey);this.query={args:(null===(t=e.query)||void 0===t?void 0:t.args)||{chainId:1,orderBy:"totalLiquidity",orderDirection:"desc",where:{swapEnabled:{eq:!0},totalShares:{gt:.05}}},attrs:(null===(a=e.query)||void 0===a?void 0:a.attrs)||{id:!0,address:!0}}}fetchFromCache(e){const t=(null==e?void 0:e.first)||10,a=(null==e?void 0:e.skip)||0,n=this.pools.slice(a,t+a);return this.skip=a+t,n}async fetch(e){if(this.pools.length>((null==e?void 0:e.first)||10)+((null==e?void 0:e.skip)||0))return this.fetchFromCache(e);this.nextToken&&(this.query.args.nextToken=this.nextToken),(null==e?void 0:e.first)&&(this.query.args.first=2*e.first);const t=new J(this.query.args).format(new X),a=this.query.attrs;a.nextToken=!0;const n={pools:{__args:t,...a}},s=(await this.client.get(n)).pools;return this.nextToken=s.nextToken,this.pools=this.pools.concat(s.pools.map(this.format)),this.skip=this.pools.length,this.fetchFromCache(e)}async find(e){return 0==this.pools.length&&await this.fetch(),this.findBy("id",e)}async findBy(e,t){0==this.pools.length&&await this.fetch();const a=this.pools.find((a=>a[e]==t));if(a)return this.format(a)}format(e){var t,a,n,s;if(null===(t=e.apr)||void 0===t?void 0:t.rewardAprs.breakdown){const t=JSON.parse(null===(a=e.apr)||void 0===a?void 0:a.rewardAprs.breakdown);e.apr.rewardAprs.breakdown=t}if(null===(n=e.apr)||void 0===n?void 0:n.tokenAprs.breakdown){const t=JSON.parse(null===(s=e.apr)||void 0===s?void 0:s.tokenAprs.breakdown);e.apr.tokenAprs.breakdown=t}return e}},e.PoolsFallbackRepository=class{constructor(e,t={}){this.providers=e,this.currentProviderIdx=0,this.timeout=t.timeout||1e4}async fetch(e){return this.fallbackQuery("fetch",[e])}get currentProvider(){if(this.providers.length&&!(this.currentProviderIdx>=this.providers.length))return this.providers[this.currentProviderIdx]}async find(e){return this.fallbackQuery("find",[e])}async findBy(e,t){return this.fallbackQuery("findBy",[e,t])}async fallbackQuery(e,t){if(this.currentProviderIdx>=this.providers.length)throw new Error("No working providers found");let a;try{const n=this.providers[this.currentProviderIdx];a=await Promise.race([n[e].apply(n,t),new Promise(((e,t)=>setTimeout((()=>t(new Error("timeout"))),this.timeout)))])}catch(n){const s=n.message;"timeout"===s?console.error("Provider "+this.currentProviderIdx+" timed out, falling back to next provider"):console.error("Provider "+this.currentProviderIdx+" failed with error: ",s,", falling back to next provider"),this.currentProviderIdx++,a=await this.fallbackQuery.call(this,e,t)}return a}},e.PoolsStaticRepository=class{constructor(e){this.pools=e}async find(e){return this.pools.find((t=>t.id.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.pools.find((a=>a[e]===t))}async all(){return this.pools}async where(e){return(await this.all()).filter(e)}},e.PoolsSubgraphRepository=Ps,e.ProtocolFeesProvider=Xs,e.Relayer=En,e.RelayerAuthorization=W,e.Sor=nn,e.StablePoolEncoder=A,e.StaticTokenPriceProvider=class{constructor(e){this.tokenPrices=e,this.calculateUSDPrices()}calculateUSDPrices(){let e=0,t=n.BigNumber.from(0);if(["0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","0x6b175474e89094c44da98b954eedeac495271d0f","0x6B175474E89094C44Da98b954EedeAC495271d0F","0xdac17f958d2ee523a2206206994597c13d831ec7","0xdAC17F958D2ee523a2206206994597C13D831ec7"].forEach((a=>{const n=this.tokenPrices[a];if(null==n?void 0:n.eth){const a=me(null==n?void 0:n.eth,18);t=t.add(a),e++}})),0===e)return;const a=t.div(e);for(const e in this.tokenPrices){const t=this.tokenPrices[e];if(t.eth&&!t.usd){const e=me("1",18).mul(me(t.eth,18)).div(a).toString();t.usd=n.formatFixed(e,18)}}}async find(e){const t=this.tokenPrices[e];if(t)return t}async findBy(e,t){if("address"==e)return this.find(t)}},e.StaticTokenProvider=Ns,e.Subgraph=Sn,e.SubgraphArgsFormatter=Z,e.Swaps=In,e.TokenYieldsRepository=ei,e.WeightedPoolEncoder=x,e.accountToAddress=L,e.balEmissions=bs,e.getLimitsForSlippage=ne,e.getPoolAddress=R,e.getPoolNonce=M,e.getPoolSpecialization=D,e.isNormalizedWeights=e=>{const t=e.reduce(((e,t)=>e.add(t)),a.Zero);return t.eq(a.WeiPerEther)},e.isSameAddress=H,e.parsePoolInfo=j,e.signPermit=async(e,t,s,r,o=a.MaxUint256,d)=>{const{chainId:p}=await e.provider.getNetwork(),l=await t.getAddress();d||(d=await e.nonces(l));const u={name:await e.name(),version:"1",chainId:p,verifyingContract:e.address},c={owner:l,spender:await L(s),value:r,nonce:d,deadline:o},y=await t._signTypedData(u,{Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},c);return{...i.splitSignature(y),deadline:n.BigNumber.from(o),nonce:n.BigNumber.from(d)}},e.splitPoolId=e=>({address:R(e),specialization:D(e),nonce:M(e)}),e.toNormalizedWeights=function(e){if(100==e.length)return Array(100).fill(a.WeiPerEther.div(100));const t=e.reduce(((e,t)=>e.add(t)),a.Zero);if(t.eq(a.WeiPerEther))return e;const n=[];let s=a.Zero;for(let i=0;i<e.length;i++)i<e.length-1?(n[i]=e[i].mul(a.WeiPerEther).div(t),s=s.add(n[i])):n[i]=a.WeiPerEther.sub(s);return n},e.tokensToTokenPrices=function(e){const t={};return e.forEach((e=>{e.price&&(t[e.address]=e.price)})),t},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=index.umd.js.map
