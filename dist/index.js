"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@ethersproject/abi"),t=require("@ethersproject/constants"),a=require("@ethersproject/bignumber"),n=require("@ethersproject/address"),s=require("@ethersproject/bytes"),i=require("@ethersproject/abstract-signer"),r=require("@ethersproject/contracts"),o=require("lodash"),d=require("@balancer-labs/sor"),p=require("@balancer-labs/typechain"),l=require("@ethersproject/providers"),u=require("graphql-request"),c=require("graphql"),y=require("axios"),m=require("json-to-graphql-query");function b(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function h(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(a){if("default"!==a){var n=Object.getOwnPropertyDescriptor(e,a);Object.defineProperty(t,a,n.get?n:{enumerable:!0,get:function(){return e[a]}})}})),t.default=e,Object.freeze(t)}var f,T,I,g,w,E=h(d),x=b(y);exports.StablePoolJoinKind=void 0,(f=exports.StablePoolJoinKind||(exports.StablePoolJoinKind={}))[f.INIT=0]="INIT",f[f.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",f[f.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",exports.StablePhantomPoolJoinKind=void 0,(T=exports.StablePhantomPoolJoinKind||(exports.StablePhantomPoolJoinKind={}))[T.INIT=0]="INIT",T[T.COLLECT_PROTOCOL_FEES=1]="COLLECT_PROTOCOL_FEES",exports.StablePoolExitKind=void 0,(I=exports.StablePoolExitKind||(exports.StablePoolExitKind={}))[I.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",I[I.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",I[I.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT";class S{constructor(){}}S.joinInit=t=>e.defaultAbiCoder.encode(["uint256","uint256[]"],[exports.StablePoolJoinKind.INIT,t]),S.joinCollectProtocolFees=()=>e.defaultAbiCoder.encode(["uint256"],[exports.StablePhantomPoolJoinKind.COLLECT_PROTOCOL_FEES]),S.joinExactTokensInForBPTOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.StablePoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,t,a]),S.joinTokenInForExactBPTOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.StablePoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,t,a]),S.exitExactBPTInForOneTokenOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.StablePoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,a]),S.exitExactBPTInForTokensOut=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[exports.StablePoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT,t]),S.exitBPTInForExactTokensOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.StablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,t,a]),exports.WeightedPoolJoinKind=void 0,(g=exports.WeightedPoolJoinKind||(exports.WeightedPoolJoinKind={}))[g.INIT=0]="INIT",g[g.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",g[g.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",g[g.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT=3]="ALL_TOKENS_IN_FOR_EXACT_BPT_OUT",exports.WeightedPoolExitKind=void 0,(w=exports.WeightedPoolExitKind||(exports.WeightedPoolExitKind={}))[w.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",w[w.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",w[w.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT",w[w.MANAGEMENT_FEE_TOKENS_OUT=3]="MANAGEMENT_FEE_TOKENS_OUT";class _{constructor(){}}_.joinInit=t=>e.defaultAbiCoder.encode(["uint256","uint256[]"],[exports.WeightedPoolJoinKind.INIT,t]),_.joinExactTokensInForBPTOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,t,a]),_.joinTokenInForExactBPTOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,t,a]),_.joinAllTokensInForExactBPTOut=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[exports.WeightedPoolJoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT,t]),_.exitExactBPTInForOneTokenOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,a]),_.exitExactBPTInForTokensOut=t=>e.defaultAbiCoder.encode(["uint256","uint256"],[exports.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT,t]),_.exitBPTInForExactTokensOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.WeightedPoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,t,a]);class A{constructor(){}}A.exitForManagementFees=()=>e.defaultAbiCoder.encode(["uint256"],[exports.WeightedPoolExitKind.MANAGEMENT_FEE_TOKENS_OUT]);var O,P;exports.ComposableStablePoolJoinKind=void 0,(O=exports.ComposableStablePoolJoinKind||(exports.ComposableStablePoolJoinKind={}))[O.INIT=0]="INIT",O[O.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",O[O.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",exports.ComposableStablePoolExitKind=void 0,(P=exports.ComposableStablePoolExitKind||(exports.ComposableStablePoolExitKind={}))[P.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",P[P.BPT_IN_FOR_EXACT_TOKENS_OUT=1]="BPT_IN_FOR_EXACT_TOKENS_OUT";class N{constructor(){}}N.joinInit=t=>e.defaultAbiCoder.encode(["uint256","uint256[]"],[exports.ComposableStablePoolJoinKind.INIT,t]),N.joinCollectProtocolFees=()=>e.defaultAbiCoder.encode(["uint256"],[exports.StablePhantomPoolJoinKind.COLLECT_PROTOCOL_FEES]),N.joinExactTokensInForBPTOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.ComposableStablePoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,t,a]),N.joinTokenInForExactBPTOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.ComposableStablePoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,t,a]),N.exitExactBPTInForOneTokenOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256","uint256"],[exports.ComposableStablePoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,a]),N.exitBPTInForExactTokensOut=(t,a)=>e.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[exports.ComposableStablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,t,a]);var B="production"===process.env.NODE_ENV,k="Invariant failed";function v(e,t){if(!e){if(B)throw new Error(k);var a="function"==typeof t?t():t;throw new Error(a?k+": "+a:k)}}const C=e=>(v(66===e.length,"Invalid poolId length"),e.slice(0,42)),R=e=>{v(66===e.length,"Invalid poolId length");const t=parseInt(e[45]);return v(t<3,"Invalid pool specialization"),t},D=e=>(v(66===e.length,"Invalid poolId length"),a.BigNumber.from(`0x${e.slice(46)}`)),M={"000":"ADD_OVERFLOW","001":"SUB_OVERFLOW","002":"SUB_UNDERFLOW","003":"MUL_OVERFLOW","004":"ZERO_DIVISION","005":"DIV_INTERNAL","006":"X_OUT_OF_BOUNDS","007":"Y_OUT_OF_BOUNDS","008":"PRODUCT_OUT_OF_BOUNDS","009":"INVALID_EXPONENT",100:"OUT_OF_BOUNDS",101:"UNSORTED_ARRAY",102:"UNSORTED_TOKENS",103:"INPUT_LENGTH_MISMATCH",104:"ZERO_TOKEN",200:"MIN_TOKENS",201:"MAX_TOKENS",202:"MAX_SWAP_FEE_PERCENTAGE",203:"MIN_SWAP_FEE_PERCENTAGE",204:"MINIMUM_BPT",205:"CALLER_NOT_VAULT",206:"UNINITIALIZED",207:"BPT_IN_MAX_AMOUNT",208:"BPT_OUT_MIN_AMOUNT",209:"EXPIRED_PERMIT",210:"NOT_TWO_TOKENS",211:"DISABLED",300:"MIN_AMP",301:"MAX_AMP",302:"MIN_WEIGHT",303:"MAX_STABLE_TOKENS",304:"MAX_IN_RATIO",305:"MAX_OUT_RATIO",306:"MIN_BPT_IN_FOR_TOKEN_OUT",307:"MAX_OUT_BPT_FOR_TOKEN_IN",308:"NORMALIZED_WEIGHT_INVARIANT",309:"INVALID_TOKEN",310:"UNHANDLED_JOIN_KIND",311:"ZERO_INVARIANT",312:"ORACLE_INVALID_SECONDS_QUERY",313:"ORACLE_NOT_INITIALIZED",314:"ORACLE_QUERY_TOO_OLD",315:"ORACLE_INVALID_INDEX",316:"ORACLE_BAD_SECS",317:"AMP_END_TIME_TOO_CLOSE",318:"AMP_ONGOING_UPDATE",319:"AMP_RATE_TOO_HIGH",320:"AMP_NO_ONGOING_UPDATE",321:"STABLE_INVARIANT_DIDNT_CONVERGE",322:"STABLE_GET_BALANCE_DIDNT_CONVERGE",323:"RELAYER_NOT_CONTRACT",324:"BASE_POOL_RELAYER_NOT_CALLED",325:"REBALANCING_RELAYER_REENTERED",326:"GRADUAL_UPDATE_TIME_TRAVEL",327:"SWAPS_DISABLED",328:"CALLER_IS_NOT_LBP_OWNER",329:"PRICE_RATE_OVERFLOW",330:"INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED",331:"WEIGHT_CHANGE_TOO_FAST",332:"LOWER_GREATER_THAN_UPPER_TARGET",333:"UPPER_TARGET_TOO_HIGH",334:"UNHANDLED_BY_LINEAR_POOL",335:"OUT_OF_TARGET_RANGE",336:"UNHANDLED_EXIT_KIND ",337:"UNAUTHORIZED_EXIT",338:"MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE",339:"UNHANDLED_BY_MANAGED_POOL",340:"UNHANDLED_BY_PHANTOM_POOL",341:"TOKEN_DOES_NOT_HAVE_RATE_PROVIDER",342:"INVALID_INITIALIZATION",343:"OUT_OF_NEW_TARGET_RANGE",344:"UNAUTHORIZED_OPERATION",345:"UNINITIALIZED_POOL_CONTROLLER",400:"REENTRANCY",401:"SENDER_NOT_ALLOWED",402:"PAUSED",403:"PAUSE_WINDOW_EXPIRED",404:"MAX_PAUSE_WINDOW_DURATION",405:"MAX_BUFFER_PERIOD_DURATION",406:"INSUFFICIENT_BALANCE",407:"INSUFFICIENT_ALLOWANCE",408:"ERC20_TRANSFER_FROM_ZERO_ADDRESS",409:"ERC20_TRANSFER_TO_ZERO_ADDRESS",410:"ERC20_MINT_TO_ZERO_ADDRESS",411:"ERC20_BURN_FROM_ZERO_ADDRESS",412:"ERC20_APPROVE_FROM_ZERO_ADDRESS",413:"ERC20_APPROVE_TO_ZERO_ADDRESS",414:"ERC20_TRANSFER_EXCEEDS_ALLOWANCE",415:"ERC20_DECREASED_ALLOWANCE_BELOW_ZERO",416:"ERC20_TRANSFER_EXCEEDS_BALANCE",417:"ERC20_BURN_EXCEEDS_ALLOWANCE",418:"SAFE_ERC20_CALL_FAILED",419:"ADDRESS_INSUFFICIENT_BALANCE",420:"ADDRESS_CANNOT_SEND_VALUE",421:"SAFE_CAST_VALUE_CANT_FIT_INT256",422:"GRANT_SENDER_NOT_ADMIN",423:"REVOKE_SENDER_NOT_ADMIN",424:"RENOUNCE_SENDER_NOT_ALLOWED",425:"BUFFER_PERIOD_EXPIRED",426:"CALLER_IS_NOT_OWNER",427:"NEW_OWNER_IS_ZERO",428:"CODE_DEPLOYMENT_FAILED",429:"CALL_TO_NON_CONTRACT",430:"LOW_LEVEL_CALL_FAILED",431:"NOT_PAUSED",432:"ADDRESS_ALREADY_ALLOWLISTED",433:"ADDRESS_NOT_ALLOWLISTED",434:"ERC20_BURN_EXCEEDS_BALANCE",500:"INVALID_POOL_ID",501:"CALLER_NOT_POOL",502:"SENDER_NOT_ASSET_MANAGER",503:"USER_DOESNT_ALLOW_RELAYER",504:"INVALID_SIGNATURE",505:"EXIT_BELOW_MIN",506:"JOIN_ABOVE_MAX",507:"SWAP_LIMIT",508:"SWAP_DEADLINE",509:"CANNOT_SWAP_SAME_TOKEN",510:"UNKNOWN_AMOUNT_IN_FIRST_SWAP",511:"MALCONSTRUCTED_MULTIHOP_SWAP",512:"INTERNAL_BALANCE_OVERFLOW",513:"INSUFFICIENT_INTERNAL_BALANCE",514:"INVALID_ETH_INTERNAL_BALANCE",515:"INVALID_POST_LOAN_BALANCE",516:"INSUFFICIENT_ETH",517:"UNALLOCATED_ETH",518:"ETH_TRANSFER",519:"CANNOT_USE_ETH_SENTINEL",520:"TOKENS_MISMATCH",521:"TOKEN_NOT_REGISTERED",522:"TOKEN_ALREADY_REGISTERED",523:"TOKENS_ALREADY_SET",524:"TOKENS_LENGTH_MUST_BE_2",525:"NONZERO_TOKEN_BALANCE",526:"BALANCE_TOTAL_OVERFLOW",527:"POOL_NO_TOKENS",528:"INSUFFICIENT_FLASH_LOAN_BALANCE",600:"SWAP_FEE_PERCENTAGE_TOO_HIGH",601:"FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH",602:"INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT"};class F{constructor(){}}async function U(e){if("string"==typeof e)return e;if(i.Signer.isSigner(e))return e.getAddress();if(e.address)return e.address;throw new Error("Could not read account address")}var L;F.isErrorCode=e=>{if(!e.includes("BAL#"))return!1;const t=e.replace("BAL#","");return Object.keys(M).includes(t)},F.parseErrorCode=e=>{if(!e.includes("BAL#"))throw new Error("Error code not found");const t=e.replace("BAL#",""),a=M[t];if(!a)throw new Error("Error code not found");return a},F.tryParseErrorCode=e=>{try{return F.parseErrorCode(e)}catch{return e}},F.isBalancerError=e=>Object.values(M).includes(e),F.encodeError=e=>{const t=Object.entries(M).find((([,t])=>t===e));if(!t)throw Error("Error message not found");return`BAL#${t[0]}`},exports.RelayerAction=void 0,(L=exports.RelayerAction||(exports.RelayerAction={})).JoinPool="JoinPool",L.ExitPool="ExitPool",L.Swap="Swap",L.BatchSwap="BatchSwap",L.SetRelayerApproval="SetRelayerApproval";class q{constructor(){}}q.encodeCalldataAuthorization=(e,t,a)=>{const n=s.hexZeroPad(s.hexValue(t),32).slice(2),{v:i,r:r,s:o}=s.splitSignature(a);return`${e}${n}${s.hexZeroPad(s.hexValue(i),32).slice(2)}${r.slice(2)}${o.slice(2)}`},q.signJoinAuthorization=(e,t,a,n,s,i)=>q.signAuthorizationFor(exports.RelayerAction.JoinPool,e,t,a,n,s,i),q.signExitAuthorization=(e,t,a,n,s,i)=>q.signAuthorizationFor(exports.RelayerAction.ExitPool,e,t,a,n,s,i),q.signSwapAuthorization=(e,t,a,n,s,i)=>q.signAuthorizationFor(exports.RelayerAction.Swap,e,t,a,n,s,i),q.signBatchSwapAuthorization=(e,t,a,n,s,i)=>q.signAuthorizationFor(exports.RelayerAction.BatchSwap,e,t,a,n,s,i),q.signSetRelayerApprovalAuthorization=(e,t,a,n,s,i)=>q.signAuthorizationFor(exports.RelayerAction.SetRelayerApproval,e,t,a,n,s,i),q.signAuthorizationFor=async(e,a,n,s,i,r=t.MaxUint256,o)=>{const{chainId:d}=await a.provider.getNetwork();if(!o){const e=await n.getAddress();o=await a.getNextNonce(e)}const p={name:"Balancer V2 Vault",version:"1",chainId:d,verifyingContract:a.address},l={[e]:[{name:"calldata",type:"bytes"},{name:"sender",type:"address"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u={calldata:i,sender:await U(s),nonce:o.toString(),deadline:r.toString()};return n._signTypedData(p,l,u)};class W{constructor(){}}W.signSetMinterApproval=async(e,n,i,r,o=t.MaxUint256,d)=>{const{chainId:p}=await e.provider.getNetwork();if(!d){const t=await r.getAddress();d=await e.getNextNonce(t)}const l={name:"Balancer Minter",version:"1",chainId:p,verifyingContract:e.address},u={minter:await U(n),approval:i,nonce:d.toString(),deadline:o.toString()},c=await r._signTypedData(l,{SetMinterApproval:[{name:"minter",type:"address"},{name:"approval",type:"bool"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u);return{...s.splitSignature(c),deadline:a.BigNumber.from(o)}};const $=e=>e[0].map(((t,a)=>e.map((e=>e[a]))));class G{constructor(e){this.ETH=t.AddressZero,this.isETH=e=>G.isEqual(e,this.ETH),this.isWETH=e=>G.isEqual(e,this.WETH),this.translateToERC20=e=>this.isETH(e)?this.WETH:e,this.WETH=n.getAddress(e)}sortTokens(e,...t){t.forEach((t=>v(e.length===t.length,"array length mismatch")));const a=e.map(this.translateToERC20),n=$([a,...t]).sort((([e],[t])=>((e,t)=>e.toLowerCase()>t.toLowerCase()?1:-1)(e,t))),[s,...i]=$(n);return[e.includes(this.ETH)?s.map((e=>this.isWETH(e)?this.ETH:e)):s,...i]}}G.isEqual=(e,t)=>n.getAddress(e)===n.getAddress(t);var V=[{inputs:[{internalType:"contract IStaticAToken",name:"_waToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"waToken",outputs:[{internalType:"contract IStaticAToken",name:"",type:"address"}],stateMutability:"view",type:"function"}];const K=e=>({parsedTokens:e.tokens.map((e=>e.address)),parsedDecimals:e.tokens.map((e=>e.decimals?e.decimals.toString():void 0)),parsedBalances:e.tokens.map((e=>a.parseFixed(e.balance,e.decimals).toString())),parsedWeights:e.tokens.map((e=>e.weight?a.parseFixed(e.weight,18).toString():void 0)),parsedPriceRates:e.tokens.map((e=>e.priceRate?a.parseFixed(e.priceRate,18).toString():void 0)),parsedAmp:e.amp?a.parseFixed(e.amp,3).toString():void 0,parsedTotalShares:a.parseFixed(e.totalShares,18).toString(),parsedSwapFee:a.parseFixed(e.swapFee,18).toString()});const H=(e,t)=>n.getAddress(e)===n.getAddress(t);class j{format(e){return e}}class X{constructor(){this.operatorMap={gt:"_gt",lt:"_lt",eq:"",in:"_in",not_in:"_not_in",contains:"_contains"}}format(e){const t={};return e.where&&Object.entries(e.where).forEach((([e,a])=>{Object.entries(a).forEach((([a,n])=>{t[`${e}${this.operatorMap[a]}`]=n}))})),{...e,where:t}}}class Z{constructor(e){this.args=e}merge(e){const t=o.mergeWith(this.args,e.args,((e,t)=>{if(Array.isArray(e))return e.concat(t)}));return new Z(t)}format(e){return e.format(this.args)}}var J,z,Y,Q,ee,te;function ae(e,n,s,i,r,o){const d=new Array(r.length).fill(t.Zero);return r.forEach(((r,p)=>{if(e.some((e=>H(r,e)))){const e=a.BigNumber.from(o).add(t.WeiPerEther);d[p]=s===exports.SwapType.SwapExactOut?d[p].add(a.BigNumber.from(i[p]).mul(e).div(t.WeiPerEther)):d[p].add(i[p])}if(n.some((e=>H(r,e)))){const e=t.WeiPerEther.sub(a.BigNumber.from(o));d[p]=s===exports.SwapType.SwapExactIn?d[p].add(a.BigNumber.from(i[p]).mul(e).div(t.WeiPerEther)):d[p].add(i[p])}})),d}exports.Network=void 0,(J=exports.Network||(exports.Network={}))[J.MAINNET=1]="MAINNET",J[J.ROPSTEN=3]="ROPSTEN",J[J.RINKEBY=4]="RINKEBY",J[J.GOERLI=5]="GOERLI",J[J["GÖRLI"]=5]="GÖRLI",J[J.OPTIMISM=10]="OPTIMISM",J[J.KOVAN=42]="KOVAN",J[J.POLYGON=137]="POLYGON",J[J.ARBITRUM=42161]="ARBITRUM",exports.PoolSpecialization=void 0,(z=exports.PoolSpecialization||(exports.PoolSpecialization={}))[z.GeneralPool=0]="GeneralPool",z[z.MinimalSwapInfoPool=1]="MinimalSwapInfoPool",z[z.TwoTokenPool=2]="TwoTokenPool",exports.UserBalanceOpKind=void 0,(Y=exports.UserBalanceOpKind||(exports.UserBalanceOpKind={}))[Y.DepositInternal=0]="DepositInternal",Y[Y.WithdrawInternal=1]="WithdrawInternal",Y[Y.TransferInternal=2]="TransferInternal",Y[Y.TransferExternal=3]="TransferExternal",exports.PoolBalanceOpKind=void 0,(Q=exports.PoolBalanceOpKind||(exports.PoolBalanceOpKind={}))[Q.Withdraw=0]="Withdraw",Q[Q.Deposit=1]="Deposit",Q[Q.Update=2]="Update",exports.PoolType=void 0,(ee=exports.PoolType||(exports.PoolType={})).Weighted="Weighted",ee.Investment="Investment",ee.Stable="Stable",ee.ComposableStable="ComposableStable",ee.MetaStable="MetaStable",ee.StablePhantom="StablePhantom",ee.LiquidityBootstrapping="LiquidityBootstrapping",ee.AaveLinear="AaveLinear",ee.ERC4626Linear="ERC4626Linear",ee.Element="Element",ee.Gyro2="Gyro2",ee.Gyro3="Gyro3",exports.SwapType=void 0,(te=exports.SwapType||(exports.SwapType={}))[te.SwapExactIn=0]="SwapExactIn",te[te.SwapExactOut=1]="SwapExactOut";const ne=a.BigNumber.from("10000"),se=(e,t)=>e.mul(t).div(ne),ie=(e,t)=>{const a=se(e,t);return e.sub(a)},re=(e,t)=>{const a=se(e,t);return e.add(a)},oe="0xBA12222222228d8Ba445958a75a0704d566BF2C8",de={[exports.Network.MAINNET]:{chainId:exports.Network.MAINNET,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0xeefba1e63905ef1d7acba5a8513c70307c1ce441",lidoRelayer:"0xdcdbf71A870cc60C6F9B621E28a7D3Ffd6Dd4965",gaugeController:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",feeDistributor:"0xD3cf852898b21fc233251427c2DC93d3d604F3BB",protocolFeePercentagesProvider:"0x97207B095e4D5C9a6e4cfbfcd2C3358E03B90c4A"},tokens:{wrappedNativeAsset:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",lbpRaisingTokens:["0x6B175474E89094C44Da98b954EedeAC495271d0F","0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"],stETH:"0xae7ab96520de3a18e5e111b5eaab095312d7fe84",wstETH:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",bal:"0xba100000625a3754423978a60c9317c58a424e3d",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",bbaUsd:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks"},pools:{wETHwstETH:{id:"0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080",address:"0x32296969ef14eb0c6d29669c550d4a0449130230"}}},[exports.Network.POLYGON]:{chainId:exports.Network.POLYGON,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0xa1B2b503959aedD81512C37e9dce48164ec6a94d"},tokens:{wrappedNativeAsset:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-polygon-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-polygon",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/ianlapham/polygon-blocks"},pools:{}},[exports.Network.ARBITRUM]:{chainId:exports.Network.ARBITRUM,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x269ff446d9892c9e19082564df3f5e8741e190a1"},tokens:{wrappedNativeAsset:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-arbitrum-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-arbitrum",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-one-blocks"},pools:{}},[exports.Network.KOVAN]:{chainId:exports.Network.KOVAN,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x2cc8688C5f75E365aaEEb4ea8D6a480405A48D2A"},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-kovan-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges"},pools:{}},[exports.Network.ROPSTEN]:{chainId:exports.Network.ROPSTEN,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x53c43764255c17bd724f74c4ef150724ac50a3ed"},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges"},pools:{}},[exports.Network.RINKEBY]:{chainId:exports.Network.RINKEBY,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821"},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-rinkeby-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges"},pools:{}},[exports.Network.GOERLI]:{chainId:exports.Network.GOERLI,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x77dCa2C955b15e9dE4dbBCf1246B4B85b651e50e",gaugeController:"0xBB1CE49b16d55A1f2c6e88102f32144C7334B116"},tokens:{wrappedNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-goerli-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/goerli-blocks"},pools:{}},[exports.Network.OPTIMISM]:{chainId:exports.Network.OPTIMISM,addresses:{contracts:{vault:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",multicall:"0x2dc0e2aa608532da689e89e237df582b783e552c"},tokens:{wrappedNativeAsset:"0x4200000000000000000000000000000000000006"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/beethovenxfi/beethovenx-optimism",gaugesSubgraph:""},pools:{}}};var pe;exports.BalancerErrorCode=void 0,(pe=exports.BalancerErrorCode||(exports.BalancerErrorCode={})).SWAP_ZERO_RETURN_AMOUNT="SWAP_ZERO_RETURN_AMOUNT",pe.UNWRAP_ZERO_AMOUNT="UNWRAP_ZERO_AMOUNT",pe.WRAP_ZERO_AMOUNT="WRAP_ZERO_AMOUNT",pe.QUERY_BATCH_SWAP="QUERY_BATCH_SWAP",pe.POOL_DOESNT_EXIST="POOL_DOESNT_EXIST",pe.UNSUPPORTED_POOL_TYPE="UNSUPPORTED_POOL_TYPE",pe.UNSUPPORTED_PAIR="UNSUPPORTED_PAIR",pe.NO_POOL_DATA="NO_POOL_DATA",pe.INPUT_OUT_OF_BOUNDS="INPUT_OUT_OF_BOUNDS",pe.INPUT_LENGTH_MISMATCH="INPUT_LENGTH_MISMATCH",pe.INPUT_ZERO_NOT_ALLOWED="INPUT_ZERO_NOT_ALLOWED",pe.TOKEN_MISMATCH="TOKEN_MISMATCH",pe.MISSING_TOKENS="MISSING_TOKENS",pe.MISSING_AMP="MISSING_AMP",pe.MISSING_DECIMALS="MISSING_DECIMALS",pe.MISSING_PRICE_RATE="MISSING_PRICE_RATE",pe.MISSING_WEIGHT="MISSING_WEIGHT";class le extends Error{constructor(e){super(le.getMessage(e)),this.code=e,this.name="BalancerError"}static getMessage(e){switch(e){case exports.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT:return"queryBatchSwapWithSor returned 0 amount";case exports.BalancerErrorCode.UNWRAP_ZERO_AMOUNT:return"swapUnwrapAaveStaticExactIn unwrapped amount < 0";case exports.BalancerErrorCode.WRAP_ZERO_AMOUNT:return"swapUnwrapAaveStaticExactOut wrapped amount < 0";case exports.BalancerErrorCode.QUERY_BATCH_SWAP:return"queryBatchSwap on chain call error";case exports.BalancerErrorCode.POOL_DOESNT_EXIST:return"balancer pool does not exist";case exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE:return"unsupported pool type";case exports.BalancerErrorCode.UNSUPPORTED_PAIR:return"unsupported token pair";case exports.BalancerErrorCode.NO_POOL_DATA:return"no pool data";case exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS:return"input out of bounds";case exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH:return"input length mismatch";case exports.BalancerErrorCode.TOKEN_MISMATCH:return"token mismatch";case exports.BalancerErrorCode.MISSING_DECIMALS:return"missing decimals";case exports.BalancerErrorCode.MISSING_TOKENS:return"missing tokens";case exports.BalancerErrorCode.MISSING_AMP:return"missing amp";case exports.BalancerErrorCode.MISSING_PRICE_RATE:return"missing price rate";case exports.BalancerErrorCode.MISSING_WEIGHT:return"missing weight";case exports.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED:return"zero input not allowed";default:return"Unknown error"}}}class ue{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:n,bptIn:s,slippage:i,shouldUnwrapNativeAsset:r,wrappedNativeAsset:o,singleTokenMaxOut:d})=>{if(!s.length||a.parseFixed(s,18).isNegative())throw new le(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(d&&d!==t.AddressZero&&!n.tokens.map((e=>e.address)).some((e=>e===d)))throw new le(exports.BalancerErrorCode.TOKEN_MISMATCH);if(!r&&d===t.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenMaxOut should not have conflicting values");if(n.tokens.some((e=>!e.decimals)))throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);if(!n.amp)throw new le(exports.BalancerErrorCode.MISSING_AMP);const{parsedTokens:l,parsedBalances:u,parsedAmp:c,parsedTotalShares:y,parsedSwapFee:m}=K(n),b=l.map((e=>e===o?t.AddressZero:e)),h=new G(o),[f,T]=h.sortTokens(r?b:l,u);let I,g=Array(l.length).fill("0");if(d){const e=l.indexOf(d),t=E.StableMathBigInt._calcTokenOutGivenExactBptIn(BigInt(c),T.map((e=>BigInt(e))),e,BigInt(s),BigInt(y),BigInt(m)).toString();g[e]=ie(a.BigNumber.from(t),a.BigNumber.from(i)).toString(),I=S.exitExactBPTInForOneTokenOut(s,e)}else{g=E.StableMathBigInt._calcTokensOutGivenExactBptIn(T.map((e=>BigInt(e))),BigInt(s),BigInt(y)).map((e=>e.toString())).map((e=>ie(a.BigNumber.from(e),a.BigNumber.from(i)).toString())),I=S.exitExactBPTInForTokensOut(s)}const w="exitPool",x={poolId:n.id,sender:e,recipient:e,exitPoolRequest:{assets:f,minAmountsOut:g,userData:I,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:w,attributes:x,data:p.Vault__factory.createInterface().encodeFunctionData(w,[x.poolId,x.sender,x.recipient,x.exitPoolRequest]),minAmountsOut:g,maxBPTIn:s}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:s,slippage:i,wrappedNativeAsset:r})=>{if(n.length!=s.length||n.length!=t.tokensList.length)throw new le(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(t.tokens.some((e=>!e.decimals)))throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);if(!t.amp)throw new le(exports.BalancerErrorCode.MISSING_AMP);const{parsedTokens:o,parsedBalances:d,parsedAmp:l,parsedTotalShares:u,parsedSwapFee:c}=K(t),y=new G(r),[,m]=y.sortTokens(o,d),[b,h]=y.sortTokens(n,s),f=E.StableMathBigInt._calcBptInGivenExactTokensOut(BigInt(l),m.map((e=>BigInt(e))),h.map((e=>BigInt(e))),BigInt(u),BigInt(c)).toString(),T=re(a.BigNumber.from(f),a.BigNumber.from(i)).toString(),I=S.exitBPTInForExactTokensOut(h,T),g="exitPool",w={poolId:t.id,sender:e,recipient:e,exitPoolRequest:{assets:b,minAmountsOut:h,userData:I,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:g,attributes:w,data:p.Vault__factory.createInterface().encodeFunctionData(g,[w.poolId,w.sender,w.recipient,w.exitPoolRequest]),minAmountsOut:h,maxBPTIn:T}}}}class ce{constructor(){this.buildJoin=({joiner:e,pool:n,tokensIn:s,amountsIn:i,slippage:r,wrappedNativeAsset:o})=>{if(s.length!=i.length||s.length!=n.tokensList.length)throw new le(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(n.tokens.some((e=>!e.decimals)))throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);if(!n.amp)throw new le(exports.BalancerErrorCode.MISSING_AMP);const{parsedTokens:d,parsedBalances:l,parsedAmp:u,parsedTotalShares:c,parsedSwapFee:y}=K(n),m=new G(o),[b,h]=m.sortTokens(s,i),[,f]=m.sortTokens(d,l),T=E.StableMathBigInt._calcBptOutGivenExactTokensIn(BigInt(u),f.map((e=>BigInt(e))),h.map((e=>BigInt(e))),BigInt(c),BigInt(y)).toString(),I=ie(a.BigNumber.from(T),a.BigNumber.from(r)).toString(),g=S.joinExactTokensInForBPTOut(h,I),w="joinPool",x={poolId:n.id,sender:e,recipient:e,joinPoolRequest:{assets:b,maxAmountsIn:h,userData:g,fromInternalBalance:!1}},_=p.Vault__factory.createInterface().encodeFunctionData(w,[x.poolId,x.sender,x.recipient,x.joinPoolRequest]),A=i.filter(((e,a)=>s[a]===t.AddressZero));return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:w,attributes:x,data:_,value:A[0]?a.BigNumber.from(A[0]):void 0,minBPTOut:I}}}}function ye(e,t){const n=new RegExp(`[0-9]+\\.?[0-9]{0,${t}}`),s=e.match(n);let i=e;return s&&(i=s[0]),a.parseFixed(i,t)}function me(e,t){return a.formatFixed(e,t).replace(/(.0$)/,"")}class be{calcTotal(e){var t,n;let s=a.BigNumber.from(0),i=a.BigNumber.from(0);for(let a=0;a<e.length;a++){const n=e[a];if(!(null===(t=n.price)||void 0===t?void 0:t.usd))continue;const r=ye(n.price.usd.toString(),18),o=ye(n.balance,18),d=o.mul(r);i=i.add(d),s=s.add(o)}if(s.gt(0)){const t=i.div(s);for(let a=0;a<e.length;a++){const r=e[a];if(null===(n=r.price)||void 0===n?void 0:n.usd)continue;const o=ye(r.balance,18),d=o.mul(t);i=i.add(d),s=s.add(o)}}return a.formatFixed(i,36).toString()}}class he{calcPoolSpotPrice(e,t,a){const n=d.StablePool.fromPool(a),s=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(s,d.ZERO).toString()}}const fe=BigInt(0),Te=BigInt(1),Ie=BigInt("1000000000000000000"),ge=(e,t)=>{if(!e)throw new Error(t)};function we(e){const t=BigInt(18)-e;return Ie*BigInt(10)**t}function Ee(e,t){return xe.mulDownFixed(e,t)}class xe{static add(e,t){const a=e+t;return ge(t>=0&&a>=e||t<0&&a<e,"Errors.ADD_OVERFLOW"),a}static sub(e,t){ge(t<=e,"Errors.SUB_OVERFLOW");return e-t}static max(e,t){return e>=t?e:t}static min(e,t){return e<t?e:t}static mul(e,t){const a=e*t;return ge(e==fe||a/e==t,"Errors.MUL_OVERFLOW"),a}static div(e,t,a){return a?this.divUp(e,t):this.divDown(e,t)}static divDown(e,t){return ge(t!=fe,"Errors.ZERO_DIVISION"),e/t}static divUp(e,t){return ge(t!=fe,"Errors.ZERO_DIVISION"),e==fe?fe:Te+(e-Te)/t}static mulUpFixed(e,t){const a=e*t;return ge(e==fe||a/e==t,"Errors.MUL_OVERFLOW"),a==fe?fe:(a-Te)/Ie+Te}static divDownFixed(e,t){if(ge(t!=fe,"Errors.ZERO_DIVISION"),e==fe)return fe;return e*Ie/t}static divUpFixed(e,t){if(ge(t!=fe,"Errors.ZERO_DIVISION"),e==fe)return fe;{const a=e*Ie;return ge(a/e==Ie,"Errors.DIV_INTERNAL"),(a-Te)/t+Te}}static powUpFixed(e,t){const a=Se.pow(e,t),n=this.add(this.mulUpFixed(a,this.MAX_POW_RELATIVE_ERROR),Te);return this.add(a,n)}static complementFixed(e){return e<Ie?Ie-e:fe}static mulDownFixed(e,t){const a=e*t;return ge(e==fe||a/e==t,"Errors.MUL_OVERFLOW"),a/Ie}}xe.MAX_POW_RELATIVE_ERROR=BigInt(1e4);class Se{static pow(e,t){if(t===fe)return this.ONE_18;if(e==fe)return fe;ge(e<BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819968"),"Errors.X_OUT_OF_BOUNDS");const a=e;ge(t<this.MILD_EXPONENT_BOUND,"Errors.Y_OUT_OF_BOUNDS");const n=t;let s;if(this.LN_36_LOWER_BOUND<a&&a<this.LN_36_UPPER_BOUND){const e=this._ln_36(a);s=e/this.ONE_18*n+e%this.ONE_18*n/this.ONE_18}else s=this._ln(a)*n;return s/=this.ONE_18,ge(this.MIN_NATURAL_EXPONENT<=s&&s<=this.MAX_NATURAL_EXPONENT,"Errors.PRODUCT_OUT_OF_BOUNDS"),this.exp(s)}static exp(e){if(ge(e>=this.MIN_NATURAL_EXPONENT&&e<=this.MAX_NATURAL_EXPONENT,"Errors.INVALID_EXPONENT"),e<0)return this.ONE_18*this.ONE_18/this.exp(BigInt(-1)*e);let t;e>=this.x0?(e-=this.x0,t=this.a0):e>=this.x1?(e-=this.x1,t=this.a1):t=BigInt(1),e*=BigInt(100);let a=this.ONE_20;e>=this.x2&&(e-=this.x2,a=a*this.a2/this.ONE_20),e>=this.x3&&(e-=this.x3,a=a*this.a3/this.ONE_20),e>=this.x4&&(e-=this.x4,a=a*this.a4/this.ONE_20),e>=this.x5&&(e-=this.x5,a=a*this.a5/this.ONE_20),e>=this.x6&&(e-=this.x6,a=a*this.a6/this.ONE_20),e>=this.x7&&(e-=this.x7,a=a*this.a7/this.ONE_20),e>=this.x8&&(e-=this.x8,a=a*this.a8/this.ONE_20),e>=this.x9&&(e-=this.x9,a=a*this.a9/this.ONE_20);let n,s=this.ONE_20;return n=e,s+=n,n=n*e/this.ONE_20/BigInt(2),s+=n,n=n*e/this.ONE_20/BigInt(3),s+=n,n=n*e/this.ONE_20/BigInt(4),s+=n,n=n*e/this.ONE_20/BigInt(5),s+=n,n=n*e/this.ONE_20/BigInt(6),s+=n,n=n*e/this.ONE_20/BigInt(7),s+=n,n=n*e/this.ONE_20/BigInt(8),s+=n,n=n*e/this.ONE_20/BigInt(9),s+=n,n=n*e/this.ONE_20/BigInt(10),s+=n,n=n*e/this.ONE_20/BigInt(11),s+=n,n=n*e/this.ONE_20/BigInt(12),s+=n,a*s/this.ONE_20*t/BigInt(100)}static _ln_36(e){const t=((e*=this.ONE_18)-this.ONE_36)*this.ONE_36/(e+this.ONE_36),a=t*t/this.ONE_36;let n=t,s=n;return n=n*a/this.ONE_36,s+=n/BigInt(3),n=n*a/this.ONE_36,s+=n/BigInt(5),n=n*a/this.ONE_36,s+=n/BigInt(7),n=n*a/this.ONE_36,s+=n/BigInt(9),n=n*a/this.ONE_36,s+=n/BigInt(11),n=n*a/this.ONE_36,s+=n/BigInt(13),n=n*a/this.ONE_36,s+=n/BigInt(15),s*BigInt(2)}static _ln(e){if(e<this.ONE_18)return BigInt(-1)*this._ln(this.ONE_18*this.ONE_18/e);let t=fe;e>=this.a0*this.ONE_18&&(e/=this.a0,t+=this.x0),e>=this.a1*this.ONE_18&&(e/=this.a1,t+=this.x1),t*=BigInt(100),(e*=BigInt(100))>=this.a2&&(e=e*this.ONE_20/this.a2,t+=this.x2),e>=this.a3&&(e=e*this.ONE_20/this.a3,t+=this.x3),e>=this.a4&&(e=e*this.ONE_20/this.a4,t+=this.x4),e>=this.a5&&(e=e*this.ONE_20/this.a5,t+=this.x5),e>=this.a6&&(e=e*this.ONE_20/this.a6,t+=this.x6),e>=this.a7&&(e=e*this.ONE_20/this.a7,t+=this.x7),e>=this.a8&&(e=e*this.ONE_20/this.a8,t+=this.x8),e>=this.a9&&(e=e*this.ONE_20/this.a9,t+=this.x9),e>=this.a10&&(e=e*this.ONE_20/this.a10,t+=this.x10),e>=this.a11&&(e=e*this.ONE_20/this.a11,t+=this.x11);const a=(e-this.ONE_20)*this.ONE_20/(e+this.ONE_20),n=a*a/this.ONE_20;let s=a,i=s;return s=s*n/this.ONE_20,i+=s/BigInt(3),s=s*n/this.ONE_20,i+=s/BigInt(5),s=s*n/this.ONE_20,i+=s/BigInt(7),s=s*n/this.ONE_20,i+=s/BigInt(9),s=s*n/this.ONE_20,i+=s/BigInt(11),i*=BigInt(2),(t+i)/BigInt(100)}}function _e(e,t){return Ie-xe.divDownFixed(e,t)}Se.ONE_18=BigInt("1000000000000000000"),Se.ONE_20=BigInt("100000000000000000000"),Se.ONE_36=BigInt("1000000000000000000000000000000000000"),Se.MAX_NATURAL_EXPONENT=BigInt("130000000000000000000"),Se.MIN_NATURAL_EXPONENT=BigInt("-41000000000000000000"),Se.LN_36_LOWER_BOUND=BigInt(Se.ONE_18)-BigInt("100000000000000000"),Se.LN_36_UPPER_BOUND=BigInt(Se.ONE_18)+BigInt("100000000000000000"),Se.MILD_EXPONENT_BOUND=BigInt(2)**BigInt(254)/Se.ONE_20,Se.x0=BigInt("128000000000000000000"),Se.a0=BigInt("38877084059945950922200000000000000000000000000000000000"),Se.x1=BigInt("64000000000000000000"),Se.a1=BigInt("6235149080811616882910000000"),Se.x2=BigInt("3200000000000000000000"),Se.a2=BigInt("7896296018268069516100000000000000"),Se.x3=BigInt("1600000000000000000000"),Se.a3=BigInt("888611052050787263676000000"),Se.x4=BigInt("800000000000000000000"),Se.a4=BigInt("298095798704172827474000"),Se.x5=BigInt("400000000000000000000"),Se.a5=BigInt("5459815003314423907810"),Se.x6=BigInt("200000000000000000000"),Se.a6=BigInt("738905609893065022723"),Se.x7=BigInt("100000000000000000000"),Se.a7=BigInt("271828182845904523536"),Se.x8=BigInt("50000000000000000000"),Se.a8=BigInt("164872127070012814685"),Se.x9=BigInt("25000000000000000000"),Se.a9=BigInt("128402541668774148407"),Se.x10=BigInt("12500000000000000000"),Se.a10=BigInt("113314845306682631683"),Se.x11=BigInt("6250000000000000000"),Se.a11=BigInt("106449445891785942956");const Ae=BigInt(1e3);function Oe(e,t,a,n){const s=t.length,i=function(e,t,a){let n=fe;const s=t.length;for(let e=0;e<s;e++)n+=t[e];if(n==fe)return fe;let i=fe,r=n;const o=e*BigInt(s);for(let e=0;e<255;e++){let e=t[0]*BigInt(s);for(let n=1;n<s;n++)e=xe.div(xe.mul(xe.mul(e,t[n]),BigInt(s)),r,a);if(i=r,r=xe.div(xe.mul(xe.mul(BigInt(s),r),r)+xe.div(xe.mul(xe.mul(o,n),e),Ae,a),xe.mul(BigInt(s+1),r)+xe.div(xe.mul(o-Ae,e),Ae,!a),a),r>i){if(r-i<=1)return r}else if(i-r<=1)return r}throw new Error("Errors.STABLE_INVARIANT_DIDNT_CONVERGE")}(e,t,!0);let r=fe,o=i/BigInt(s);for(let e=0;e<s;e++)e!=n&&(r+=t[e],o=o*i/(BigInt(s)*t[e]));const d=t[n],p=e*BigInt(s),l=p*r,u=BigInt(Ae)-p,c=BigInt(2)*p*d+l+u*i,y=o*BigInt(s+1)*Ae-u*d;return xe.divUpFixed(c*a/y,i)}class Pe{bptZeroPriceImpact(e,t){if(t.length!==e.tokensList.length)throw new le(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const{parsedBalances:a,parsedDecimals:n,parsedAmp:s,parsedTotalShares:i}=K(e),r=n.map((e=>{if(!e)throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);return BigInt(e)}));if(!s)throw new le(exports.BalancerErrorCode.MISSING_PRICE_RATE);const o=BigInt(i),d=r.map((e=>we(BigInt(e)))),p=a.map(((e,t)=>Ee(BigInt(e),d[t])));let l=fe;for(let e=0;e<p.length;e++){const a=Oe(BigInt(s),p,o,e),n=we(BigInt(r[e]));l+=a*Ee(t[e],n)/Ie}return l}calcPriceImpact(e,t,a){const n=this.bptZeroPriceImpact(e,t.map((e=>BigInt(e))));return _e(BigInt(a),n).toString()}}class Ne{constructor(e=new ue,t=new ce,a=new be,n=new he,s=new Pe){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=s}}class Be{constructor(){this.buildExitSingleTokenOut=({exiter:e,pool:n,bptIn:s,slippage:i,shouldUnwrapNativeAsset:r,wrappedNativeAsset:o,singleTokenMaxOut:d})=>{if(!s.length||a.parseFixed(s,18).isNegative())throw new le(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(d&&d!==t.AddressZero&&!n.tokens.map((e=>e.address)).some((e=>e===d)))throw new le(exports.BalancerErrorCode.TOKEN_MISMATCH);if(!r&&d===t.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenMaxOut should not have conflicting values");if(n.tokens.some((e=>!e.decimals)))throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);if(!n.amp)throw new le(exports.BalancerErrorCode.MISSING_AMP);const{parsedTokens:l,parsedBalances:u,parsedAmp:c,parsedTotalShares:y,parsedSwapFee:m}=K(n),b=l.map((e=>e===o?t.AddressZero:e)),h=new G(o),[f,T]=h.sortTokens(r?b:l,u),I=Array(l.length).fill("0"),g=l.indexOf(d),w=E.StableMathBigInt._calcTokenOutGivenExactBptIn(BigInt(c),T.map((e=>BigInt(e))),g,BigInt(s),BigInt(y),BigInt(m)).toString();I[g]=ie(a.BigNumber.from(w),a.BigNumber.from(i)).toString();const x=N.exitExactBPTInForOneTokenOut(s,g),S="exitPool",_={poolId:n.id,sender:e,recipient:e,exitPoolRequest:{assets:f,minAmountsOut:I,userData:x,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:S,attributes:_,data:p.Vault__factory.createInterface().encodeFunctionData(S,[_.poolId,_.sender,_.recipient,_.exitPoolRequest]),minAmountsOut:I,maxBPTIn:s}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:s,slippage:i,wrappedNativeAsset:r})=>{if(n.length!=s.length||n.length!=t.tokensList.length)throw new le(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(t.tokens.some((e=>!e.decimals)))throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);if(!t.amp)throw new le(exports.BalancerErrorCode.MISSING_AMP);const{parsedTokens:o,parsedBalances:d,parsedAmp:l,parsedTotalShares:u,parsedSwapFee:c}=K(t),y=new G(r),[,m]=y.sortTokens(o,d),[b,h]=y.sortTokens(n,s),f=E.StableMathBigInt._calcBptInGivenExactTokensOut(BigInt(l),m.map((e=>BigInt(e))),h.map((e=>BigInt(e))),BigInt(u),BigInt(c)).toString(),T=re(a.BigNumber.from(f),a.BigNumber.from(i)).toString(),I=N.exitBPTInForExactTokensOut(h,T),g="exitPool",w={poolId:t.id,sender:e,recipient:e,exitPoolRequest:{assets:b,minAmountsOut:h,userData:I,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:g,attributes:w,data:p.Vault__factory.createInterface().encodeFunctionData(g,[w.poolId,w.sender,w.recipient,w.exitPoolRequest]),minAmountsOut:h,maxBPTIn:T}}}}class ke{constructor(e=new Be,t=new ce,a=new be,n=new he,s=new Pe){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=s}}class ve{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:n,bptIn:s,slippage:i,shouldUnwrapNativeAsset:r,wrappedNativeAsset:o,singleTokenMaxOut:d})=>{if(!s.length||a.parseFixed(s,18).isNegative())throw new le(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(d&&d!==t.AddressZero&&!n.tokens.map((e=>e.address)).some((e=>e===d)))throw new le(exports.BalancerErrorCode.TOKEN_MISMATCH);if(!r&&d===t.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenMaxOut should not have conflicting values");const{parsedTokens:l,parsedBalances:u,parsedWeights:c,parsedTotalShares:y,parsedSwapFee:m}=K(n),b=l.map((e=>e===o?t.AddressZero:e)),h=new G(o),[f,T,I]=h.sortTokens(r?b:l,u,c);let g,w=Array(f.length).fill("0");if(d){const e=f.indexOf(d),t=E.WeightedMaths._calcTokenOutGivenExactBptIn(BigInt(T[e]),BigInt(I[e]),BigInt(s),BigInt(y),BigInt(m)).toString();w[e]=ie(a.BigNumber.from(t),a.BigNumber.from(i)).toString(),g=_.exitExactBPTInForOneTokenOut(s,e)}else{w=E.WeightedMaths._calcTokensOutGivenExactBptIn(T.map((e=>BigInt(e))),BigInt(s),BigInt(y)).map((e=>e.toString())).map((e=>ie(a.BigNumber.from(e),a.BigNumber.from(i)).toString())),g=_.exitExactBPTInForTokensOut(s)}const x="exitPool",S={poolId:n.id,sender:e,recipient:e,exitPoolRequest:{assets:f,minAmountsOut:w,userData:g,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:x,attributes:S,data:p.Vault__factory.createInterface().encodeFunctionData(x,[S.poolId,S.sender,S.recipient,S.exitPoolRequest]),minAmountsOut:w,maxBPTIn:s}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:s,slippage:i,wrappedNativeAsset:r})=>{if(n.length!=s.length||n.length!=t.tokensList.length)throw new le(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const{parsedTokens:o,parsedBalances:d,parsedWeights:l,parsedTotalShares:u,parsedSwapFee:c}=K(t),y=new G(r),[,m,b]=y.sortTokens(o,d,l),[h,f]=y.sortTokens(n,s),T=E.WeightedMaths._calcBptInGivenExactTokensOut(m.map((e=>BigInt(e))),b.map((e=>BigInt(e))),f.map((e=>BigInt(e))),BigInt(u),BigInt(c)).toString(),I=re(a.BigNumber.from(T),a.BigNumber.from(i)).toString(),g=_.exitBPTInForExactTokensOut(f,I),w="exitPool",x={poolId:t.id,sender:e,recipient:e,exitPoolRequest:{assets:h,minAmountsOut:f,userData:g,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:w,attributes:x,data:p.Vault__factory.createInterface().encodeFunctionData(w,[x.poolId,x.sender,x.recipient,x.exitPoolRequest]),minAmountsOut:f,maxBPTIn:I}}}}class Ce{constructor(){this.buildJoin=({joiner:e,pool:n,tokensIn:s,amountsIn:i,slippage:r,wrappedNativeAsset:o})=>{if(s.length!=i.length||s.length!=n.tokensList.length)throw new le(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(n.tokens.some((e=>!e.decimals)))throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);if(n.tokens.some((e=>!e.weight)))throw new le(exports.BalancerErrorCode.MISSING_WEIGHT);const{parsedTokens:l,parsedBalances:u,parsedWeights:c,parsedTotalShares:y,parsedSwapFee:m}=K(n),b=new G(o),[h,f]=b.sortTokens(s,i),[,T,I]=b.sortTokens(l,u,c),g=d.WeightedMaths._calcBptOutGivenExactTokensIn(T.map((e=>BigInt(e))),I.map((e=>BigInt(e))),f.map((e=>BigInt(e))),BigInt(y),BigInt(m)).toString(),w=ie(a.BigNumber.from(g),a.BigNumber.from(r)).toString(),E=_.joinExactTokensInForBPTOut(f,w),x="joinPool",S={poolId:n.id,sender:e,recipient:e,joinPoolRequest:{assets:h,maxAmountsIn:f,userData:E,fromInternalBalance:!1}},A=p.Vault__factory.createInterface().encodeFunctionData(x,[S.poolId,S.sender,S.recipient,S.joinPoolRequest]),O=i.filter(((e,a)=>s[a]===t.AddressZero));return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:x,attributes:S,data:A,value:O[0]?a.BigNumber.from(O[0]):void 0,minBPTOut:w}}}}class Re{calcTotal(e){var t;let n=a.BigNumber.from(0),s=a.BigNumber.from(0);for(let a=0;a<e.length;a++){const i=e[a];if(!(null===(t=i.price)||void 0===t?void 0:t.usd))continue;const r=ye(i.price.usd.toString(),18),o=ye(i.balance,18),d=ye(i.weight||"0",18),p=o.mul(r);s=s.add(p),n=n.add(d)}const i=e.reduce(((e,t)=>e.add(ye(t.weight||"0",18))),a.BigNumber.from(0));if(n.gt(0)){return me(s.mul(i).div(n),36)}return"0"}}class De{calcPoolSpotPrice(e,t,a){const n=d.WeightedPool.fromPool(a),s=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(s,d.ZERO).toString()}}class Me{bptZeroPriceImpact(e,t){if(t.length!==e.tokensList.length)throw new le(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const{parsedBalances:a,parsedDecimals:n,parsedTotalShares:s,parsedWeights:i}=K(e),r=BigInt(s),d=o.cloneDeep(e.tokensList);let p=fe;for(let e=0;e<d.length;e++){const s=n[e];let o,d;if(!s)throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);o=we(BigInt(s)),d=Ee(BigInt(a[e]),o);const l=i[e];let u;if(!l)throw new le(exports.BalancerErrorCode.MISSING_WEIGHT);u=BigInt(l);p+=u*r/d*Ee(t[e],o)/Ie}return p}calcPriceImpact(e,t,a){const n=this.bptZeroPriceImpact(e,t.map((e=>BigInt(e))));return _e(BigInt(a),n).toString()}}class Fe{constructor(e=new ve,t=new Ce,a=new Re,n=new De,s=new Me){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=s}}class Ue{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:n,bptIn:s,slippage:i,shouldUnwrapNativeAsset:r,wrappedNativeAsset:o,singleTokenMaxOut:d})=>{if(!s.length||a.parseFixed(s,18).isNegative())throw new le(exports.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(d&&d!==t.AddressZero&&!n.tokens.map((e=>e.address)).some((e=>e===d)))throw new le(exports.BalancerErrorCode.TOKEN_MISMATCH);if(!r&&d===t.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenMaxOut should not have conflicting values");if(n.tokens.some((e=>!e.decimals)))throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);if(!n.amp)throw new le(exports.BalancerErrorCode.MISSING_AMP);if(n.tokens.some((e=>!e.priceRate)))throw new le(exports.BalancerErrorCode.MISSING_PRICE_RATE);const{parsedTokens:l,parsedBalances:u,parsedAmp:c,parsedPriceRates:y,parsedTotalShares:m,parsedSwapFee:b}=K(n),h=l.map((e=>e===o?t.AddressZero:e)),f=new G(o),[T,I,g]=f.sortTokens(r?h:l,u,y),w=I.map(((e,t)=>a.BigNumber.from(e).mul(a.BigNumber.from(g[t])).div(a.parseFixed("1",18)).toString()));let x,_=Array(l.length).fill("0");if(d){const e=T.indexOf(d),t=E.StableMathBigInt._calcTokenOutGivenExactBptIn(BigInt(c),w.map((e=>BigInt(e))),e,BigInt(s),BigInt(m),BigInt(b)).toString(),n=a.BigNumber.from(t).div(a.BigNumber.from(g[e])).mul(a.parseFixed("1",18)).toString();_[e]=ie(a.BigNumber.from(n),a.BigNumber.from(i)).toString(),x=S.exitExactBPTInForOneTokenOut(s,e)}else{_=E.StableMathBigInt._calcTokensOutGivenExactBptIn(w.map((e=>BigInt(e))),BigInt(s),BigInt(m)).map((e=>e.toString())).map(((e,t)=>a.BigNumber.from(e).div(a.BigNumber.from(g[t])).mul(a.parseFixed("1",18)).toString())).map((e=>ie(a.BigNumber.from(e),a.BigNumber.from(i)).toString())),x=S.exitExactBPTInForTokensOut(s)}const A="exitPool",O={poolId:n.id,sender:e,recipient:e,exitPoolRequest:{assets:T,minAmountsOut:_,userData:x,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:A,attributes:O,data:p.Vault__factory.createInterface().encodeFunctionData(A,[O.poolId,O.sender,O.recipient,O.exitPoolRequest]),minAmountsOut:_,maxBPTIn:s}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:s,slippage:i,wrappedNativeAsset:r})=>{if(n.length!=s.length||n.length!=t.tokensList.length)throw new le(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(t.tokens.some((e=>!e.decimals)))throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);if(!t.amp)throw new le(exports.BalancerErrorCode.MISSING_AMP);if(t.tokens.some((e=>!e.priceRate)))throw new le(exports.BalancerErrorCode.MISSING_PRICE_RATE);const{parsedTokens:o,parsedBalances:d,parsedPriceRates:l,parsedAmp:u,parsedTotalShares:c,parsedSwapFee:y}=K(t),m=new G(r),[,b,h]=m.sortTokens(o,d,l),[f,T]=m.sortTokens(n,s),I=T.map(((e,t)=>a.BigNumber.from(e).mul(a.BigNumber.from(h[t])).div(a.parseFixed("1",18)).toString())),g=b.map(((e,t)=>a.BigNumber.from(e).mul(a.BigNumber.from(h[t])).div(a.parseFixed("1",18)).toString())),w=E.StableMathBigInt._calcBptInGivenExactTokensOut(BigInt(u),g.map((e=>BigInt(e))),I.map((e=>BigInt(e))),BigInt(c),BigInt(y)).toString(),x=re(a.BigNumber.from(w),a.BigNumber.from(i)).toString(),_=S.exitBPTInForExactTokensOut(T,x),A=T.map(((e,t)=>e===I[t]?e:a.BigNumber.from(e).sub(1).toString())),O="exitPool",P={poolId:t.id,sender:e,recipient:e,exitPoolRequest:{assets:f,minAmountsOut:A,userData:_,toInternalBalance:!1}};return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:O,attributes:P,data:p.Vault__factory.createInterface().encodeFunctionData(O,[P.poolId,P.sender,P.recipient,P.exitPoolRequest]),minAmountsOut:A,maxBPTIn:x}}}}class Le{constructor(){this.buildJoin=({joiner:e,pool:n,tokensIn:s,amountsIn:i,slippage:r,wrappedNativeAsset:o})=>{if(s.length!=i.length||s.length!=n.tokensList.length)throw new le(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(n.tokens.some((e=>!e.decimals)))throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);if(!n.amp)throw new le(exports.BalancerErrorCode.MISSING_AMP);if(n.tokens.some((e=>!e.priceRate)))throw new le(exports.BalancerErrorCode.MISSING_PRICE_RATE);const{parsedTokens:d,parsedBalances:l,parsedPriceRates:u,parsedAmp:c,parsedTotalShares:y,parsedSwapFee:m}=K(n),b=new G(o),[h,f]=b.sortTokens(s,i),[,T,I]=b.sortTokens(d,l,u),g=f.map(((e,t)=>a.BigNumber.from(e).mul(a.BigNumber.from(I[t])).div(a.parseFixed("1",18)).toString())),w=T.map(((e,t)=>a.BigNumber.from(e).mul(a.BigNumber.from(I[t])).div(a.parseFixed("1",18)).toString())),x=E.StableMathBigInt._calcBptOutGivenExactTokensIn(BigInt(c),w.map((e=>BigInt(e))),g.map((e=>BigInt(e))),BigInt(y),BigInt(m)).toString(),_=ie(a.BigNumber.from(x),a.BigNumber.from(r)).toString(),A=S.joinExactTokensInForBPTOut(f,_),O="joinPool",P={poolId:n.id,sender:e,recipient:e,joinPoolRequest:{assets:h,maxAmountsIn:f,userData:A,fromInternalBalance:!1}},N=p.Vault__factory.createInterface().encodeFunctionData(O,[P.poolId,P.sender,P.recipient,P.joinPoolRequest]),B=i.filter(((e,a)=>s[a]===t.AddressZero));return{to:"0xBA12222222228d8Ba445958a75a0704d566BF2C8",functionName:O,attributes:P,data:N,value:B[0]?a.BigNumber.from(B[0]):void 0,minBPTOut:_}}}}class qe{calcTotal(e){var n,s;let i=t.Zero,r=t.Zero;for(let t=0;t<e.length;t++){const a=e[t];if(!(null===(n=a.price)||void 0===n?void 0:n.usd))continue;const s=ye(a.price.usd.toString(),18),o=ye(a.balance,18),d=o.mul(s);r=r.add(d),i=i.add(o)}if(i.gt(0)){const t=r.div(i);for(let a=0;a<e.length;a++){const n=e[a];if(null===(s=n.price)||void 0===s?void 0:s.usd)continue;const o=ye(n.balance,18),d=o.mul(t);r=r.add(d),i=i.add(o)}}return a.formatFixed(r,36).toString()}}class We{calcPoolSpotPrice(e,t,a){const n=d.MetaStablePool.fromPool(a),s=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(s,d.ZERO).toString()}}class $e{bptZeroPriceImpact(e,t){if(t.length!==e.tokensList.length)throw new le(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const{parsedBalances:a,parsedDecimals:n,parsedPriceRates:s,parsedAmp:i,parsedTotalShares:r}=K(e),o=BigInt(r),d=n.map((e=>{if(!e)throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);return BigInt(e)})),p=s.map((e=>{if(!e)throw new le(exports.BalancerErrorCode.MISSING_PRICE_RATE);return BigInt(e)}));if(!i)throw new le(exports.BalancerErrorCode.MISSING_PRICE_RATE);const l=d.map((e=>we(BigInt(e)))),u=a.map(((e,t)=>Ee(BigInt(e),l[t]))),c=u.map(((e,t)=>xe.mulDownFixed(e,p[t])));let y=fe;for(let a=0;a<u.length;a++){const n=Oe(BigInt(i),c,o,a)*p[a]/Ie,s=we(BigInt(e.tokens[a].decimals));y+=n*Ee(t[a],s)/Ie}return y}calcPriceImpact(e,t,a){const n=this.bptZeroPriceImpact(e,t.map((e=>BigInt(e))));return _e(BigInt(a),n).toString()}}class Ge{constructor(e=new Ue,t=new Le,a=new qe,n=new We,s=new $e){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=s}}class Ve{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:s,wrappedNativeAsset:i,singleTokenMaxOut:r})=>{throw new Error("To be implemented")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:s,wrappedNativeAsset:i})=>{throw new Error("To be implemented")}}}class Ke{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:s,wrappedNativeAsset:i})=>{throw new Error("To be implemented")}}}class He{calcTotal(e){if(e.length>0)throw new Error("Not Implemented - StablePhantom liquidity should all come from sub-pools.");return"0"}}class je{calcPoolSpotPrice(e,t,a){const n=d.PhantomStablePool.fromPool(a),s=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(s,d.ZERO).toString()}}class Xe{bptZeroPriceImpact(e,t){if(t.length!==e.tokensList.length-1)throw new le(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const a=o.cloneDeep(e.tokensList),n=a.findIndex((t=>t==e.address)),{parsedBalances:s,parsedDecimals:i,parsedPriceRates:r,parsedAmp:d,parsedTotalShares:p}=K(e),l=i.map((e=>{if(!e)throw new le(exports.BalancerErrorCode.MISSING_DECIMALS);return BigInt(e)})),u=r.map((e=>{if(!e)throw new le(exports.BalancerErrorCode.MISSING_PRICE_RATE);return BigInt(e)}));if(!d)throw new le(exports.BalancerErrorCode.MISSING_PRICE_RATE);const c=BigInt(p);a.splice(n,1);const y=l.map((e=>we(BigInt(e)))),m=s.map(((e,t)=>Ee(BigInt(e),y[t])));if(t.length!==a.length)throw new le(exports.BalancerErrorCode.INPUT_LENGTH_MISMATCH);m.splice(n,1);const b=m.map(((e,t)=>xe.mulDownFixed(e,u[t])));let h=fe;for(let e=0;e<a.length;e++){const a=Oe(BigInt(d),b,c,e)*u[e]/Ie,n=we(BigInt(l[e]));h+=a*Ee(t[e],n)/Ie}return h}calcPriceImpact(e,t,a){const n=this.bptZeroPriceImpact(e,t.map((e=>BigInt(e))));return _e(BigInt(a),n).toString()}}class Ze{constructor(e=new Ve,t=new Ke,a=new He,n=new je,s=new Xe){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=s}}class Je{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:a,slippage:n,shouldUnwrapNativeAsset:s,wrappedNativeAsset:i,singleTokenMaxOut:r})=>{throw new Error("To be implemented")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:a,amountsOut:n,slippage:s,wrappedNativeAsset:i})=>{throw new Error("To be implemented")}}}class ze{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:a,amountsIn:n,slippage:s,wrappedNativeAsset:i})=>{throw new Error("To be implemented")}}}const Ye=ye("1",18);class Qe{calcTotal(e){var a,n;let s=t.Zero,i=t.Zero;for(let t=0;t<e.length;t++){const n=e[t];if(!(null===(a=n.price)||void 0===a?void 0:a.usd))continue;const r=ye(n.price.usd.toString(),18),o=ye(n.balance,18),d=o.mul(r);i=i.add(d),s=s.add(o)}if(s.gt(0)){const t=i.div(s);for(let a=0;a<e.length;a++){const r=e[a];if(null===(n=r.price)||void 0===n?void 0:n.usd)continue;const o=ye(r.priceRate||"1",18),d=ye(r.balance,18).mul(o).div(Ye),p=d.mul(t);i=i.add(p),s=s.add(d)}}return me(i,36)}}class et{calcPoolSpotPrice(e,t,a){const n=d.LinearPool.fromPool(a),s=n.parsePoolPairData(e,t);return n._spotPriceAfterSwapExactTokenInForTokenOut(s,d.ZERO).toString()}}class tt{bptZeroPriceImpact(e,t){throw new Error("Linear Pool bptZeroPriceImpact Not Implented")}calcPriceImpact(e,t,a){throw new Error("Linear Pool Price Impact Not Implented")}}class at{constructor(e=new Je,t=new ze,a=new Qe,n=new et,s=new tt){this.exit=e,this.join=t,this.liquidity=a,this.spotPriceCalculator=n,this.priceImpactCalculator=s}}class nt{constructor(e,t=new Fe,a=new Ne,n=new ke,s=new Ge,i=new Ze,r=new at){this.weighted=t,this.stable=a,this.composableStable=n,this.metaStable=s,this.stablePhantom=i,this.linear=r}static from(e){switch(e){case"Weighted":case"Investment":case"LiquidityBootstrapping":return new Fe;case"Stable":return new Ne;case"ComposableStable":return new ke;case"MetaStable":return new Ge;case"StablePhantom":return new Ze;case"AaveLinear":case"ERC4626Linear":return new at;default:throw new le(exports.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}}}class st{constructor(e,t){this.pools=e,this.tokenPrices=t}async getLiquidity(e){const t=e.tokens.filter((t=>t.address!==e.address)),n=await Promise.all(t.map((async e=>{const t=await this.pools.findBy("address",e.address);if(!t)return;const a=ye(await this.getLiquidity(t),18),n=ye(t.totalShares,18),s=ye(e.balance,18),i=a.mul(s).div(n);return{address:t.address,liquidity:i.toString()}}))),s=n.reduce(((e,t)=>t?e.add(t.liquidity):a.BigNumber.from(0)),a.BigNumber.from(0)),i=t.filter((e=>!n.find((t=>(null==t?void 0:t.address)===e.address)))),r=await Promise.all(i.map((async e=>{const t=await this.tokenPrices.find(e.address);return{address:e.address,decimals:e.decimals,priceRate:e.priceRate,price:t,balance:e.balance,weight:e.weight}}))),o=ye(nt.from(e.poolType).liquidity.calcTotal(r),18);return me(s.add(o),18)}}async function it(e,a,n,s){const i={sender:t.AddressZero,recipient:t.AddressZero,fromInternalBalance:!1,toInternalBalance:!1};try{return(await e.callStatic.queryBatchSwap(a,n,s,i)).map((e=>e.toString()))}catch(e){throw`queryBatchSwap call error: ${e}`}}async function rt(e,a,n){n.fetchPools.fetchPools&&await e.fetchPools();const s=[],i=[];for(let a=0;a<n.tokensIn.length;a++){const r=await ot(n.tokensIn[a],n.tokensOut[a],n.swapType,n.amounts[a].toString(),e);if(!r.returnAmount.gt(t.Zero))throw new le(exports.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);s.push(r.swaps),i.push(r.tokenAddresses)}const r=function(e,t){const a=[...new Set(e.flat())];t.forEach(((t,n)=>{t.forEach((t=>{t.assetInIndex=a.indexOf(e[n][t.assetInIndex]),t.assetOutIndex=a.indexOf(e[n][t.assetOutIndex])}))}));return{swaps:t.flat(),assets:a}}(i,s),o=n.swapType===exports.SwapType.SwapExactIn?n.tokensOut:n.tokensIn,d=Array(o.length).fill("0");let p=Array(r.assets.length).fill("0");try{p=await it(a,n.swapType,r.swaps,r.assets),p.length>0&&o.forEach(((e,a)=>{var n;return d[a]=null!==(n=p[r.assets.indexOf(e.toLowerCase())].toString())&&void 0!==n?n:t.Zero.toString()}))}catch(e){throw new le(exports.BalancerErrorCode.QUERY_BATCH_SWAP)}return{returnAmounts:d,swaps:r.swaps,assets:r.assets,deltas:p.map((e=>e.toString()))}}async function ot(e,t,a,n,s){const i=a===exports.SwapType.SwapExactIn?d.SwapTypes.SwapExactIn:d.SwapTypes.SwapExactOut;return await s.getSwaps(e.toLowerCase(),t.toLowerCase(),i,n)}var dt=function(){return dt=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var s in t=arguments[a])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e},dt.apply(this,arguments)},pt=new Map,lt=new Map,ut=!0,ct=!1;function yt(e){return e.replace(/[\s,]+/g," ").trim()}function mt(e){var t=new Set,a=[];return e.definitions.forEach((function(e){if("FragmentDefinition"===e.kind){var n=e.name.value,s=yt((r=e.loc).source.body.substring(r.start,r.end)),i=lt.get(n);i&&!i.has(s)?ut&&console.warn("Warning: fragment with name "+n+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"):i||lt.set(n,i=new Set),i.add(s),t.has(s)||(t.add(s),a.push(e))}else a.push(e);var r})),dt(dt({},e),{definitions:a})}function bt(e){var t=yt(e);if(!pt.has(t)){var a=c.parse(e,{experimentalFragmentVariables:ct,allowLegacyFragmentVariables:ct});if(!a||"Document"!==a.kind)throw new Error("Not a valid GraphQL document.");pt.set(t,function(e){var t=new Set(e.definitions);t.forEach((function(e){e.loc&&delete e.loc,Object.keys(e).forEach((function(a){var n=e[a];n&&"object"==typeof n&&t.add(n)}))}));var a=e.loc;return a&&(delete a.startToken,delete a.endToken),e}(mt(a)))}return pt.get(t)}function ht(e){for(var t=[],a=1;a<arguments.length;a++)t[a-1]=arguments[a];"string"==typeof e&&(e=[e]);var n=e[0];return t.forEach((function(t,a){t&&"Document"===t.kind?n+=t.loc.source.body:n+=t,n+=e[a+1]})),bt(n)}var ft,Tt=ht,It=function(){pt.clear(),lt.clear()},gt=function(){ut=!1},wt=function(){ct=!0},Et=function(){ct=!1};(ft=ht||(ht={})).gql=Tt,ft.resetCaches=It,ft.disableFragmentWarnings=gt,ft.enableExperimentalFragmentVariables=wt,ft.disableExperimentalFragmentVariables=Et,ht.default=ht;var xt,St,_t,At,Ot,Pt,Nt,Bt,kt,vt,Ct,Rt,Dt,Mt,Ft,Ut,Lt,qt,Wt,$t,Gt,Vt,Kt,Ht,jt,Xt=ht;!function(e){e.EndAmp="endAmp",e.EndTimestamp="endTimestamp",e.Id="id",e.PoolId="poolId",e.ScheduledTimestamp="scheduledTimestamp",e.StartAmp="startAmp",e.StartTimestamp="startTimestamp"}(xt||(xt={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Timestamp="timestamp",e.TotalLiquidity="totalLiquidity",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.Vault="vault"}(St||(St={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Pools="pools",e.TotalLiquidity="totalLiquidity",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(_t||(_t={})),function(e){e.EndTimestamp="endTimestamp",e.EndWeights="endWeights",e.Id="id",e.PoolId="poolId",e.ScheduledTimestamp="scheduledTimestamp",e.StartTimestamp="startTimestamp",e.StartWeights="startWeights"}(At||(At={})),function(e){e.Exit="Exit",e.Join="Join"}(Ot||(Ot={})),function(e){e.Amounts="amounts",e.Id="id",e.Pool="pool",e.Sender="sender",e.Timestamp="timestamp",e.Tx="tx",e.Type="type",e.User="user"}(Pt||(Pt={})),function(e){e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.Price="price",e.PricingAsset="pricingAsset"}(Nt||(Nt={})),function(e){e.CashDelta="cashDelta",e.Id="id",e.ManagedDelta="managedDelta",e.PoolTokenId="poolTokenId",e.Timestamp="timestamp",e.Type="type"}(Bt||(Bt={})),function(e){e.Deposit="Deposit",e.Update="Update",e.Withdraw="Withdraw"}(kt||(kt={})),function(e){e.Asc="asc",e.Desc="desc"}(vt||(vt={})),function(e){e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolLiquidity="poolLiquidity",e.PoolShareValue="poolShareValue",e.PoolTotalShares="poolTotalShares",e.PricingAsset="pricingAsset"}(Ct||(Ct={})),function(e){e.Balance="balance",e.Id="id",e.PoolId="poolId",e.UserAddress="userAddress"}(Rt||(Rt={})),function(e){e.Amounts="amounts",e.HoldersCount="holdersCount",e.Id="id",e.Liquidity="liquidity",e.Pool="pool",e.SwapFees="swapFees",e.SwapVolume="swapVolume",e.SwapsCount="swapsCount",e.Timestamp="timestamp",e.TotalShares="totalShares"}(Dt||(Dt={})),function(e){e.Address="address",e.AssetManager="assetManager",e.Balance="balance",e.CashBalance="cashBalance",e.Decimals="decimals",e.Id="id",e.ManagedBalance="managedBalance",e.Managements="managements",e.Name="name",e.PoolId="poolId",e.PriceRate="priceRate",e.Symbol="symbol",e.Token="token",e.Weight="weight"}(Mt||(Mt={})),function(e){e.Address="address",e.Amp="amp",e.BaseToken="baseToken",e.CreateTime="createTime",e.ExpiryTime="expiryTime",e.Factory="factory",e.HistoricalValues="historicalValues",e.HoldersCount="holdersCount",e.Id="id",e.LowerTarget="lowerTarget",e.MainIndex="mainIndex",e.ManagementFee="managementFee",e.Name="name",e.OracleEnabled="oracleEnabled",e.Owner="owner",e.PoolType="poolType",e.PriceRateProviders="priceRateProviders",e.PrincipalToken="principalToken",e.Root3Alpha="root3Alpha",e.Shares="shares",e.Snapshots="snapshots",e.SqrtAlpha="sqrtAlpha",e.SqrtBeta="sqrtBeta",e.StrategyType="strategyType",e.SwapEnabled="swapEnabled",e.SwapFee="swapFee",e.Swaps="swaps",e.SwapsCount="swapsCount",e.Symbol="symbol",e.Tokens="tokens",e.TokensList="tokensList",e.TotalLiquidity="totalLiquidity",e.TotalShares="totalShares",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.TotalWeight="totalWeight",e.Tx="tx",e.UnitSeconds="unitSeconds",e.UpperTarget="upperTarget",e.VaultId="vaultID",e.WeightUpdates="weightUpdates",e.WrappedIndex="wrappedIndex"}(Ft||(Ft={})),function(e){e.Address="address",e.CacheDuration="cacheDuration",e.CacheExpiry="cacheExpiry",e.Id="id",e.LastCached="lastCached",e.PoolId="poolId",e.Rate="rate",e.Token="token"}(Ut||(Ut={})),function(e){e.Caller="caller",e.Id="id",e.PoolId="poolId",e.Timestamp="timestamp",e.TokenAmountIn="tokenAmountIn",e.TokenAmountOut="tokenAmountOut",e.TokenIn="tokenIn",e.TokenInSym="tokenInSym",e.TokenOut="tokenOut",e.TokenOutSym="tokenOutSym",e.Tx="tx",e.UserAddress="userAddress",e.ValueUsd="valueUSD"}(Lt||(Lt={})),function(e){e.Amount="amount",e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.Price="price",e.PricingAsset="pricingAsset",e.Timestamp="timestamp"}(qt||(qt={})),function(e){e.Id="id",e.Timestamp="timestamp",e.Token="token",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(Wt||(Wt={})),function(e){e.Address="address",e.Decimals="decimals",e.Id="id",e.LatestPrice="latestPrice",e.LatestUsdPrice="latestUSDPrice",e.Name="name",e.Pool="pool",e.Symbol="symbol",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}($t||($t={})),function(e){e.Id="id",e.Pair="pair",e.Timestamp="timestamp",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(Gt||(Gt={})),function(e){e.Id="id",e.Token0="token0",e.Token1="token1",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(Vt||(Vt={})),function(e){e.Balance="balance",e.Id="id",e.Token="token",e.UserAddress="userAddress"}(Kt||(Kt={})),function(e){e.Id="id",e.SharesOwned="sharesOwned",e.Swaps="swaps",e.UserInternalBalances="userInternalBalances"}(Ht||(Ht={})),function(e){e.Allow="allow",e.Deny="deny"}(jt||(jt={}));const Zt=Xt`
    fragment SubgraphPoolToken on PoolToken {
  id
  symbol
  name
  decimals
  address
  balance
  managedBalance
  weight
  priceRate
}
    `,Jt=Xt`
    fragment SubgraphPool on Pool {
  id
  address
  poolType
  factory
  strategyType
  symbol
  name
  swapEnabled
  swapFee
  owner
  totalWeight
  totalSwapVolume
  totalSwapFee
  totalLiquidity
  totalShares
  tokens(first: 100) {
    ...SubgraphPoolToken
  }
  swapsCount
  holdersCount
  tokensList
  amp
  expiryTime
  unitSeconds
  createTime
  principalToken
  baseToken
  wrappedIndex
  mainIndex
  lowerTarget
  upperTarget
  sqrtAlpha
  sqrtBeta
  root3Alpha
}
    ${Zt}`,zt=Xt`
    fragment SubgraphPoolWithoutLinear on Pool {
  id
  address
  poolType
  symbol
  name
  swapFee
  totalWeight
  totalSwapVolume
  totalSwapFee
  totalLiquidity
  totalShares
  tokens(first: 1000) {
    ...SubgraphPoolToken
  }
  swapsCount
  holdersCount
  tokensList
  totalWeight
  amp
  expiryTime
  unitSeconds
  principalToken
  baseToken
  swapEnabled
}
    ${Zt}`,Yt=Xt`
    fragment SubgraphPoolSnapshot on PoolSnapshot {
  id
  pool {
    id
  }
  totalShares
  swapVolume
  swapFees
  timestamp
}
    `,Qt=Xt`
    fragment SubgraphJoinExit on JoinExit {
  amounts
  id
  sender
  timestamp
  tx
  type
  user {
    id
  }
  pool {
    id
    tokensList
  }
}
    `,ea=Xt`
    fragment SubgraphBalancer on Balancer {
  id
  totalLiquidity
  totalSwapVolume
  totalSwapFee
  totalSwapCount
  poolCount
}
    `,ta=Xt`
    fragment SubgraphTokenPrice on TokenPrice {
  id
  poolId {
    id
  }
  asset
  amount
  pricingAsset
  price
  block
  timestamp
}
    `,aa=Xt`
    fragment SubgraphTokenLatestPrice on LatestPrice {
  id
  asset
  price
  poolId {
    id
  }
  pricingAsset
}
    `,na=Xt`
    fragment SubgraphUser on User {
  id
  sharesOwned(first: 1000) {
    balance
    poolId {
      id
    }
  }
}
    `,sa=Xt`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${Jt}`,ia=Xt`
    query AllPools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pool0: pools(
    first: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool1000: pools(
    first: 1000
    skip: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool2000: pools(
    first: 1000
    skip: 2000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${Jt}`,ra=Xt`
    query Pool($id: ID!, $block: Block_height) {
  pool(id: $id, block: $block) {
    ...SubgraphPool
  }
}
    ${Jt}`,oa=Xt`
    query PoolsWithoutLinear($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolWithoutLinear
  }
}
    ${zt}`,da=Xt`
    query PoolWithoutLinear($id: ID!, $block: Block_height) {
  pool(id: $id, block: $block) {
    ...SubgraphPoolWithoutLinear
  }
}
    ${zt}`,pa=Xt`
    query PoolHistoricalLiquidities($skip: Int, $first: Int, $orderBy: PoolHistoricalLiquidity_orderBy, $orderDirection: OrderDirection, $where: PoolHistoricalLiquidity_filter, $block: Block_height) {
  poolHistoricalLiquidities(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    id
    poolId {
      id
    }
    poolTotalShares
    poolLiquidity
    poolShareValue
    pricingAsset
    block
  }
}
    `,la=Xt`
    query PoolSnapshots($skip: Int, $first: Int, $orderBy: PoolSnapshot_orderBy, $orderDirection: OrderDirection, $where: PoolSnapshot_filter, $block: Block_height) {
  poolSnapshots(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolSnapshot
  }
}
    ${Yt}`,ua=Xt`
    query JoinExits($skip: Int, $first: Int, $orderBy: JoinExit_orderBy, $orderDirection: OrderDirection, $where: JoinExit_filter, $block: Block_height) {
  joinExits(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphJoinExit
  }
}
    ${Qt}`,ca=Xt`
    query Balancers($skip: Int, $first: Int, $orderBy: Balancer_orderBy, $orderDirection: OrderDirection, $where: Balancer_filter, $block: Block_height) {
  balancers(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphBalancer
  }
}
    ${ea}`,ya=Xt`
    query TokenPrices($skip: Int, $first: Int, $orderBy: TokenPrice_orderBy, $orderDirection: OrderDirection, $where: TokenPrice_filter, $block: Block_height) {
  tokenPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenPrice
  }
}
    ${ta}`,ma=Xt`
    query TokenLatestPrices($skip: Int, $first: Int, $orderBy: LatestPrice_orderBy, $orderDirection: OrderDirection, $where: LatestPrice_filter, $block: Block_height) {
  latestPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenLatestPrice
  }
}
    ${aa}`,ba=Xt`
    query TokenLatestPrice($id: ID!) {
  latestPrice(id: $id) {
    ...SubgraphTokenLatestPrice
  }
}
    ${aa}`,ha=Xt`
    query User($id: ID!, $block: Block_height) {
  user(id: $id, block: $block) {
    ...SubgraphUser
  }
}
    ${na}`,fa=Xt`
    query Users($skip: Int, $first: Int, $orderBy: User_orderBy, $orderDirection: OrderDirection, $where: User_filter, $block: Block_height) {
  users(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphUser
  }
}
    ${na}`,Ta=(e,t,a)=>e();function Ia(e,t=Ta){return{Pools:(a,n)=>t((t=>e.request(sa,a,{...n,...t})),"Pools","query"),AllPools:(a,n)=>t((t=>e.request(ia,a,{...n,...t})),"AllPools","query"),Pool:(a,n)=>t((t=>e.request(ra,a,{...n,...t})),"Pool","query"),PoolsWithoutLinear:(a,n)=>t((t=>e.request(oa,a,{...n,...t})),"PoolsWithoutLinear","query"),PoolWithoutLinear:(a,n)=>t((t=>e.request(da,a,{...n,...t})),"PoolWithoutLinear","query"),PoolHistoricalLiquidities:(a,n)=>t((t=>e.request(pa,a,{...n,...t})),"PoolHistoricalLiquidities","query"),PoolSnapshots:(a,n)=>t((t=>e.request(la,a,{...n,...t})),"PoolSnapshots","query"),JoinExits:(a,n)=>t((t=>e.request(ua,a,{...n,...t})),"JoinExits","query"),Balancers:(a,n)=>t((t=>e.request(ca,a,{...n,...t})),"Balancers","query"),TokenPrices:(a,n)=>t((t=>e.request(ya,a,{...n,...t})),"TokenPrices","query"),TokenLatestPrices:(a,n)=>t((t=>e.request(ma,a,{...n,...t})),"TokenLatestPrices","query"),TokenLatestPrice:(a,n)=>t((t=>e.request(ba,a,{...n,...t})),"TokenLatestPrice","query"),User:(a,n)=>t((t=>e.request(ha,a,{...n,...t})),"User","query"),Users:(a,n)=>t((t=>e.request(fa,a,{...n,...t})),"Users","query")}}var ga,wa,Ea,xa,Sa,_a,Aa,Oa,Pa,Na,Ba,ka,va,Ca,Ra;!function(e){e.Arbitrum="Arbitrum",e.Optimism="Optimism",e.Polygon="Polygon"}(ga||(ga={})),function(e){e.Gauges="gauges",e.Id="id",e.NumGauges="numGauges"}(wa||(wa={})),function(e){e.Balance="balance",e.Gauge="gauge",e.Id="id",e.User="user"}(Ea||(Ea={})),function(e){e.Id="id",e.Name="name"}(xa||(xa={})),function(e){e.Gauge="gauge",e.Id="id",e.Timestamp="timestamp",e.User="user",e.Weight="weight"}(Sa||(Sa={})),function(e){e.AddedTimestamp="addedTimestamp",e.Address="address",e.Id="id",e.LiquidityGauge="liquidityGauge",e.RootGauge="rootGauge",e.Type="type"}(_a||(_a={})),function(e){e.Factory="factory",e.Gauge="gauge",e.Id="id",e.IsKilled="isKilled",e.IsPreferentialGauge="isPreferentialGauge",e.Pool="pool",e.PoolAddress="poolAddress",e.PoolId="poolId",e.RelativeWeightCap="relativeWeightCap",e.Shares="shares",e.Streamer="streamer",e.Symbol="symbol",e.Tokens="tokens",e.TotalSupply="totalSupply"}(Aa||(Aa={})),function(e){e.Asc="asc",e.Desc="desc"}(Oa||(Oa={})),function(e){e.Address="address",e.Gauges="gauges",e.GaugesList="gaugesList",e.Id="id",e.PoolId="poolId",e.PreferentialGauge="preferentialGauge"}(Pa||(Pa={})),function(e){e.Decimals="decimals",e.Gauge="gauge",e.Id="id",e.Symbol="symbol",e.TotalDeposited="totalDeposited"}(Na||(Na={})),function(e){e.Chain="chain",e.Factory="factory",e.Gauge="gauge",e.Id="id",e.IsKilled="isKilled",e.Recipient="recipient",e.RelativeWeightCap="relativeWeightCap"}(Ba||(Ba={})),function(e){e.GaugeShares="gaugeShares",e.GaugeVotes="gaugeVotes",e.Id="id",e.VotingLocks="votingLocks"}(ka||(ka={})),function(e){e.Id="id",e.LockedBalance="lockedBalance",e.UnlockTime="unlockTime",e.UpdatedAt="updatedAt",e.User="user",e.VotingEscrowId="votingEscrowID"}(va||(va={})),function(e){e.Id="id",e.Locks="locks",e.StakedSupply="stakedSupply"}(Ca||(Ca={})),function(e){e.Allow="allow",e.Deny="deny"}(Ra||(Ra={}));const Da=Xt`
    fragment SubgraphLiquidityGauge on LiquidityGauge {
  id
  symbol
  poolAddress
  poolId
  streamer
  factory {
    id
    numGauges
  }
  totalSupply
  tokens {
    id
    symbol
    decimals
    totalDeposited
  }
}
    `,Ma=Xt`
    fragment SubgraphPoolWithPreferentialGauge on Pool {
  id
  poolId
  preferentialGauge {
    ...SubgraphLiquidityGauge
  }
}
    ${Da}`,Fa=Xt`
    query LiquidityGauges($skip: Int, $first: Int, $orderBy: LiquidityGauge_orderBy, $orderDirection: OrderDirection, $where: LiquidityGauge_filter, $block: Block_height) {
  liquidityGauges(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphLiquidityGauge
  }
}
    ${Da}`,Ua=Xt`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolWithPreferentialGauge
  }
}
    ${Ma}`,La=(e,t,a)=>e();function qa(e){return Ia(new u.GraphQLClient(e))}function Wa(e){return function(e,t=La){return{LiquidityGauges:(a,n)=>t((t=>e.request(Fa,a,{...n,...t})),"LiquidityGauges","query"),Pools:(a,n)=>t((t=>e.request(Ua,a,{...n,...t})),"Pools","query")}}(new u.GraphQLClient(e))}const $a=["function aggregate(tuple[](address target, bytes callData) memory calls) public view returns (uint256 blockNumber, bytes[] memory returnData)"],Ga=(e,t)=>new r.Contract(e,$a,t);class Va{constructor(t,a,n,s={}){this.options={},this.calls=[],this.paths=[],this.multiAddress=t,this.provider=a,this.interface=new e.Interface(n),this.options=s}call(e,t,a,n){return this.calls.push([t,a,n]),this.paths.push(e),this}async execute(e={}){const t=e;return(await this.executeMulticall()).forEach(((e,a)=>o.set(t,this.paths[a],e.length>1?e:e[0]))),this.calls=[],this.paths=[],t}async executeMulticall(){const e=Ga(this.multiAddress,this.provider),[,t]=await e.aggregate(this.calls.map((([e,t,a])=>[e,this.interface.encodeFunctionData(t,a)])),this.options);return t.map(((e,t)=>this.interface.decodeFunctionResult(this.calls[t][1],e)))}}var Ka=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNormalizedWeights",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"increaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],Ha=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],ja=[{inputs:[{internalType:"contract IERC20",name:"_underlying",type:"address"},{internalType:"contract IERC20",name:"_bond",type:"address"},{internalType:"uint256",name:"_expiration",type:"uint256"},{internalType:"uint256",name:"_unitSeconds",type:"uint256"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"uint256",name:"_percentFee",type:"uint256"},{internalType:"uint256",name:"_percentFeeGov",type:"uint256"},{internalType:"address",name:"_governance",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"collectedBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collectedBond",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBond",type:"uint256"}],name:"FeeCollection",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"FEE_BOUND",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"bond",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"bondDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"expiration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesBond",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesUnderlying",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"governance",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"increaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256",name:"currentBalanceTokenIn",type:"uint256"},{internalType:"uint256",name:"currentBalanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"percentFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"percentFeeGov",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountX",type:"uint256"},{internalType:"uint256",name:"reserveX",type:"uint256"},{internalType:"uint256",name:"reserveY",type:"uint256"},{internalType:"bool",name:"out",type:"bool"}],name:"solveTradeInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"underlying",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"underlyingDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"unitSeconds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],Xa=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],Za=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct ComposableStablePool.NewPoolParams",name:"params",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rate",type:"uint256"}],name:"TokenRateCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!0,internalType:"contract IRateProvider",name:"provider",type:"address"},{indexed:!1,internalType:"uint256",name:"cacheDuration",type:"uint256"}],name:"TokenRateProviderSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastJoinExitData",outputs:[{internalType:"uint256",name:"lastJoinExitAmplification",type:"uint256"},{internalType:"uint256",name:"lastPostJoinExitInvariant",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinimumBpt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRateCache",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"oldRate",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"expires",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"isTokenExemptFromYieldProtocolFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"duration",type:"uint256"}],name:"setTokenRateCacheDuration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"updateTokenRateCache",outputs:[],stateMutability:"nonpayable",type:"function"}];const Ja=[exports.Network.MAINNET,exports.Network.POLYGON,exports.Network.ROPSTEN,exports.Network.RINKEBY,exports.Network.GOERLI,exports.Network.KOVAN];class za{constructor(e,t,a,n){this.client=e,this.provider=t,this.network=a,this.sorConfig=n}async getPools(){const e=function(e){return e.map((e=>({...e,poolType:e.poolType||"",tokens:(e.tokens||[]).map((e=>({...e,weight:e.weight||null}))),totalWeight:e.totalWeight||void 0,amp:e.amp||void 0,expiryTime:e.expiryTime?o.parseInt(e.expiryTime):void 0,unitSeconds:e.unitSeconds?o.parseInt(e.unitSeconds):void 0,principalToken:e.principalToken||void 0,baseToken:e.baseToken||void 0})))}(this.supportsLinearPools?await this.getLinearPools():await this.getNonLinearPools());return!1===this.sorConfig.fetchOnChainBalances?e:async function(e,t,n,s){if(0===e.length)return e;const i=Object.values(Object.fromEntries([...p.Vault__factory.abi,...V,...Ka,...Ha,...ja,...Xa,...Za].map((e=>[e.name,e])))),r=new Va(t,s,i),o=Object.values(d.PoolFilter),l=[];e.forEach((e=>{o.includes(e.poolType)?(l.push(e),r.call(`${e.id}.poolTokens`,n,"getPoolTokens",[e.id]),r.call(`${e.id}.totalSupply`,e.address,"totalSupply"),(e.poolType.includes("Linear")||"StablePhantom"===e.poolType)&&r.call(`${e.id}.virtualSupply`,e.address,"getVirtualSupply"),"ComposableStable"===e.poolType&&r.call(`${e.id}.actualSupply`,e.address,"getActualSupply"),"Weighted"===e.poolType||"LiquidityBootstrapping"===e.poolType||"Investment"===e.poolType?(r.call(`${e.id}.weights`,e.address,"getNormalizedWeights"),r.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage")):"Stable"===e.poolType||"MetaStable"===e.poolType||"StablePhantom"===e.poolType||"ComposableStable"===e.poolType?(r.call(`${e.id}.amp`,e.address,"getAmplificationParameter"),r.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage")):"Element"===e.poolType?r.call(`${e.id}.swapFee`,e.address,"percentFee"):e.poolType.toString().includes("Linear")?(r.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage"),r.call(`${e.id}.targets`,e.address,"getTargets"),r.call(`${e.id}.rate`,e.address,"getWrappedTokenRate")):e.poolType.toString().includes("Gyro")&&r.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage")):console.error(`Unknown pool type: ${e.poolType} ${e.id}`)}));let u={};try{u=await r.execute()}catch(e){throw"Issue with multicall execution."}const c=[];return Object.entries(u).forEach((([e,t],n)=>{try{const{poolTokens:s,swapFee:i,weights:r,totalSupply:o,virtualSupply:d,actualSupply:p}=t;if("Stable"===l[n].poolType||"MetaStable"===l[n].poolType||"StablePhantom"===l[n].poolType||"ComposableStable"===l[n].poolType){if(!t.amp)return void console.error(`Stable Pool Missing Amp: ${e}`);l[n].amp=a.formatFixed(t.amp[0],3)}if(l[n].poolType.includes("Linear")){if(!t.targets)return void console.error(`Linear Pool Missing Targets: ${e}`);l[n].lowerTarget=a.formatFixed(t.targets[0],18),l[n].upperTarget=a.formatFixed(t.targets[1],18);const s=l[n].wrappedIndex;if(void 0===s||void 0===t.rate)return void console.error(`Linear Pool Missing WrappedIndex or PriceRate: ${e}`);l[n].tokens[s].priceRate=a.formatFixed(t.rate,18)}if(l[n].swapFee=a.formatFixed(i,18),s.tokens.forEach(((t,i)=>{const o=l[n].tokens.find((e=>H(e.address,t)));if(!o)throw`Pool Missing Expected Token: ${e} ${t}`;o.balance=a.formatFixed(s.balances[i],o.decimals),r&&(o.weight=a.formatFixed(r[i],18))})),l[n].poolType.includes("Linear")||"StablePhantom"===l[n].poolType){if(void 0===d)return void console.error(`Pool with pre-minted BPT missing Virtual Supply: ${e}`);l[n].totalShares=a.formatFixed(d,18)}else if("ComposableStable"===l[n].poolType){if(void 0===p)return void console.error(`ComposableStable missing Actual Supply: ${e}`);l[n].totalShares=a.formatFixed(p,18)}else l[n].totalShares=a.formatFixed(o,18);c.push(l[n])}catch(e){throw`Issue with pool onchain data: ${e}`}})),c}(e,this.network.addresses.contracts.multicall,this.network.addresses.contracts.vault,this.provider)}get supportsLinearPools(){return Ja.includes(this.network.chainId)}async getLinearPools(){const{pool0:e,pool1000:t,pool2000:a}=await this.client.AllPools({where:{swapEnabled:!0,totalShares_gt:"0"},orderBy:Ft.TotalLiquidity,orderDirection:vt.Desc});return[...e,...t,...a]}async getNonLinearPools(){const{pools:e}=await this.client.PoolsWithoutLinear({where:{swapEnabled:!0,totalShares_gt:"0"},orderBy:Ft.TotalLiquidity,orderDirection:vt.Desc,first:1e3});return e}}class Ya{constructor(e){this.chainId=e}async getNativeAssetPriceInToken(e){const t=await this.getTokenPriceInNativeAsset(e);return""+1/parseFloat(t)}async getTokenPriceInNativeAsset(e){const t=`https://api.coingecko.com/api/v3/simple/token_price/${this.platformId}?contract_addresses=${e}&vs_currencies=${this.nativeAssetId}`,{data:a}=await x.default.get(t,{headers:{Accept:"application/json","Content-Type":"application/json"}});if(void 0===a[e.toLowerCase()][this.nativeAssetId])throw Error("No price returned from Coingecko");return a[e.toLowerCase()][this.nativeAssetId]}get platformId(){switch(this.chainId){case 1:case 42:return"ethereum";case 137:return"polygon-pos";case 42161:return"arbitrum-one"}return"2"}get nativeAssetId(){switch(this.chainId){case 1:case 42:case 42161:return"eth";case 137:return""}return""}}class Qa{constructor(e,t){this.client=e,this.weth=t.toLowerCase()}async getNativeAssetPriceInToken(e){const t=await this.getLatestPriceInEthFromSubgraph(e);if(!t)throw Error("No price found in the subgraph");return""+1/t}async getLatestPriceInEthFromSubgraph(e){e=e.toLowerCase();const{latestPrices:t}=await this.client.TokenLatestPrices({where:{asset_in:[e,this.weth]}}),a=o.keyBy(t,"id");if(a[`${e}-${this.weth}`])return parseFloat(a[`${e}-${this.weth}`].price);const n=t.filter((t=>t.asset===e));for(const e of n){const t=a[`${e.pricingAsset}-${this.weth}`];if(t)return parseFloat(e.price)*parseFloat(t.price)}return null}}function en(e){var t,a;if("number"==typeof e.network){const a=de[e.network];return{...a,urls:{...a.urls,subgraph:null!==(t=e.customSubgraphUrl)&&void 0!==t?t:a.urls.subgraph}}}return{...e.network,urls:{...e.network.urls,subgraph:null!==(a=e.customSubgraphUrl)&&void 0!==a?a:e.network.urls.subgraph}}}class tn extends d.SOR{constructor(e){const t=en(e),a=tn.getSorConfig(e),n=tn.getSorNetworkConfig(t),s=new l.JsonRpcProvider(e.rpcUrl,e.network),i=qa(t.urls.subgraph);super(s,n,tn.getPoolDataService(t,a,s,i),tn.getTokenPriceService(t,a,i))}static getSorConfig(e){return{tokenPriceService:"coingecko",poolDataService:"subgraph",fetchOnChainBalances:!0,...e.sor}}static getSorNetworkConfig(e){var t;return{...e,vault:e.addresses.contracts.vault,weth:e.addresses.tokens.wrappedNativeAsset,lbpRaisingTokens:null===(t=e.addresses.tokens)||void 0===t?void 0:t.lbpRaisingTokens,wETHwstETH:e.pools.wETHwstETH}}static getPoolDataService(e,t,a,n){return"object"==typeof t.poolDataService?t.poolDataService:new za(n,a,e,t)}static getTokenPriceService(e,t,a){return"object"==typeof t.tokenPriceService?t.tokenPriceService:("subgraph"===t.tokenPriceService&&new Qa(a,e.addresses.tokens.wrappedNativeAsset),new Ya(e.chainId))}}function an(e){if(e.poolIds.length>2)throw new Error("Simple flash swap only supports a maximum of two pools");if(e.assets.length>2)throw new Error("Simple flash swap only supports a maximum of to two assets (tokens)")}function nn(e,t){return[{poolId:e[0],assetInIndex:0,assetOutIndex:1,amount:t,userData:"0x"},{poolId:e[1],assetInIndex:1,assetOutIndex:0,amount:"0",userData:"0x"}]}function sn(e){return-1*Number(e)}function rn(e){return o.sum(e)}var on=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"wstETH",type:"address"},{internalType:"contract IBalancerMinter",name:"minter",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"exitPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge[]",name:"gauges",type:"address[]"}],name:"gaugeClaimRewards",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeDeposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"gaugeMint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"approval",type:"bool"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"gaugeSetMinterApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeWithdraw",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"getEntrypoint",outputs:[{internalType:"contract IBalancerRelayer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"},{internalType:"uint256",name:"value",type:"uint256"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"},{internalType:"bytes",name:"authorisation",type:"bytes"}],name:"setRelayerApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETHAndWrap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapWstETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20Permit",name:"token",type:"address"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20PermitDAI",name:"token",type:"address"},{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"bool",name:"allowed",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermitDAI",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapStETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"uAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"}];const dn={"0xae7ab96520de3a18e5e111b5eaab095312d7fe84":"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0","0xd46ba6d942050d489dbd938a2c909a5d5039a161":"0xedb171c18ce90b633db442f2a6f72874093b49ef","0x1e6bb68acec8fefbd87d192be09bb274170a0548":"0xF03387d8d0FF326ab586A58E0ab4121d106147DF"};function pn(e){let t=e;return dn.hasOwnProperty(e)&&(t=dn[e]),t}var ln;function un(e,t,a){const{tokens:n,contracts:s}=(e=>de[e].addresses)(a);let i={id:ln.vault,address:s.vault};return n.stETH&&s.lidoRelayer&&[e,t].includes(n.stETH)&&(i={id:ln.lido,address:s.lidoRelayer}),i}function cn(e){let t=p.Vault__factory.abi;e.id===ln.lido&&(t=on);return t.filter((e=>e.name&&["swap","batchSwap"].includes(e.name)))}function yn(e){return{amount:e,max:t=>e.mul(1e3+t).div(1e3),min:t=>e.mul(1e3-t).div(1e3)}}function mn(e,t){const a=t===exports.SwapType.SwapExactIn?e.swapAmount:e.returnAmount,n=t===exports.SwapType.SwapExactIn?e.returnAmount:e.swapAmount,s=t===exports.SwapType.SwapExactIn?e.swapAmountForSwaps||e.swapAmount:e.returnAmountFromSwaps||e.returnAmount,i=t===exports.SwapType.SwapExactIn?e.returnAmountFromSwaps||e.returnAmount:e.swapAmountForSwaps||e.swapAmount,r=pn(e.tokenIn),o=pn(e.tokenOut);return{...e,amountIn:a,amountOut:n,amountInForLimits:yn(s),amountOutForLimits:yn(i),tokenInForSwaps:r,tokenOutFromSwaps:o}}!function(e){e[e.vault=1]="vault",e[e.lido=2]="lido"}(ln||(ln={}));class bn{constructor(e,t,a){this.kind=t,this.chainId=a,this.functionName="swap",this.swapInfo=mn(e,t),this.relayer=un(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e.toString()}get amount(){return this.kind===exports.SwapType.SwapExactOut?this.swapInfo.amountOutForLimits.amount:this.swapInfo.amountInForLimits.amount}setLimits(e){this.limit=this.kind===exports.SwapType.SwapExactIn?this.swapInfo.amountOutForLimits.min(e).toString():this.swapInfo.amountInForLimits.max(e).toString()}get singleSwap(){return{poolId:this.swapInfo.swaps[0].poolId,kind:this.kind,assetIn:this.swapInfo.tokenInForSwaps,assetOut:this.swapInfo.tokenOutFromSwaps,amount:this.amount.toString(),userData:"0x"}}attributes(){var e;if(!this.funds||!this.limit||!this.deadline)throw new Error("Uninitialized arguments");let t={request:this.singleSwap,funds:this.funds,limit:this.limit,deadline:this.deadline};const a=this.fragment();return a[0].inputs&&(null===(e=a[0].inputs)||void 0===e?void 0:e.length)>4&&(t={...t,value:"0",outputReference:"0"}),t}data(){return new e.Interface(this.fragment()).encodeFunctionData("swap",Object.values(this.attributes()))}value(e){let n=a.BigNumber.from(0);return this.swapInfo.tokenIn===t.AddressZero&&(n=this.kind===exports.SwapType.SwapExactIn?this.swapInfo.amountIn:this.swapInfo.amountInForLimits.max(e)),n}to(){return this.relayer.address}fragment(){return cn(this.relayer).filter((e=>e.name===this.functionName))}}class hn{constructor(e,t,a){this.kind=t,this.chainId=a,this.functionName="batchSwap",this.swapInfo=mn(e,t),this.relayer=un(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e}minAmountOut(e){return this.kind===exports.SwapType.SwapExactIn?this.swapInfo.amountOutForLimits.min(e):this.swapInfo.amountOutForLimits.amount}maxAmountIn(e){return this.kind===exports.SwapType.SwapExactOut?this.swapInfo.amountInForLimits.max(e):this.swapInfo.amountInForLimits.amount}setLimits(e){this.limits=this.swapInfo.tokenAddresses.map((t=>{let n=a.BigNumber.from(0);return t===this.swapInfo.tokenInForSwaps&&(n=this.maxAmountIn(e)),t===this.swapInfo.tokenOutFromSwaps&&(n=this.minAmountOut(e).mul(-1)),n})).map((e=>e.toString().split(".")[0]))}attributes(){var e;if(!this.funds||!this.limits||!this.deadline)throw new Error("Uninitialized arguments");let t={kind:this.kind,swaps:this.swapInfo.swaps,assets:this.swapInfo.tokenAddresses,funds:this.funds,limits:this.limits,deadline:this.deadline};const a=this.fragment();return a[0].inputs&&(null===(e=a[0].inputs)||void 0===e?void 0:e.length)>6&&(t={...t,value:"0",outputReferences:[]}),t}data(){return new e.Interface(this.fragment()).encodeFunctionData("batchSwap",Object.values(this.attributes()))}value(e){let n=a.BigNumber.from(0);return this.swapInfo.tokenIn===t.AddressZero&&(n=this.maxAmountIn(e)),n}to(){return this.relayer.address}fragment(){return cn(this.relayer).filter((e=>e.name===this.functionName))}}class fn{constructor(e){e instanceof d.SOR?(this.sor=e,this.chainId=this.sor.provider._network.chainId):(this.sor=new tn(e),this.chainId=e.network),this.vaultContract=p.Vault__factory.connect(oe,this.sor.provider)}static getLimitsForSlippage(e,t,a,n,s,i){return ae(e,t,a,n,s,i).map((e=>e.toString()))}async findRouteGivenIn({tokenIn:e,tokenOut:t,amount:a,gasPrice:n,maxPools:s=4}){return this.sor.getSwaps(e,t,d.SwapTypes.SwapExactIn,a,{gasPrice:n,maxPools:s})}async findRouteGivenOut({tokenIn:e,tokenOut:t,amount:a,gasPrice:n,maxPools:s}){return this.sor.getSwaps(e,t,d.SwapTypes.SwapExactOut,a,{gasPrice:n,maxPools:s})}buildSwap({userAddress:e,recipient:t,swapInfo:a,kind:n,deadline:s,maxSlippage:i}){if(!this.chainId)throw"Missing network configuration";const r=a.swaps.length>1?new hn(a,n,this.chainId):new bn(a,n,this.chainId);r.setFunds(e,t),r.setDeadline(s),r.setLimits(i);const o=r.to(),{functionName:d}=r;return{to:o,functionName:d,attributes:r.attributes(),data:r.data(),value:r.value(i)}}static encodeBatchSwap(e){return p.Vault__factory.createInterface().encodeFunctionData("batchSwap",[e.kind,e.swaps,e.assets,e.funds,e.limits,e.deadline])}static encodeSimpleFlashSwap(e){return this.encodeBatchSwap(function({poolIds:e,assets:t,flashLoanAmount:a,walletAddress:n}){an({poolIds:e,assets:t});const s=nn(e,a),i={sender:n,fromInternalBalance:!1,recipient:n,toInternalBalance:!1};return{kind:exports.SwapType.SwapExactIn,swaps:s,assets:t,funds:i,limits:["0","0"],deadline:"999999999999999999"}}(e))}async fetchPools(){return this.sor.fetchPools()}getPools(){return this.sor.getPools()}async queryBatchSwap(e){return await it(this.vaultContract,e.kind,e.swaps,e.assets)}async queryBatchSwapWithSor(e){return await rt(this.sor,this.vaultContract,e)}async querySimpleFlashSwap(e){return await async function(e){an(e);const[t,a]=e.assets;try{const n=await it(e.vaultContract,exports.SwapType.SwapExactIn,nn(e.poolIds,e.flashLoanAmount),e.assets),s={[t]:sn(n[0]).toString(),[a]:sn(n[1]).toString()};return{profits:s,isProfitable:rn([s[t],s[a]])>0}}catch(e){throw`Failed to querySimpleFlashSwap: ${e}`}}({...e,vaultContract:this.vaultContract})}async getSorSwap(e){return await ot(e.tokenIn,e.tokenOut,e.swapType,e.amount,this.sor)}}var Tn=[{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"}];const In=new e.Interface(on);class gn{constructor(e){this.swaps=e instanceof fn?e:new fn(e)}static encodeApproveVault(e,t){return In.encodeFunctionData("approveVault",[e,t])}static encodeSetRelayerApproval(e,t,a){return In.encodeFunctionData("setRelayerApproval",[e,t,a])}static encodeGaugeWithdraw(e,t,a,n){return In.encodeFunctionData("gaugeWithdraw",[e,t,a,n])}static encodeGaugeDeposit(e,t,a,n){return In.encodeFunctionData("gaugeDeposit",[e,t,a,n])}static encodeBatchSwap(e){return In.encodeFunctionData("batchSwap",[e.swapType,e.swaps,e.assets,e.funds,e.limits,e.deadline,e.value,e.outputReferences])}static encodeExitPool(e){return In.encodeFunctionData("exitPool",[e.poolId,e.poolKind,e.sender,e.recipient,e.exitPoolRequest,e.outputReferences])}static encodeUnwrapAaveStaticToken(t){return new e.Interface(Tn).encodeFunctionData("unwrapAaveStaticToken",[t.staticToken,t.sender,t.recipient,t.amount,t.toUnderlying,t.outputReferences])}static toChainedReference(e){const t=`0x${gn.CHAINED_REFERENCE_PREFIX}${"0".repeat(64-gn.CHAINED_REFERENCE_PREFIX.length)}`;return a.BigNumber.from(t).add(e)}static constructExitCall(e){const{assets:t,minAmountsOut:a,userData:n,toInternalBalance:s,poolId:i,poolKind:r,sender:o,recipient:d,outputReferences:p}=e,l={poolId:i,poolKind:r,sender:o,recipient:d,outputReferences:p,exitPoolRequest:{assets:t,minAmountsOut:a,userData:n,toInternalBalance:s}};return gn.encodeExitPool(l)}async fetchPools(){return this.swaps.fetchPools()}getPools(){return this.swaps.getPools()}async exitPoolAndBatchSwap(e){const n=t.WeiPerEther.sub(a.BigNumber.from(e.slippage)),s=e.expectedAmountsOut.map((e=>a.BigNumber.from(e).mul(n).div(t.WeiPerEther).toString())),i=[];e.exitTokens.forEach(((e,t)=>{const a=gn.toChainedReference(t);i.push({index:t,key:a})}));const r=gn.constructExitCall({assets:e.exitTokens,minAmountsOut:s,userData:e.userData,toInternalBalance:!0,poolId:e.poolId,poolKind:0,sender:e.exiter,recipient:e.exiter,outputReferences:i,exitPoolRequest:{}}),o=await this.swaps.queryBatchSwapWithSor({tokensIn:e.exitTokens,tokensOut:e.finalTokensOut,swapType:exports.SwapType.SwapExactIn,amounts:s,fetchPools:e.fetchPools});if(o.returnAmounts.includes("0"))throw new le(exports.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);o.swaps.forEach((t=>{const a=o.assets[t.assetInIndex],n=e.exitTokens.indexOf(a);-1!==n&&(t.amount=i[n].key.toString())}));const d=t.WeiPerEther.add(e.slippage);e.exitTokens.forEach(((n,s)=>{const i=o.assets.map((e=>e.toLowerCase())).indexOf(n.toLowerCase());-1!==i&&(o.deltas[i]=a.BigNumber.from(e.expectedAmountsOut[s]).mul(d).div(t.WeiPerEther).toString())}));const p=fn.getLimitsForSlippage(e.exitTokens,e.finalTokensOut,exports.SwapType.SwapExactIn,o.deltas,o.assets,"0"),l={sender:e.exiter,recipient:e.swapRecipient,fromInternalBalance:!0,toInternalBalance:!1};return{function:"multicall",params:[r,gn.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:o.swaps,assets:o.assets,funds:l,limits:p.map((e=>e.toString())),deadline:t.MaxUint256,value:"0",outputReferences:[]})],outputs:{amountsOut:o.returnAmounts}}}async swapUnwrapAaveStaticExactIn(e,n,s,i,r,o,d={fetchPools:!0,fetchOnChain:!1}){const p=await this.swaps.queryBatchSwapWithSor({tokensIn:e,tokensOut:n,swapType:exports.SwapType.SwapExactIn,amounts:s,fetchPools:d});if(p.returnAmounts.includes("0"))throw new le(exports.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);const l=fn.getLimitsForSlippage(e,n,exports.SwapType.SwapExactIn,p.deltas,p.assets,o);return{function:"multicall",params:this.encodeSwapUnwrap(n,exports.SwapType.SwapExactIn,p.swaps,p.assets,r,l),outputs:{amountsOut:p.returnAmounts.map(((e,n)=>{const s=a.BigNumber.from(e).abs().mul(i[n]).div(t.WeiPerEther);if(!s.gt(t.Zero))throw new le(exports.BalancerErrorCode.UNWRAP_ZERO_AMOUNT);return s.toString()}))}}}async swapUnwrapAaveStaticExactOut(e,n,s,i,r,o,d={fetchPools:!0,fetchOnChain:!1}){const p=s.map(((e,n)=>{const s=a.BigNumber.from(e).mul(t.WeiPerEther).div(i[n]);if(!s.gt(t.Zero))throw new le(exports.BalancerErrorCode.WRAP_ZERO_AMOUNT);return s.toString()})),l=await this.swaps.queryBatchSwapWithSor({tokensIn:e,tokensOut:n,swapType:exports.SwapType.SwapExactOut,amounts:p,fetchPools:d});if(l.returnAmounts.includes("0"))throw new le(exports.BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);const u=fn.getLimitsForSlippage(e,n,exports.SwapType.SwapExactOut,l.deltas,l.assets,o);return{function:"multicall",params:this.encodeSwapUnwrap(n,exports.SwapType.SwapExactOut,l.swaps,l.assets,r,u),outputs:{amountsIn:l.returnAmounts.map((e=>e.toString()))}}}encodeSwapUnwrap(e,a,n,s,i,r){const o=[],d=[];e.forEach(((e,t)=>{const a=s.findIndex((t=>t.toLowerCase()===e.toLowerCase()));if(-1===a)return;const n=gn.toChainedReference(t);o.push({index:a,key:n});const r=gn.encodeUnwrapAaveStaticToken({staticToken:e,sender:i.recipient,recipient:i.sender,amount:n,toUnderlying:!0,outputReferences:0});d.push(r)}));return[gn.encodeBatchSwap({swapType:a,swaps:n,assets:s,funds:i,limits:r.map((e=>e.toString())),deadline:t.MaxUint256,value:"0",outputReferences:o}),...d]}}gn.CHAINED_REFERENCE_PREFIX="ba10";class wn{constructor(e){this.url=en(e).urls.subgraph,this.client=this.initClient()}initClient(){return Ia(new u.GraphQLClient(this.url))}}class En{constructor(e,t){this.swaps=t||new fn(e)}async fetchPools(){return this.swaps.fetchPools()}getPools(){return this.swaps.getPools()}async getSpotPrice(e,t,a=[]){0===a.length&&(await this.fetchPools(),a=this.getPools());const n=d.parseToPoolsDict(a,0),s=this.swaps.sor.routeProposer.getCandidatePathsFromDict(e,t,0,n,4);if(0===s.length)throw new le(exports.BalancerErrorCode.UNSUPPORTED_PAIR);return d.getSpotPriceAfterSwapForPath(s[0],0,d.ZERO).toString()}}var xn=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];class Sn{constructor(e,t){this.contractAddresses="number"==typeof e?de[e].addresses.contracts:e,this.vault=p.Vault__factory.connect(this.contractAddresses.vault,t),this.contractAddresses.lidoRelayer&&(this.lidoRelayer=p.LidoRelayer__factory.connect(this.contractAddresses.lidoRelayer,t)),this.multicall=Ga(this.contractAddresses.multicall,t)}get contracts(){return{vault:this.vault,lidoRelayer:this.lidoRelayer,multicall:this.multicall,ERC20:this.getErc20}}getErc20(e,t){return((e,t)=>new r.Contract(e,xn,t))(e,t)}}const _n={1:{relayer:"0x886A3Ec7bcC508B8795990B60Fa21f85F9dB7948",staBal3:{id:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063",address:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42",gauge:"0x34f33cdaed8ba0e1ceece80e5f4a73bcf234cfac",assetOrder:["DAI","USDC","USDT"]},bbausd1:{id:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe",address:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2",gauge:"0x68d019f64a7aa97e2d4e7363aee42251d08124fb",assetOrder:["bb-a-USDT","bb-a-DAI","bb-a-USDC"]},bbausd2:{id:"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d",address:"0xa13a9247ea42d743238089903570127dda72fe44",gauge:"0xa6325e799d266632d347e41265a69af111b05403"},linearUsdc1:{id:"0x9210f1204b5a24742eba12f710636d76240df3d00000000000000000000000fc",address:"0x9210F1204b5a24742Eba12f710636D76240dF3d0"},linearDai1:{id:"0x804cdb9116a10bb78768d3252355a1b18067bf8f0000000000000000000000fb",address:"0x804CdB9116a10bB78768D3252355a1b18067bF8f"},linearUsdt1:{id:"0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c0000000000000000000000fd",address:"0x2BBf681cC4eb09218BEe85EA2a5d3D13Fa40fC0C"},linearUsdc2:{id:"0x82698AECC9E28E9BB27608BD52CF57F704BD1B83000000000000000000000336",address:"0x82698aeCc9E28e9Bb27608Bd52cF57f704BD1B83"},linearDai2:{id:"0xAE37D54AE477268B9997D4161B96B8200755935C000000000000000000000337",address:"0xae37D54Ae477268B9997d4161B96b8200755935c"},linearUsdt2:{id:"0x2F4EB100552EF93840D5ADC30560E5513DFFFACB000000000000000000000334",address:"0x2F4eb100552ef93840d5aDC30560E5513DFfFACb"},maiusd:{id:"",address:"",gauge:"",assetOrder:["USDT","miMATIC","DAI","USDC"]},maibbausd:{id:"",address:"",gauge:"",assetOrder:["bb-a-USD","miMATIC"]},DAI:"0x6b175474e89094c44da98b954eedeac495271d0f",USDC:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",USDT:"0xdAC17F958D2ee523a2206206994597C13D831ec7",waDAI:"0x02d60b84491589974263d922d9cc7a3152618ef6",waUSDC:"0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de",waUSDT:"0xf8fd466f12e236f4c96f7cce6c79eadb819abf58",miMATIC:""},5:{relayer:"0x7b9B6f094DC2Bd1c12024b0D9CC63d6993Be1888",staBal3:{id:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062",address:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2",gauge:"0xfd364cda96bb7db06b65706182c448a73f0a5f9a",assetOrder:["USDT","DAI","USDC"]},staBal3_2:{id:"0xff9d677474d4344379924e10b68c8fea67e03294000000000000000000000072",address:"0xff9d677474d4344379924e10b68c8fea67e03294",gauge:"0x4e4ebf2aa90e41174d716a5168895357762d68af",assetOrder:["USDT","DAI","USDC"]},staBal3_3:{id:"0x3bfc8a0509f1a68aefd446f6c19bf37b3c75a8fc0000000000000000000000a5",address:"0x3bfc8a0509f1a68aefd446f6c19bf37b3c75a8fc",gauge:"0x7776e1008d7c20ab54aa57a7c44fc7de602de29a",assetOrder:["USDT","DAI","USDC"]},bbausd1:{id:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",address:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd",gauge:"0xa2d0ea81a47d68598922cd54c59249ff58c2a3ff",assetOrder:["bb-a-USDC","bb-a-DAI","bb-a-USDT"]},bbausd2:{id:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",address:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd",gauge:"0xa2d0ea81a47d68598922cd54c59249ff58c2a3ff"},linearUsdc1:{id:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc8668100000000000000000000005c",address:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc86681"},linearDai1:{id:"0x5cea6a84ed13590ed14903925fa1a73c36297d9900000000000000000000005d",address:"0x5cea6a84ed13590ed14903925fa1a73c36297d99"},linearUsdt1:{id:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f00000000000000000000005e",address:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f"},linearUsdc2:{id:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc8668100000000000000000000005c",address:"0x0595d1df64279ddb51f1bdc405fe2d0b4cc86681"},linearDai2:{id:"0x5cea6a84ed13590ed14903925fa1a73c36297d9900000000000000000000005d",address:"0x5cea6a84ed13590ed14903925fa1a73c36297d99"},linearUsdt2:{id:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f00000000000000000000005e",address:"0xefd681a82970ac5d980b9b2d40499735e7bf3f1f"},maiusd:{id:"0x6a8f9ab364b85725973d2a33cb9aae2dac43b5e30000000000000000000000a6",address:"0x6a8f9ab364b85725973d2a33cb9aae2dac43b5e3",gauge:"0x58141bdcecb7fbae006964f4131cf6f65c948357",assetOrder:["USDT","miMATIC","DAI","USDC"]},maibbausd:{id:"0xb04b03b78cf79788a1931545bd2744161029648f0000000000000000000000a8",address:"0xb04b03b78cf79788a1931545bd2744161029648f",gauge:"0xdc3f6fc8898830e53c777543fe252b14f22680d4",assetOrder:["bb-a-USD","miMATIC","MAI BSP"]},USDT:"0x1f1f156e0317167c11aa412e3d1435ea29dc3cce",DAI:"0x8c9e6c40d3402480ace624730524facc5482798c",USDC:"0xe0c9275e44ea80ef17579d33c55136b7da269aeb",waDAI:"0x89534a24450081aa267c79b07411e9617d984052",waUSDC:"0x811151066392fd641fe74a9b55a712670572d161",waUSDT:"0x4cb1892fddf14f772b2e39e299f44b2e5da90d04",miMATIC:"0x398106564948feeb1fedea0709ae7d969d62a391"},137:{relayer:"0xcf6a66E32dCa0e26AcC3426b851FD8aCbF12Dac7",staBal3:{id:"",address:"",gauge:"",assetOrder:["USDT","DAI","USDC"]},bbausd1:{id:"",address:"",gauge:"",assetOrder:["bb-a-USDC","bb-a-DAI","bb-a-USDT"]},bbausd2:{id:"0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b",address:"0x48e6b98ef6329f8f0a30ebb8c7c960330d648085",gauge:""},linearUsdc1:{id:"",address:""},linearDai1:{id:"",address:""},linearUsdt1:{id:"",address:""},linearUsdc2:{id:"0xf93579002dbe8046c43fefe86ec78b1112247bb8000000000000000000000759",address:"0xf93579002dbe8046c43fefe86ec78b1112247bb8"},linearDai2:{id:"0x178e029173417b1f9c8bc16dcec6f697bc323746000000000000000000000758",address:"0x178e029173417b1f9c8bc16dcec6f697bc323746"},linearUsdt2:{id:"0xff4ce5aaab5a627bf82f4a571ab1ce94aa365ea600000000000000000000075a",address:"0xff4ce5aaab5a627bf82f4a571ab1ce94aa365ea6"},maiusd:{id:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012",address:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42",gauge:"0x72843281394e68de5d55bcf7072bb9b2ebc24150",assetOrder:["USDC","DAI","miMATIC","USDT"]},maibbausd:{id:"0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e",address:"0xb54b2125b711cd183edd3dd09433439d53961652",gauge:"0x9a105ef22a59484aa2731c357049f6a13d0891f5",assetOrder:["bb-a-USD","miMATIC"]},USDT:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",DAI:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063",USDC:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",waDAI:"0xEE029120c72b0607344f35B17cdD90025e647B00",waUSDC:"0x221836a597948Dce8F3568E044fF123108aCc42A",waUSDT:"0x19C60a251e525fa88Cd6f3768416a8024e98fC19",miMATIC:"0xa3fa99a148fa48d14ed51d610c367c61876997f1"}};var An=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];const On=new e.Interface(An),Pn=gn.toChainedReference("21"),Nn=gn.toChainedReference("22"),Bn=gn.toChainedReference("23"),kn=gn.toChainedReference("24");class vn{constructor(e){this.addresses=_n[e]}calldata(e,t,n,s,i){if(a.BigNumber.from(t).lte(0))throw new le(exports.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED);const r=this.addresses.relayer;let o=[];i&&(o=[this.buildSetRelayerApproval(i)]),o=s?[...o,this.buildWithdraw(e,t),this.buildExit(r,t),this.buildSwap(n,r),this.buildDeposit(e)]:[...o,this.buildExit(e,t),this.buildSwap(n,e)];return{to:r,data:On.encodeFunctionData("multicall",[o])}}buildExit(e,t){const{assetOrder:a}=this.addresses.staBal3,n=a.map((e=>this.addresses[e])),s=S.exitExactBPTInForTokensOut(t),i=[{index:a.indexOf("DAI"),key:Pn},{index:a.indexOf("USDC"),key:Nn},{index:a.indexOf("USDT"),key:Bn}];return gn.constructExitCall({assets:n,minAmountsOut:["0","0","0"],userData:s,toInternalBalance:!0,poolId:this.addresses.staBal3.id,poolKind:0,sender:e,recipient:this.addresses.relayer,outputReferences:i,exitPoolRequest:{}})}buildSwap(e,n){const s=[this.addresses.bbausd2.address,this.addresses.DAI,this.addresses.linearDai2.address,this.addresses.USDC,this.addresses.linearUsdc2.address,this.addresses.USDT,this.addresses.linearUsdt2.address],i=[{index:0,key:kn}],r=[{poolId:this.addresses.linearDai2.id,assetInIndex:1,assetOutIndex:2,amount:Pn.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:2,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdc2.id,assetInIndex:3,assetOutIndex:4,amount:Nn.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:4,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdt2.id,assetInIndex:5,assetOutIndex:6,amount:Bn.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:6,assetOutIndex:0,amount:"0",userData:"0x"}],o=[a.BigNumber.from(e).mul(-1).toString(),t.MaxInt256.toString(),"0",t.MaxInt256.toString(),"0",t.MaxInt256.toString(),"0"],d={sender:this.addresses.relayer,recipient:n,fromInternalBalance:!0,toInternalBalance:!1};return gn.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:r,assets:s,funds:d,limits:o,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:i})}buildWithdraw(e,t){return gn.encodeGaugeWithdraw(this.addresses.staBal3.gauge,e,this.addresses.relayer,t)}buildDeposit(e){return gn.encodeGaugeDeposit(this.addresses.bbausd2.gauge,this.addresses.relayer,e,kn.toString())}buildSetRelayerApproval(e){return gn.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}const Cn=new e.Interface(An),Rn=gn.toChainedReference("24");class Dn{constructor(e){this.addresses=_n[e]}calldata(e,t,n,s,i,r){if(a.BigNumber.from(t).lte(0))throw new le(exports.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED);const o=this.addresses.relayer;let d=[];r&&(d=[this.buildSetRelayerApproval(r)]),d=s?[...d,this.buildWithdraw(e,t),this.buildSwap(t,n,o,o,i),this.buildDeposit(e)]:[...d,this.buildSwap(t,n,e,e,i)];const p=Cn.encodeFunctionData("multicall",[d]);return{to:this.addresses.relayer,data:p}}buildSwap(e,n,s,i,r){const o=[this.addresses.bbausd2.address,this.addresses.waDAI,this.addresses.linearDai1.address,this.addresses.linearDai2.address,this.addresses.waUSDC,this.addresses.linearUsdc1.address,this.addresses.linearUsdc2.address,this.addresses.waUSDT,this.addresses.linearUsdt1.address,this.addresses.linearUsdt2.address,this.addresses.bbausd1.address],d=[{index:0,key:Rn}],p=r.reduce(((e,t)=>e.add(a.BigNumber.from(t))),t.Zero),{assetOrder:l}=this.addresses.bbausd1,u=a.BigNumber.from(e).mul(r[l.indexOf("bb-a-USDC")]).div(p).toString(),c=a.BigNumber.from(e).mul(r[l.indexOf("bb-a-DAI")]).div(p).toString(),y=a.BigNumber.from(e).sub(u).sub(c).toString(),m=[{poolId:this.addresses.bbausd1.id,assetInIndex:10,assetOutIndex:2,amount:c,userData:"0x"},{poolId:this.addresses.linearDai1.id,assetInIndex:2,assetOutIndex:1,amount:"0",userData:"0x"},{poolId:this.addresses.linearDai2.id,assetInIndex:1,assetOutIndex:3,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:3,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd1.id,assetInIndex:10,assetOutIndex:5,amount:u,userData:"0x"},{poolId:this.addresses.linearUsdc1.id,assetInIndex:5,assetOutIndex:4,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdc2.id,assetInIndex:4,assetOutIndex:6,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:6,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd1.id,assetInIndex:10,assetOutIndex:8,amount:y,userData:"0x"},{poolId:this.addresses.linearUsdt1.id,assetInIndex:8,assetOutIndex:7,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdt2.id,assetInIndex:7,assetOutIndex:9,amount:"0",userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:9,assetOutIndex:0,amount:"0",userData:"0x"}],b=[a.BigNumber.from(n).mul(-1).toString(),"0","0","0","0","0","0","0","0","0",e],h={sender:s,recipient:i,fromInternalBalance:!1,toInternalBalance:!1};return gn.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:m,assets:o,funds:h,limits:b,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:d})}buildWithdraw(e,t){return gn.encodeGaugeWithdraw(this.addresses.bbausd1.gauge,e,this.addresses.relayer,t)}buildDeposit(e){return gn.encodeGaugeDeposit(this.addresses.bbausd2.gauge,this.addresses.relayer,e,Rn.toString())}buildSetRelayerApproval(e){return gn.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}const Mn=new e.Interface(An),Fn=gn.toChainedReference("0"),Un=[];class Ln{constructor(e){this.addresses=_n[e]}calldata(e,t,a,n,s,i,r,o){if(i&&(null==t.gauge||null==a.gauge))throw new Error("Staked flow migration requires gauge addresses to be provided");const d=this.addresses.relayer;let p=[];o&&(p=[this.buildSetRelayerApproval(o)]),p=i?[...p,this.buildWithdraw(e,n,t.gauge),this.buildExit(t.id,d,n,r),this.buildSwap(s,d,a.id,a.address,r),this.buildDeposit(e,a.gauge)]:[...p,this.buildExit(t.id,e,n,r),this.buildSwap(s,e,a.id,a.address,r)];const l=Mn.encodeFunctionData("multicall",[p]);return{to:this.addresses.relayer,data:l}}buildExit(e,t,a,n){const s=S.exitExactBPTInForTokensOut(a),i=[];for(let e=0;e<n.length;e++)i[e]={index:e,key:gn.toChainedReference(`${e+1}`)},Un.push(i[e].key);const r=Array(n.length).fill("0");return gn.constructExitCall({assets:n,minAmountsOut:r,userData:s,toInternalBalance:!0,poolId:e,poolKind:0,sender:t,recipient:this.addresses.relayer,outputReferences:i,exitPoolRequest:{}})}buildSwap(e,n,s,i,r){const o=[i,...r],d=[{index:0,key:Fn}],p=[];for(let e=0;e<r.length;e++)p.push({poolId:s,assetInIndex:e+1,assetOutIndex:0,amount:Un[e].toString(),userData:"0x"});const l=[a.BigNumber.from(e).mul(-1).toString()];for(let e=0;e<r.length;e++)l.push(t.MaxInt256.toString());const u={sender:this.addresses.relayer,recipient:n,fromInternalBalance:!0,toInternalBalance:!1};return gn.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:p,assets:o,funds:u,limits:l,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:d})}buildWithdraw(e,t,a){return gn.encodeGaugeWithdraw(a,e,this.addresses.relayer,t)}buildDeposit(e,t){return gn.encodeGaugeDeposit(t,this.addresses.relayer,e,Fn.toString())}buildSetRelayerApproval(e){return gn.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}const qn=new e.Interface(An),Wn=gn.toChainedReference("20"),$n=gn.toChainedReference("21"),Gn=gn.toChainedReference("22"),Vn=gn.toChainedReference("23"),Kn=gn.toChainedReference("24");class Hn{constructor(e){this.addresses=_n[e]}calldata(e,t,n,s,i){if(a.BigNumber.from(t).lte(0))throw new le(exports.BalancerErrorCode.INPUT_ZERO_NOT_ALLOWED);const r=this.addresses.relayer;let o=[];i&&(o=[this.buildSetRelayerApproval(i)]),o=s?[...o,this.buildWithdraw(e,t),this.buildExit(r,t),this.buildSwap(r,n),this.buildDeposit(e)]:[...o,this.buildExit(e,t),this.buildSwap(e,n)];return{to:r,data:qn.encodeFunctionData("multicall",[o])}}buildExit(e,t){const{assetOrder:a}=this.addresses.maiusd,n=a.map((e=>this.addresses[e])),s=S.exitExactBPTInForTokensOut(t),i=[{index:a.indexOf("miMATIC"),key:Wn},{index:a.indexOf("DAI"),key:$n},{index:a.indexOf("USDC"),key:Gn},{index:a.indexOf("USDT"),key:Vn}],r=Array(n.length).fill("0");return gn.constructExitCall({assets:n,minAmountsOut:r,userData:s,toInternalBalance:!0,poolId:this.addresses.maiusd.id,poolKind:0,sender:e,recipient:this.addresses.relayer,outputReferences:i,exitPoolRequest:{}})}buildSwap(e,n){const s=[this.addresses.bbausd2.address,this.addresses.DAI,this.addresses.linearDai2.address,this.addresses.USDC,this.addresses.linearUsdc2.address,this.addresses.USDT,this.addresses.linearUsdt2.address,this.addresses.miMATIC,this.addresses.maibbausd.address],i=[{index:8,key:Kn}],r=[{poolId:this.addresses.linearDai2.id,assetInIndex:1,assetOutIndex:2,amount:$n.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:2,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:0,assetOutIndex:8,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdc2.id,assetInIndex:3,assetOutIndex:4,amount:Gn.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:4,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:0,assetOutIndex:8,amount:"0",userData:"0x"},{poolId:this.addresses.linearUsdt2.id,assetInIndex:5,assetOutIndex:6,amount:Vn.toString(),userData:"0x"},{poolId:this.addresses.bbausd2.id,assetInIndex:6,assetOutIndex:0,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:0,assetOutIndex:8,amount:"0",userData:"0x"},{poolId:this.addresses.maibbausd.id,assetInIndex:7,assetOutIndex:8,amount:Wn.toString(),userData:"0x"}],o=["0",t.MaxInt256.toString(),"0",t.MaxInt256.toString(),"0",t.MaxInt256.toString(),"0",t.MaxInt256.toString(),a.BigNumber.from(n).mul(-1).toString()],d={sender:this.addresses.relayer,recipient:e,fromInternalBalance:!0,toInternalBalance:!1};return gn.encodeBatchSwap({swapType:exports.SwapType.SwapExactIn,swaps:r,assets:s,funds:d,limits:o,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:i})}buildWithdraw(e,t){return gn.encodeGaugeWithdraw(this.addresses.maiusd.gauge,e,this.addresses.relayer,t)}buildDeposit(e){return gn.encodeGaugeDeposit(this.addresses.maibbausd.gauge,this.addresses.relayer,e,Kn.toString())}buildSetRelayerApproval(e){return gn.encodeSetRelayerApproval(this.addresses.relayer,!0,e)}}class jn{constructor(e){this.network=e}stabal3(t,a,n,s,i){const r=new vn(this.network).calldata(t,a,n,s,i);return{to:r.to,data:r.data,decode:(t,a)=>{let n=a?2:1;i&&(n+=1);const s=e.defaultAbiCoder.decode(["bytes[]"],t);return e.defaultAbiCoder.decode(["int256[]"],s[0][n])[0][0].abs().toString()}}}bbaUsd(t,a,n,s,i,r){const o=new Dn(this.network).calldata(t,a,n,s,i,r);return{to:o.to,data:o.data,decode:(t,a)=>{let n=a?1:0;r&&(n+=1);const s=e.defaultAbiCoder.decode(["bytes[]"],t);return e.defaultAbiCoder.decode(["int256[]"],s[0][n])[0][0].abs().toString()}}}stables(t,a,n,s,i,r,o,d){const p=new Ln(this.network).calldata(t,a,n,s,i,r,o,d);return{to:p.to,data:p.data,decode:(t,a)=>{let n=a?2:1;d&&(n+=1);const s=e.defaultAbiCoder.decode(["bytes[]"],t);return e.defaultAbiCoder.decode(["int256[]"],s[0][n])[0][0].abs().toString()}}}maiusd(t,a,n,s,i){const r=new Hn(this.network).calldata(t,a,n,s,i);return{to:r.to,data:r.data,decode:(t,a)=>{let n=a?2:1;i&&(n+=1);const s=e.defaultAbiCoder.decode(["bytes[]"],t);return e.defaultAbiCoder.decode(["int256[]"],s[0][n])[0][8].abs().toString()}}}}class Xn{constructor(e){this.network=e,this.migrations=new jn(e)}}let Zn=!1,Jn=!1;const zn={debug:1,default:2,info:2,warning:3,error:4,off:5};let Yn=zn.default,Qn=null;const es=function(){try{const e=[];if(["NFD","NFC","NFKD","NFKC"].forEach((t=>{try{if("test"!=="test".normalize(t))throw new Error("bad normalize")}catch(a){e.push(t)}})),e.length)throw new Error("missing "+e.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(e){return e.message}return null}();var ts,as;!function(e){e.DEBUG="DEBUG",e.INFO="INFO",e.WARNING="WARNING",e.ERROR="ERROR",e.OFF="OFF"}(ts||(ts={})),function(e){e.UNKNOWN_ERROR="UNKNOWN_ERROR",e.NOT_IMPLEMENTED="NOT_IMPLEMENTED",e.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",e.NETWORK_ERROR="NETWORK_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.TIMEOUT="TIMEOUT",e.BUFFER_OVERRUN="BUFFER_OVERRUN",e.NUMERIC_FAULT="NUMERIC_FAULT",e.MISSING_NEW="MISSING_NEW",e.INVALID_ARGUMENT="INVALID_ARGUMENT",e.MISSING_ARGUMENT="MISSING_ARGUMENT",e.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",e.CALL_EXCEPTION="CALL_EXCEPTION",e.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",e.NONCE_EXPIRED="NONCE_EXPIRED",e.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",e.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",e.TRANSACTION_REPLACED="TRANSACTION_REPLACED",e.ACTION_REJECTED="ACTION_REJECTED"}(as||(as={}));const ns="0123456789abcdef";class ss{constructor(e){Object.defineProperty(this,"version",{enumerable:!0,value:e,writable:!1})}_log(e,t){const a=e.toLowerCase();null==zn[a]&&this.throwArgumentError("invalid log level name","logLevel",e),Yn>zn[a]||console.log.apply(console,t)}debug(...e){this._log(ss.levels.DEBUG,e)}info(...e){this._log(ss.levels.INFO,e)}warn(...e){this._log(ss.levels.WARNING,e)}makeError(e,t,a){if(Jn)return this.makeError("censored error",t,{});t||(t=ss.errors.UNKNOWN_ERROR),a||(a={});const n=[];Object.keys(a).forEach((e=>{const t=a[e];try{if(t instanceof Uint8Array){let a="";for(let e=0;e<t.length;e++)a+=ns[t[e]>>4],a+=ns[15&t[e]];n.push(e+"=Uint8Array(0x"+a+")")}else n.push(e+"="+JSON.stringify(t))}catch(t){n.push(e+"="+JSON.stringify(a[e].toString()))}})),n.push(`code=${t}`),n.push(`version=${this.version}`);const s=e;let i="";switch(t){case as.NUMERIC_FAULT:{i="NUMERIC_FAULT";const t=e;switch(t){case"overflow":case"underflow":case"division-by-zero":i+="-"+t;break;case"negative-power":case"negative-width":i+="-unsupported";break;case"unbound-bitwise-result":i+="-unbound-result"}break}case as.CALL_EXCEPTION:case as.INSUFFICIENT_FUNDS:case as.MISSING_NEW:case as.NONCE_EXPIRED:case as.REPLACEMENT_UNDERPRICED:case as.TRANSACTION_REPLACED:case as.UNPREDICTABLE_GAS_LIMIT:i=t}i&&(e+=" [ See: https://links.ethers.org/v5-errors-"+i+" ]"),n.length&&(e+=" ("+n.join(", ")+")");const r=new Error(e);return r.reason=s,r.code=t,Object.keys(a).forEach((function(e){r[e]=a[e]})),r}throwError(e,t,a){throw this.makeError(e,t,a)}throwArgumentError(e,t,a){return this.throwError(e,ss.errors.INVALID_ARGUMENT,{argument:t,value:a})}assert(e,t,a,n){e||this.throwError(t,a,n)}assertArgument(e,t,a,n){e||this.throwArgumentError(t,a,n)}checkNormalize(e){es&&this.throwError("platform missing String.prototype.normalize",ss.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:es})}checkSafeUint53(e,t){"number"==typeof e&&(null==t&&(t="value not safe"),(e<0||e>=9007199254740991)&&this.throwError(t,ss.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:e}),e%1&&this.throwError(t,ss.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:e}))}checkArgumentCount(e,t,a){a=a?": "+a:"",e<t&&this.throwError("missing argument"+a,ss.errors.MISSING_ARGUMENT,{count:e,expectedCount:t}),e>t&&this.throwError("too many arguments"+a,ss.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:t})}checkNew(e,t){e!==Object&&null!=e||this.throwError("missing new",ss.errors.MISSING_NEW,{name:t.name})}checkAbstract(e,t){e===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",ss.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:"new"}):e!==Object&&null!=e||this.throwError("missing new",ss.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return Qn||(Qn=new ss("logger/5.7.0")),Qn}static setCensorship(e,t){if(!e&&t&&this.globalLogger().throwError("cannot permanently disable censorship",ss.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),Zn){if(!e)return;this.globalLogger().throwError("error censorship permanent",ss.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}Jn=!!e,Zn=!!t}static setLogLevel(e){const t=zn[e.toLowerCase()];null!=t?Yn=t:ss.globalLogger().warn("invalid log level - "+e)}static from(e){return new ss(e)}}ss.errors=as,ss.levels=ts;new ss("units/5.7.0");const is=["wei","kwei","mwei","gwei","szabo","finney","ether"];function rs(e,t){if("string"==typeof t){const e=is.indexOf(t);-1!==e&&(t=3*e)}return a.formatFixed(e,null!=t?t:18)}const os=e=>365*(145e3*1.189207115002721**-e/7),ds=(e,t)=>{if(e<1648465251)throw"start timestamp before emission schedule deployment";if(t<e)throw"cannot finish before starting";let a=0;const n=Math.floor((e-1648465251)/31536e3),s=Math.floor((t-1648465251)/31536e3);for(let e=n;e<=s;e++)a+=os(e);const i=1648465251+31536e3*(n+1)-e,r=t-(1648465251+31536e3*s);return a-=os(n)*(31536e3-i)/31536e3,a-=os(s)*(31536e3-r)/31536e3,a};var ps=Object.freeze({__proto__:null,INITIAL_RATE:145e3,START_EPOCH_TIME:1648465251,weekly:(e=Math.round((new Date).getTime()/1e3))=>145e3*1.189207115002721**-Math.floor((e-1648465251)/31536e3),total:os,between:ds});class ls{constructor(e,t){this.repository=e,this.tokenPrices=t}async data(e=Date.now()){const t=await this.repository.multicallData(e),a=await this.tokenPrices.find(t.balAddress);if(!a||!a.usd)throw"No BAL USD price found";return{lastWeekBalRevenue:t.balAmount*parseFloat(a.usd),lastWeekBBAUsdRevenue:t.bbAUsdAmount*t.bbAUsdPrice,veBalSupply:t.veBalSupply}}}class us{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapFee?t&&t.totalSwapFee?parseFloat(e.totalSwapFee)-parseFloat(t.totalSwapFee):parseFloat(e.totalSwapFee):0}}class cs{constructor(e,t,a,n,s,i,r,o,d){this.pools=e,this.tokenPrices=t,this.tokenMeta=a,this.tokenYields=n,this.feeCollector=s,this.yesterdaysPools=i,this.liquidityGauges=r,this.feeDistributor=o,this.protocolFees=d}async swapFees(e){const t=await this.last24hFees(e),a=await this.totalLiquidity(e);if(!t||!a)return 0;const n=t*(1-await this.protocolSwapFeePercentage())/parseFloat(a)*1e4;return Math.round(365*n)}async tokenAprs(e){if(!e.tokens)return{total:0,breakdown:{}};const t=await this.totalLiquidity(e),a=e.tokens.filter((t=>t.address!==e.address)),n=a.map((async t=>{let a=0;const n=await this.tokenYields.find(t.address);if(n)if("MetaStable"===e.poolType)a=n*(1-await this.protocolSwapFeePercentage());else if("ComposableStable"===e.poolType){a=n*(1-(await this.protocolFeesPercentage()).yieldFee)}else a=n;else{const e=await this.pools.findBy("address",t.address);if(e){a=await this.swapFees(e)+(await this.tokenAprs(e)).total}}return a})),s=a.map((async e=>{var a,n;if(e.weight)return parseFloat(e.weight);{let s=(null===(a=e.price)||void 0===a?void 0:a.usd)||(null===(n=await this.tokenPrices.find(e.address))||void 0===n?void 0:n.usd);if(!s){const t=await this.pools.findBy("address",e.address);if(!t)throw`No price for ${e.address}`;s=(await this.bptPrice(t)).toString()}return parseFloat(e.balance)*parseFloat(s)/parseFloat(t)}})),i=await Promise.all(n.map((async(e,t)=>{const[a,n]=await Promise.all([e,s[t]]);return Math.round(a*n)})));return{total:i.reduce(((e,t)=>e+t),0),breakdown:o.pickBy(o.zipObject(a.map((e=>e.address)),i),o.identity)}}async stakingApr(e,t=1){if(!this.liquidityGauges||1!=e.chainId)return 0;const a=await this.liquidityGauges.findBy("poolId",e.id);if(!a)return 0;const[n,s]=await Promise.all([this.tokenPrices.find("0xba100000625a3754423978a60c9317c58a424e3d"),this.bptPrice(e)]),i=parseFloat((null==n?void 0:n.usd)||"0"),r=Math.round((new Date).getTime()/1e3),o=ds(r,r+31536e3)*a.relativeWeight*i,d=(a.workingSupply+.4)/.4*s;return Math.round(1e4*t*o/d)}async rewardAprs(e){if(!this.liquidityGauges)return{total:0,breakdown:{}};const t=await this.liquidityGauges.findBy("poolId",e.id);if(!t||!t.rewardTokens||Object.keys(t.rewardTokens).length<1)return{total:0,breakdown:{}};const a=Object.keys(t.rewardTokens).map((async e=>{const a=t.rewardTokens[e];return this.rewardTokenApr(e,a)})),n=await this.bptPrice(e),s=t.totalSupply*n;if(0==s)return{total:0,breakdown:{}};const i={};let r=0;for await(const e of Object.values(a)){r+=e.value/s,i[e.address]=e.value}return{total:Math.round(1e4*r),breakdown:i}}async protocolApr(e){if("0x5c6ee304399dbdb9c8ef030ab642b10820db8f56000200000000000000000014"!=e.id||!this.feeDistributor)return 0;const t=new ls(this.feeDistributor,this.tokenPrices),{lastWeekBalRevenue:a,lastWeekBBAUsdRevenue:n,veBalSupply:s}=await t.data(),i=await this.bptPrice(e);if(!i)throw"bptPrice for veBal pool missing";const r=(a+n)/7;return Math.round(365*r*1e4/(i*s))}async apr(e){const[t,a,n,s,i,r]=await Promise.all([this.swapFees(e),this.tokenAprs(e),this.stakingApr(e),this.stakingApr(e,2.5),this.rewardAprs(e),this.protocolApr(e)]);return{swapFees:t,tokenAprs:a,stakingApr:{min:n,max:s},rewardAprs:i,protocolApr:r,min:t+a.total+i.total+n,max:t+a.total+i.total+r+s}}async last24hFees(e){return new us(this.yesterdaysPools).last24h(e)}async totalLiquidity(e){const t=new st(this.pools,this.tokenPrices);return await t.getLiquidity(e)}async bptPrice(e){return parseFloat(await this.totalLiquidity(e))/parseFloat(e.totalShares)}async protocolSwapFeePercentage(){const e=await this.feeCollector.find("");return e||0}async protocolFeesPercentage(){return this.protocolFees?await this.protocolFees.getFees():{swapFee:0,yieldFee:0}}async rewardTokenApr(e,t){if(t.period_finish.toNumber()<Date.now()/1e3)return{address:e,value:0};{const a=t.rate.mul(86400).mul(365),n=await this.tokenPrices.find(e);if(n&&n.usd){const t=await this.tokenMeta.find(e),s=(null==t?void 0:t.decimals)||18;return{address:e,value:parseFloat(rs(a,s))*parseFloat(n.usd)}}throw`No USD price for ${e}`}}}class ys{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapVolume?t&&t.totalSwapVolume?parseFloat(e.totalSwapVolume)-parseFloat(t.totalSwapVolume):parseFloat(e.totalSwapVolume):0}}class ms{constructor(e,t){this.networkConfig=e,this.repositories=t,this.aprService=new cs(this.repositories.pools,this.repositories.tokenPrices,this.repositories.tokenMeta,this.repositories.tokenYields,this.repositories.feeCollector,this.repositories.yesterdaysPools,this.repositories.liquidityGauges,this.repositories.feeDistributor),this.liquidityService=new st(t.pools,t.tokenPrices),this.feesService=new us(t.yesterdaysPools),this.volumeService=new ys(t.yesterdaysPools)}dataSource(){return this.repositories.pools}async apr(e){return this.aprService.apr(e)}async liquidity(e){return this.liquidityService.getLiquidity(e)}async fees(e){return this.feesService.last24h(e)}async volume(e){return this.volumeService.last24h(e)}static wrap(e,t){const a=nt.from(e.poolType),n=t.addresses.tokens.wrappedNativeAsset.toLowerCase();return{...e,buildJoin:(t,s,i,r)=>a.join.buildJoin({joiner:t,pool:e,tokensIn:s,amountsIn:i,slippage:r,wrappedNativeAsset:n}),calcPriceImpact:async(t,n)=>a.priceImpactCalculator.calcPriceImpact(e,t,n),buildExitExactBPTIn:(t,s,i,r=!1,o)=>{if(a.exit.buildExitExactBPTIn)return a.exit.buildExitExactBPTIn({exiter:t,pool:e,bptIn:s,slippage:i,shouldUnwrapNativeAsset:r,wrappedNativeAsset:n,singleTokenMaxOut:o});throw"ExitExactBPTIn not supported"},buildExitExactTokensOut:(t,s,i,r)=>a.exit.buildExitExactTokensOut({exiter:t,pool:e,tokensOut:s,amountsOut:i,slippage:r,wrappedNativeAsset:n}),calcSpotPrice:(t,n)=>a.spotPriceCalculator.calcPoolSpotPrice(t,n,e)}}async find(e){const t=await this.dataSource().find(e);if(t)return ms.wrap(t,this.networkConfig)}async findBy(e,t){if("id"==e)return this.find(t);if("address"==e){const e=await this.dataSource().findBy("address",t);if(!e)return;return ms.wrap(e,this.networkConfig)}throw`search by ${e} not implemented`}async all(){const e=await this.dataSource().all();return e?e.map((e=>ms.wrap(e,this.networkConfig))):[]}async where(e){const t=await this.dataSource().where(e);return t?t.map((e=>ms.wrap(e,this.networkConfig))):[]}}const bs=new e.Interface(["function gauge_relative_weight(address gauge, uint timestamp) view returns (uint)"]);class hs{constructor(e,t,a){this.gaugeControllerAddress=t,this.multicall=Ga(e,a)}async getRelativeWeights(e,t){const a=e.map((e=>[this.gaugeControllerAddress,bs.encodeFunctionData("gauge_relative_weight",[n.getAddress(e),t||Math.floor(Date.now()/1e3)])])),[,s]=await this.multicall.aggregate(a);return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(rs(s[a],18))),e)),{})}}const fs=new e.Interface(["function totalSupply() view returns (uint)","function working_supply() view returns (uint)","function reward_count() view returns (uint)","function reward_tokens(uint rewardIndex) view returns (address)","function reward_data(address rewardToken) view returns (tuple(address token, address distributor, uint period_finish, uint rate, uint last_update, uint integral) data)"]);class Ts{constructor(e,t,a){this.chainId=t,this.multicall=Ga(e,a)}async getTotalSupplies(e){const t=e.map((e=>[e,fs.encodeFunctionData("totalSupply",[])])),[,a]=await this.multicall.aggregate(t),n=a.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(rs(n[a],18))),e)),{})}async getWorkingSupplies(e){const t=e.map((e=>[e,fs.encodeFunctionData("working_supply",[])])),[,a]=await this.multicall.aggregate(t),n=a.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,a)=>(e[t]||(e[t]=parseFloat(rs(n[a],18))),e)),{})}async getRewardCounts(e){let t;if(1==this.chainId){const a=e.map((e=>[e,fs.encodeFunctionData("reward_count",[])])),[,n]=await this.multicall.aggregate(a),s=n.map((e=>"0x"==e?"0x0":e));t=e.reduce(((e,t,a)=>(e[t]||(e[t]=parseInt(s[a])),e)),{})}else t=e.reduce(((e,t)=>(e[t]||(e[t]=1),e)),{});return t}async getRewardTokens(e,t){const a=t||await this.getRewardCounts(e),n=e.filter((e=>a[e]>0)),s=[0],i=n.map(((e,t)=>{const n=[];for(let t=0;t<a[e];t++)n.push([e,fs.encodeFunctionData("reward_tokens",[t])]);return s[t+1]=s[t]+a[e],n})).flat(),[,r]=await this.multicall.aggregate(i);return n.reduce(((e,t,a)=>{const n=s[a],i=s[a+1],o=[];for(let e=n;e<i;e++)o.push(fs.decodeFunctionResult("reward_tokens",r[e])[0]);return e[t]||(e[t]=o),e}),{})}async getRewardData(e,t){const a=t||await this.getRewardTokens(e),n=[0],s=Object.keys(a).map(((e,t)=>{const s=[];for(let t=0;t<a[e].length;t++)s.push([e,fs.encodeFunctionData("reward_data",[a[e][t]])]);return n[t+1]=n[t]+a[e].length,s})).flat(),[,i]=await this.multicall.aggregate(s),r=i.map((e=>fs.decodeFunctionResult("reward_data",e)[0]));return Object.keys(a).reduce(((e,t,s)=>{const i=n[s],o=a[t].reduce(((e,t,a)=>(e[t]||(e[t]=r[i+a]),e)),{});return e[t]||(e[t]=o),e}),{})}}class Is{constructor(e){this.gauges=[],this.client=Wa(e)}async fetch(){const e=(await this.client.Pools({where:{preferentialGauge_not:null}})).pools.map((e=>e.preferentialGauge));return this.gauges=e,this.gauges}async find(e){return 0==this.gauges.length&&await this.fetch(),this.gauges.find((t=>t.id==e))}async findBy(e,t){if(0==this.gauges.length&&await this.fetch(),"id"==e)return this.find(t);if("poolId"==e)return this.gauges.find((e=>e.poolId==t));if("poolAddress"==e)return this.gauges.find((e=>e.poolAddress==t));throw`search by ${e} not implemented`}}class gs{constructor(e,t,a,n,s){this.chainId=n,this.workingSupplies={},this.relativeWeights={},this.rewardData={},a&&(this.gaugeController=new hs(t,a,s)),this.multicall=new Ts(t,n,s),this.subgraph=new Is(e)}async fetch(){const e=await this.subgraph.fetch(),t=e.map((e=>e.id));return 1==this.chainId&&(this.workingSupplies=await this.multicall.getWorkingSupplies(t)),this.gaugeController&&(this.relativeWeights=await this.gaugeController.getRelativeWeights(t)),this.rewardData=await this.multicall.getRewardData(t),e.map(this.compose.bind(this))}async find(e){return this.gauges||(this.gauges=this.fetch()),(await this.gauges).find((t=>t.id==e))}async findBy(e,t){let a;if(this.gauges||(this.gauges=this.fetch()),"id"==e)return this.find(t);if("address"==e)return this.find(t);if("poolId"==e)a=(await this.gauges).find((e=>e.poolId==t));else{if("poolAddress"!=e)throw`search by ${e} not implemented`;a=(await this.gauges).find((e=>e.poolAddress==t))}return a}compose(e){return{id:e.id,address:e.id,name:e.symbol,poolId:e.poolId,poolAddress:e.poolAddress,totalSupply:parseFloat(e.totalSupply),workingSupply:this.workingSupplies[e.id],relativeWeight:this.relativeWeights[e.id],rewardTokens:this.rewardData[e.id]}}}class ws{constructor(e,t){this.url=e,this.apiKey=t}async get(e){try{const t=this.toPayload(e),{data:a}=await x.default.post(this.url,t,{headers:{"x-api-key":this.apiKey}});if(a.errors)throw new Error(a.errors.map((e=>e.message)).join(","));return a.data}catch(e){throw console.error(e),e}return[]}toPayload(e){return JSON.stringify({query:m.jsonToGraphQLQuery({query:e})})}}class Es{constructor(e){var t,a;this.skip=0,this.client=qa(e.url),this.blockHeight=e.blockHeight,this.chainId=e.chainId;const n={orderBy:Ft.TotalLiquidity,orderDirection:vt.Desc,where:{swapEnabled:{eq:!0},totalShares:{gt:0}}},s=(null===(t=e.query)||void 0===t?void 0:t.args)||n,i=(null===(a=e.query)||void 0===a?void 0:a.attrs)||{};this.query={args:s,attrs:i}}async fetchDefault(){const{pool0:e,pool1000:t,pool2000:a}=await this.client.AllPools({where:{swapEnabled:!0,totalShares_gt:"0"},orderBy:Ft.TotalLiquidity,orderDirection:vt.Desc,block:this.blockHeight?{number:await this.blockHeight()}:void 0});return[...e,...t,...a].map(this.mapType.bind(this))}async fetch(e){(null==e?void 0:e.skip)&&(this.query.args.skip=e.skip),this.blockHeight&&(this.query.args.block={number:await this.blockHeight()}),this.query.args.first=(null==e?void 0:e.first)||1e3;const t=new Z(this.query.args).format(new X),{pools:a}=await this.client.Pools(t);return this.skip=((null==e?void 0:e.skip)||0)+a.length,a.map(this.mapType.bind(this))}async find(e){return await this.findBy("id",e)}async findBy(e,t){return this.pools||(this.pools=this.fetchDefault()),(await this.pools).find((a=>a[e]==t))}async all(){return this.pools||(this.pools=this.fetchDefault()),this.pools}async where(e){return this.pools||(this.pools=this.fetchDefault()),(await this.pools).filter(e)}mapType(e){var t,a,n,s,i;return{id:e.id,name:e.name||"",address:e.address,chainId:this.chainId,poolType:e.poolType,swapFee:e.swapFee,swapEnabled:e.swapEnabled,amp:null!==(t=e.amp)&&void 0!==t?t:void 0,owner:null!==(a=e.owner)&&void 0!==a?a:void 0,factory:null!==(n=e.factory)&&void 0!==n?n:void 0,tokens:e.tokens||[],tokensList:e.tokensList,tokenAddresses:(e.tokens||[]).map((e=>e.address)),totalLiquidity:e.totalLiquidity,totalShares:e.totalShares,totalSwapFee:e.totalSwapFee,totalSwapVolume:e.totalSwapVolume,createTime:e.createTime,mainIndex:null!==(s=e.mainIndex)&&void 0!==s?s:void 0,wrappedIndex:null!==(i=e.wrappedIndex)&&void 0!==i?i:void 0,totalWeight:e.totalWeight||"1"}}}class xs{constructor(e){this.tokens=e}async find(e){return this.tokens.find((t=>t.address.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.tokens.find((a=>a[e]===t))}}const Ss={waUSDT:"0xf8fd466f12e236f4c96f7cce6c79eadb819abf58",waUSDC:"0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de",waDAI:"0x02d60b84491589974263d922d9cc7a3152618ef6"},_s={[Ss.waUSDT]:{aToken:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",underlying:"0xdac17f958d2ee523a2206206994597c13d831ec7"},[Ss.waUSDC]:{aToken:"0xbcca60bb61934080951369a648fb03df4f96263c",underlying:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"},[Ss.waDAI]:{aToken:"0x028171bca77440897b824ca71d1c56cac55b68a3",underlying:"0x6b175474e89094c44da98b954eedeac495271d0f"}},As=Object.values(_s).map((e=>e.aToken)),Os=Object.values(_s).map((e=>e.underlying)),Ps=Object.fromEntries(Object.keys(_s).map((e=>[_s[e].underlying,e]))),Ns=async()=>{try{const e={operationName:"getReserves",query:"\n  query getReserves($aTokens: [String!], $underlyingAssets: [Bytes!]) {\n    reserves(\n      where: {\n        aToken_in: $aTokens\n        underlyingAsset_in: $underlyingAssets\n        isActive: true\n      }\n    ) {\n      underlyingAsset\n      liquidityRate\n    }\n  }\n",variables:{aTokens:As,underlyingAssets:Os}},t=await x.default.post("https://api.thegraph.com/subgraphs/name/aave/protocol-v2",e),{data:{reserves:n}}=t.data,s=n.map((e=>[Ps[e.underlyingAsset],Math.round(1e4*parseFloat(rs(a.BigNumber.from(e.liquidityRate),27)))]));return Object.fromEntries(s)}catch(e){return Object.fromEntries(Object.keys(_s).map((e=>[e,0])))}};class Bs{constructor(e,t=1){this.prices={},this.requestedAddresses=new Set,this.debounceWait=200,this.promisedCalls=[],this.promisedCount=0,this.debounceCancel=()=>{},this.baseTokenAddresses=e.map((e=>e.toLowerCase())).map((e=>ks(e))),this.urlBase=`https://api.coingecko.com/api/v3/simple/token_price/${this.platform(t)}?vs_currencies=usd,eth`}fetch(e,{signal:t}={}){return e.length,x.default.get(this.url(e),{signal:t}).then((({data:e})=>e)).finally((()=>{e.length}))}debouncedFetch(){this.promisedCalls[this.promisedCount]||(this.promisedCalls[this.promisedCount]=(()=>{let e=()=>{},t=()=>{};return{promise:new Promise(((a,n)=>{[e,t]=[a,n]})),reject:t,resolve:e}})());const{promise:e,resolve:t,reject:a}=this.promisedCalls[this.promisedCount];return this.timeout&&clearTimeout(this.timeout),this.timeout=setTimeout((()=>{this.promisedCount++,this.fetch([...this.requestedAddresses]).then((e=>{t(e),this.debounceCancel=()=>{}})).catch((e=>{console.error(e)}))}),this.debounceWait),this.debounceCancel=()=>{this.timeout&&clearTimeout(this.timeout),a("Cancelled"),delete this.promisedCalls[this.promisedCount]},e}async find(e){const t=e.toLowerCase(),a=ks(t);if(!this.prices[a])try{let e=!1;0===Object.keys(this.prices).length&&(this.baseTokenAddresses.forEach(this.requestedAddresses.add.bind(this.requestedAddresses)),e=!0),this.requestedAddresses.add(a);const t=await this.debouncedFetch();this.prices[a]=t[a],this.requestedAddresses.delete(a),e&&this.baseTokenAddresses.forEach((e=>{this.prices[e]=t[e],this.requestedAddresses.delete(e)}))}catch(e){console.error(e)}return this.prices[a]}async findBy(e,t){if("address"==e)return this.find(t)}platform(e){switch(e){case 1:case 42:case 31337:return"ethereum";case 137:return"polygon-pos";case 42161:return"arbitrum-one"}return"2"}url(e){return`${this.urlBase}&contract_addresses=${e.join(",")}`}}const ks=e=>{const t=e.toLocaleLowerCase();return Object.keys(_s).includes(t)?_s[t].aToken:t},vs=new e.Interface(["function getTokensDistributedInWeek(address token, uint timestamp) view returns (uint)"]),Cs=new e.Interface(["function totalSupply() view returns (uint)"]),Rs=new e.Interface(["function getRate() view returns (uint)"]);class Ds{constructor(e,t,a,n,s,i){this.feeDistributorAddress=t,this.balAddress=a,this.veBalAddress=n,this.bbAUsdAddress=s,this.multicall=Ga(e,i)}async fetch(e){const t=this.getPreviousWeek(e),a=[[this.feeDistributorAddress,vs.encodeFunctionData("getTokensDistributedInWeek",[n.getAddress(this.balAddress),t])],[this.feeDistributorAddress,vs.encodeFunctionData("getTokensDistributedInWeek",[n.getAddress(this.bbAUsdAddress),t])],[this.veBalAddress,Cs.encodeFunctionData("totalSupply",[])],[this.bbAUsdAddress,Rs.encodeFunctionData("getRate",[])]],[,s]=await this.multicall.aggregate(a);return{balAmount:parseFloat(rs(s[0],18)),bbAUsdAmount:parseFloat(rs(s[1],18)),veBalSupply:parseFloat(rs(s[2],18)),bbAUsdPrice:parseFloat(rs(s[3],18)),balAddress:this.balAddress}}async multicallData(e){return this.data||(this.data=await this.fetch(e)),this.data}getPreviousWeek(e){const t=new Date(e);t.setUTCHours(0),t.setUTCMinutes(0),t.setUTCSeconds(0),t.setUTCMilliseconds(0);let a=t.getUTCDay()-4;return a<0&&(a+=7),a+=7,Math.floor(t.getTime()/1e3)-86400*a}}const Ms=new e.Interface(["function getProtocolFeesCollector() view returns (address)"]),Fs=new e.Interface(["function getSwapFeePercentage() view returns (uint)"]);let Us;class Ls{constructor(e,t){this.provider=t,this.vault=new r.Contract(e,Ms,this.provider)}async fetch(){const e=await this.vault.getProtocolFeesCollector(),t=new r.Contract(e,Fs,this.provider),a=await t.getSwapFeePercentage();return parseFloat(rs(a,18))}async find(){return Us||(Us=this.fetch()),this.swapFeePercentage=await Us,this.swapFeePercentage}async findBy(){return this.find()}}const qs=new e.Interface(["function getSwapFeePercentage() view returns (uint)"]);let Ws;class $s{constructor(e,t,a){this.protocolFeePercentagesProviderAddress=t,this.multicall=Ga(e,a)}async fetch(){const e=[[this.protocolFeePercentagesProviderAddress,qs.encodeFunctionData("getFeeTypePercentage",[0])],[this.protocolFeePercentagesProviderAddress,qs.encodeFunctionData("getFeeTypePercentage",[2])]],[,t]=await this.multicall.aggregate(e);return{swapFee:parseFloat(rs(t[0],18)),yieldFee:parseFloat(rs(t[2],18))}}async getFees(){return Ws||(Ws=this.fetch()),this.protocolFees=await Ws,this.protocolFees}}const Gs={stETH:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"},Vs=async()=>{let e=0;try{const t=await x.default.get("https://stake.lido.fi/api/apr"),{data:a}=t.data;e=Math.round(100*parseFloat(a.steth))}catch(e){console.error("Failed to fetch stETH APR:",e)}return{[Gs.stETH]:e}},Ks={usdcUSDplus:"0x1aafc31091d93c3ff003cff5d2d8f7ba2e728425",usdcUSDplus2:"0x6933ec1ca55c06a894107860c92acdfd2dd8512f"},Hs=async()=>{let e=0;try{const{data:t}=await x.default.get("https://app.overnight.fi/api/balancer/week/apr");e=Math.round(1e4*parseFloat(t)/100)}catch(e){console.error("Failed to fetch USD+ APR:",e)}return Object.fromEntries(Object.values(Ks).map((t=>[t,e])))},js=Object.fromEntries([...Object.values(Gs).map((e=>[e,Vs])),...Object.values(Ss).map((e=>[e,Ns])),...Object.values(Ks).map((e=>[e,Hs]))]);class Xs{constructor(e=js){this.sources=e,this.yields={}}async fetch(e){const t=await this.sources[e]();this.yields={...this.yields,...t}}async find(e){const t=e.toLocaleLowerCase();return Object.keys(this.sources).includes(t)&&!Object.keys(this.yields).includes(t)&&await this.fetch(e),this.yields[t]}async findBy(e,t){if("address"==e)return this.find(t)}}const Zs=e=>`{\n  blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: ${e} }) {\n    number\n  }\n}`,Js=async(e,t)=>{const a={query:Zs(t)},n=await x.default.post(e,a),{data:{blocks:s}}=n.data;return parseInt(s[0].number)};class zs{constructor(e){this.endpoint=e,this.blocks={}}async find(e){if("dayAgo"==e){const e=""+(Math.floor(Date.now()/1e3)-86400);return this.blocks[e]||(this.blocks={...this.blocks,[e]:Js(this.endpoint,e)}),this.blocks[e]}}async findBy(e="",t=""){}}var Ys=[{chainId:1,address:"0x8888801af4d980682e47f1a9036e589479e835c5",symbol:"mph"},{chainId:1,address:"0x27054b13b1b798b345b591a4d22e6562d47ea75a",symbol:"ast"},{chainId:1,address:"0x3301ee63fb29f863f2333bd4466acb46cd8323e6",symbol:"akita"},{chainId:1,address:"0x616e8bfa43f920657b3497dbf40d6b1a02d4608d",symbol:"aurabal"},{chainId:1,address:"0xc0c293ce456ff0ed870add98a0828dd4d2903dbf",symbol:"aura"},{chainId:1,address:"0x3472a5a71965499acd81997a54bba8d852c6e53d",symbol:"badger"},{chainId:1,address:"0xba100000625a3754423978a60c9317c58a424e3d",symbol:"bal"},{chainId:1,address:"0x804cdb9116a10bb78768d3252355a1b18067bf8f",symbol:"bb-a-dai"},{chainId:1,address:"0x9210f1204b5a24742eba12f710636d76240df3d0",symbol:"bb-a-usdc"},{chainId:1,address:"0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c",symbol:"bb-a-usdt"},{chainId:1,address:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2",symbol:"bb-a-usd"},{chainId:1,address:"0x2d94aa3e47d9d5024503ca8491fce9a2fb4da198",symbol:"bank"},{chainId:1,address:"0x0d8775f648430679a709e98d2b0cb6250d2887ef",symbol:"bat"},{chainId:1,address:"0xf17e65822b568b3903685a7c9f496cf7656cc6c2",symbol:"bico"},{chainId:1,address:"0x799ebfabe77a6e34311eeee9825190b9ece32824",symbol:"btrst"},{chainId:1,address:"0x514910771af9ca656af840dff83e8264ecf986ca",symbol:"link"},{chainId:1,address:"0x3506424f91fd33084466f402d5d97f05f8e3b4af",symbol:"chz"},{chainId:1,address:"0x41e5560054824ea6b0732e656e3ad64e20e94e45",symbol:"cvc"},{chainId:1,address:"0xc00e94cb662c3520282e6f5717214004a7f26888",symbol:"comp"},{chainId:1,address:"0xdef1ca1fb7fbcdc777520aa7f396b4e015f497ab",symbol:"cow"},{chainId:1,address:"0xd533a949740bb3306d119cc777fa900ba034cd52",symbol:"crv"},{chainId:1,address:"0x6b175474e89094c44da98b954eedeac495271d0f",symbol:"dai"},{chainId:1,address:"0xf2051511b9b121394fa75b8f7d4e7424337af687",symbol:"haus"},{chainId:1,address:"0x888888435fde8e7d4c54cab67f206e4199454c60",symbol:"dfx"},{chainId:1,address:"0x798d1be841a82a273720ce31c822c61a67a601c3",symbol:"digg"},{chainId:1,address:"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c",symbol:"enj"},{chainId:1,address:"0xc18360217d8f7ab5e7c516566761ea12ce7f9d72",symbol:"ens"},{chainId:1,address:"0x4e15361fd6b4bb609fa63c81a2be19d873717870",symbol:"ftm"},{chainId:1,address:"0x956f47f50a910163d8bf957cf5846d573e7f87ca",symbol:"fei"},{chainId:1,address:"0xed1480d12be41d92f36f5f7bdd88212e381a3677",symbol:"fdt"},{chainId:1,address:"0x586aa273f262909eef8fa02d90ab65f5015e0516",symbol:"fiat"},{chainId:1,address:"0xde30da39c46104798bb5aa3fe8b9e0e1f348163f",symbol:"gtc"},{chainId:1,address:"0x900db999074d9277c5da2a43f252d74366230da0",symbol:"giv"},{chainId:1,address:"0x6810e776880c02933d47db1b9fc05908e5386b96",symbol:"gno"},{chainId:1,address:"0xba485b556399123261a5f9c95d413b4f93107407",symbol:"graviaura"},{chainId:1,address:"0x3ec8798b81485a254928b70cda1cf0a2bb0b74d7",symbol:"gro"},{chainId:1,address:"0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f",symbol:"snx"},{chainId:1,address:"0x5a98fcbea516cf06857215779fd812ca3bef1b32",symbol:"ldo"},{chainId:1,address:"0x6dea81c8171d0ba574754ef6f8b412f2ed88c54d",symbol:"lqty"},{chainId:1,address:"0x5f98805a4e8be255a32880fdec7f6728c6568ba0",symbol:"lusd"},{chainId:1,address:"0x965d79f1a1016b574a62986e13ca8ab04dfdd15c",symbol:"m2"},{chainId:1,address:"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",symbol:"mkr"},{chainId:1,address:"0xd084944d3c05cd115c09d072b9f44ba3e0e45921",symbol:"fold"},{chainId:1,address:"0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",symbol:"matic"},{chainId:1,address:"0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2",symbol:"mta"},{chainId:1,address:"0x4b13006980acb09645131b91d259eaa111eaf5ba",symbol:"myc"},{chainId:1,address:"0x333a4823466879eef910a04d473505da62142069",symbol:"nation"},{chainId:1,address:"0xcfeaead4947f0705a14ec42ac3d44129e1ef3ed5",symbol:"note"},{chainId:1,address:"0x967da4048cd07ab37855c090aaf366e4ce1b9f48",symbol:"ocean"},{chainId:1,address:"0x64aa3364f17a4d01c6f1751fd97c2bd3d7e7f1d5",symbol:"ohm"},{chainId:1,address:"0xab846fb6c81370327e784ae7cbb6d6a6af6ff4bf",symbol:"pal"},{chainId:1,address:"0xcafe001067cdef266afb7eb5a286dcfd277f3de5",symbol:"psp"},{chainId:1,address:"0x68037790a0229e9ce6eaa8a99ea92964106c4703",symbol:"par"},{chainId:1,address:"0x45804880de22913dafe09f4980848ece6ecbaf78",symbol:"paxg"},{chainId:1,address:"0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed",symbol:"pnt"},{chainId:1,address:"0x9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",symbol:"poly"},{chainId:1,address:"0x43d4a3cd90ddd2f8f4f693170c9c8098163502ad",symbol:"d2d"},{chainId:1,address:"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d",symbol:"renbtc"},{chainId:1,address:"0x408e41876cccdc0f92210600ef50372656052a38",symbol:"ren"},{chainId:1,address:"0xfb5453340c03db5ade474b27e68b6a9c6b2823eb",symbol:"robot"},{chainId:1,address:"0xd33526068d116ce69f19a9ee46f0bd304f21a51f",symbol:"rpl"},{chainId:1,address:"0xae78736cd615f374d3085123a210448e74fc6393",symbol:"reth"},{chainId:1,address:"0xfe18be6b3bd88a2d2a7f928d00292e7a9963cfc6",symbol:"sbtc"},{chainId:1,address:"0x476c5e26a75bd202a9683ffd34359c0cc15be0ff",symbol:"srm"},{chainId:1,address:"0x35e78b3982e87ecfd5b3f3265b601c046cdbe232",symbol:"xai"},{chainId:1,address:"0x3affcca64c2a6f4e3b6bd9c64cd2c969efd1ecbe",symbol:"dsla"},{chainId:1,address:"0xf24d8651578a55b0c119b9910759a351a3458895",symbol:"sdbal"},{chainId:1,address:"0x11c1a6b3ed6bb362954b29d3183cfa97a0c806aa",symbol:"str"},{chainId:1,address:"0x8f693ca8d21b157107184d29d398a8d082b38b76",symbol:"data"},{chainId:1,address:"0x470ebf5f030ed85fc1ed4c2d36b9dd02e77cf1b7",symbol:"temple"},{chainId:1,address:"0xa36fdbbae3c9d55a1d67ee5821d53b50b63a1ab9",symbol:"temp"},{chainId:1,address:"0xdac17f958d2ee523a2206206994597c13d831ec7",symbol:"usdt"},{chainId:1,address:"0x9c4a4204b79dd291d6b6571c5be8bbcd0622f050",symbol:"tcr"},{chainId:1,address:"0x226f7b842e0f0120b7e194d05432b3fd14773a9d",symbol:"unn"},{chainId:1,address:"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",symbol:"uni"},{chainId:1,address:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",symbol:"usdc"},{chainId:1,address:"0x81f8f0bb1cb2a06649e51913a151f0e7ef6fa321",symbol:"vita"},{chainId:1,address:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",symbol:"weth"},{chainId:1,address:"0xedb171c18ce90b633db442f2a6f72874093b49ef",symbol:"wampl"},{chainId:1,address:"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",symbol:"wbtc"},{chainId:1,address:"0xf203ca1769ca8e9e8fe1da9d147db68b6c919817",symbol:"wncg"},{chainId:1,address:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",symbol:"wsteth"},{chainId:1,address:"0x79c71d3436f39ce382d0f58f1b011d88100b9d91",symbol:"xns"},{chainId:1,address:"0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e",symbol:"yfi"},{chainId:1,address:"0xbcca60bb61934080951369a648fb03df4f96263c",symbol:"ausdc"},{chainId:1,address:"0x028171bca77440897b824ca71d1c56cac55b68a3",symbol:"adai"},{chainId:1,address:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",symbol:"ausdt"},{chainId:137,address:"0x9c2c5fd7b07e95ee044ddeba0e97a665f142394f",symbol:"1inch"},{chainId:137,address:"0xd6df932a45c0f255f85145f286ea0b292b21c90b",symbol:"aave"},{chainId:137,address:"0xc3fdbadc7c795ef1d6ba111e06ff8f16a20ea539",symbol:"addy"},{chainId:137,address:"0xf84bd51eab957c2e7b7d646a3427c5a50848281d",symbol:"agar"},{chainId:137,address:"0x033d942a6b495c4071083f4cde1f17e986fe856c",symbol:"aga"},{chainId:137,address:"0x0e9b89007eee9c958c0eda24ef70723c2c93dd58",symbol:"amaticc"},{chainId:137,address:"0x034b2090b579228482520c589dbd397c53fc51cc",symbol:"vision"},{chainId:137,address:"0x2c89bbc92bd86f8075d1decc58c7f4e0107f286b",symbol:"avax"},{chainId:137,address:"0x49690541e3f6e933a9aa3cffee6010a7bb5b72d7",symbol:"axiav3"},{chainId:137,address:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",symbol:"bal"},{chainId:137,address:"0xdb7cb471dd0b49b29cab4a1c14d070f27216a0ab",symbol:"bank"},{chainId:137,address:"0xfbdd194376de19a88118e84e279b977f165d01b8",symbol:"bifi"},{chainId:137,address:"0xd6ca869a4ec9ed2c7e618062cdc45306d8dbbc14",symbol:"btc2x-fli-p"},{chainId:137,address:"0x53e0bca35ec356bd5dddfebbd1fc0fd03fabad39",symbol:"link"},{chainId:137,address:"0x172370d5cd63279efa6d502dab29171933a610af",symbol:"crv"},{chainId:137,address:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063",symbol:"dai"},{chainId:137,address:"0x1d607faa0a51518a7728580c238d912747e71f7a",symbol:"data"},{chainId:137,address:"0x85955046df4668e1dd369d2de9f3aeb98dd2a369",symbol:"dpi"},{chainId:137,address:"0xe7804d91dfcde7f776c90043e03eaa6df87e6395",symbol:"dfx"},{chainId:137,address:"0xf28164a485b0b2c90639e47b0f377b4a438a16b1",symbol:"dquick"},{chainId:137,address:"0x45c32fa6df82ead1e2ef74d17b76547eddfaff89",symbol:"frax"},{chainId:137,address:"0x50b728d8d964fd00c2d0aad81718b71311fef68a",symbol:"snx"},{chainId:137,address:"0x72928d5436ff65e57f72d5566dcd3baedc649a88",symbol:"hdao"},{chainId:137,address:"0x3ad707da309f3845cd602059901e39c4dcd66473",symbol:"eth2x-fli-p"},{chainId:137,address:"0x4f025829c4b13df652f38abd2ab901185ff1e609",symbol:"ieth-fli-p"},{chainId:137,address:"0x340f412860da7b7823df372a2b59ff78b7ae6abc",symbol:"imatic-fli-p"},{chainId:137,address:"0xf287d97b6345bad3d88856b26fb7c0ab3f2c7976",symbol:"matic2x-fli-p"},{chainId:137,address:"0x130ce4e4f76c2265f94a961d70618562de0bb8d2",symbol:"ibtc-fli-p"},{chainId:137,address:"0x596ebe76e2db4470966ea395b0d063ac6197a8c5",symbol:"jrt"},{chainId:137,address:"0x3a58a54c066fdc0f2d55fc9c89f0415c92ebf3c4",symbol:"stmatic"},{chainId:137,address:"0xf501dd45a1198c2e1b5aef5314a68b9006d842e0",symbol:"mta"},{chainId:137,address:"0xeaecc18198a475c921b24b8a6c1c1f0f5f3f7ea0",symbol:"seed"},{chainId:137,address:"0xfe712251173a2cd5f5be2b46bb528328ea3565e1",symbol:"mvi"},{chainId:137,address:"0xa3fa99a148fa48d14ed51d610c367c61876997f1",symbol:"mimatic"},{chainId:137,address:"0xa486c6bc102f409180ccb8a94ba045d39f8fc7cb",symbol:"nex"},{chainId:137,address:"0xe2aa7db6da1dae97c5f5c6914d285fbfcc32a128",symbol:"par"},{chainId:137,address:"0x580a84c73811e1839f75d86d75d88cca0c241ff4",symbol:"qi"},{chainId:137,address:"0x831753dd7087cac61ab5644b308642cc1c33dc13",symbol:"quick"},{chainId:137,address:"0xb5c064f955d8e7f38fe0460c556a72987494ee17",symbol:"quick"},{chainId:137,address:"0x00e5646f60ac6fb446f621d146b6e1886f002905",symbol:"rai"},{chainId:137,address:"0x431cd3c9ac9fc73644bf68bf5691f4b83f9e104f",symbol:"rbw"},{chainId:137,address:"0xdbf31df14b66535af65aac99c32e9ea844e14501",symbol:"renbtc"},{chainId:137,address:"0x501ace9c35e60f03a2af4d484f49f9b1efde9f40",symbol:"solace"},{chainId:137,address:"0xfa68fb4628dff1028cfec22b4162fccd0d45efb6",symbol:"maticx"},{chainId:137,address:"0x0b3f868e0be5597d5db7feb59e1cadbb0fdda50a",symbol:"sushi"},{chainId:137,address:"0xdf7837de1f2fa4631d716cf2502f8b230f1dcc32",symbol:"tel"},{chainId:137,address:"0xe6469ba6d2fd6130788e0ea9c0a0515900563b59",symbol:"ust"},{chainId:137,address:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",symbol:"usdt"},{chainId:137,address:"0x5fe2b58c013d7601147dcdd68c143a77499f5531",symbol:"grt"},{chainId:137,address:"0xbbba073c31bf03b8acf7c28ef0738decf3695683",symbol:"sand"},{chainId:137,address:"0x2934b36ca9a4b31e633c5be670c8c8b28b6aa015",symbol:"thx"},{chainId:137,address:"0x2f800db0fdb5223b3c3f354886d907a671414a7f",symbol:"bct"},{chainId:137,address:"0x2e1ad108ff1d8c782fcbbb89aad783ac49586756",symbol:"tusd"},{chainId:137,address:"0x3809dcdd5dde24b37abe64a5a339784c3323c44f",symbol:"swap"},{chainId:137,address:"0x7fbc10850cae055b27039af31bd258430e714c62",symbol:"ubt"},{chainId:137,address:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",symbol:"usdc"},{chainId:137,address:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",symbol:"weth"},{chainId:137,address:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",symbol:"wmatic"},{chainId:137,address:"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6",symbol:"wbtc"},{chainId:137,address:"0x24834bbec7e39ef42f4a75eaf8e5b6486d3f0e57",symbol:"lunc"},{chainId:137,address:"0xf153eff70dc0bf3b085134928daeea248d9b30d0",symbol:"xmark"},{chainId:42161,address:"0x9f20de1fc9b161b34089cbeae888168b44b03461",symbol:"arbis"},{chainId:42161,address:"0x040d1edc9569d4bab2d15287dc5a4f10f56a56b8",symbol:"bal"},{chainId:42161,address:"0x031d35296154279dc1984dcd93e392b1f946737b",symbol:"cap"},{chainId:42161,address:"0xf97f4df75117a78c1a5a0dbb814af92458539fb4",symbol:"link"},{chainId:42161,address:"0x354a6da3fcde098f8389cad84b0182725c6c91de",symbol:"comp"},{chainId:42161,address:"0xf4d48ce3ee1ac3651998971541badbb9a14d7234",symbol:"cream"},{chainId:42161,address:"0x11cdb42b0eb46d95f990bedd4695a6e3fa034978",symbol:"crv"},{chainId:42161,address:"0xda10009cbd5d07dd0cecc66161fc93d7c9000da1",symbol:"dai"},{chainId:42161,address:"0x8038f3c971414fd1fc220ba727f2d4a0fc98cb65",symbol:"dht"},{chainId:42161,address:"0xf0b5ceefc89684889e5f7e0a7775bd100fcd3709",symbol:"dusd"},{chainId:42161,address:"0x6c2c06790b3e3e3c38e12ee22f8183b37a13ee55",symbol:"dpx"},{chainId:42161,address:"0x32eb7902d4134bf98a28b963d26de779af92a212",symbol:"rdpx"},{chainId:42161,address:"0xc3ae0333f0f34aa734d5493276223d95b8f9cb37",symbol:"dxd"},{chainId:42161,address:"0xfc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a",symbol:"gmx"},{chainId:42161,address:"0xa0b862f60edef4452f25b4160f177db44deb6cf1",symbol:"gno"},{chainId:42161,address:"0xb965029343d55189c25a7f3e0c9394dc0f5d41b1",symbol:"ndx"},{chainId:42161,address:"0x539bde0d7dbd336b79148aa742883198bbf60342",symbol:"magic"},{chainId:42161,address:"0x4e352cf164e64adcbad318c3a1e222e9eba4ce42",symbol:"mcb"},{chainId:42161,address:"0x3f56e0c36d275367b8c502090edf38289b3dea0d",symbol:"mimatic"},{chainId:42161,address:"0x965772e0e9c84b6f359c8597c891108dcf1c5b1a",symbol:"pickle"},{chainId:42161,address:"0x6694340fc020c5e6b96567843da2df01b2ce1eb6",symbol:"stg"},{chainId:42161,address:"0xd4d42f0b6def4ce0383636770ef773390d85c61a",symbol:"sushi"},{chainId:42161,address:"0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",symbol:"usdt"},{chainId:42161,address:"0x23a941036ae778ac51ab04cea08ed6e2fe103614",symbol:"grt"},{chainId:42161,address:"0xa72159fc390f0e3c6d415e658264c7c4051e9b87",symbol:"tcr"},{chainId:42161,address:"0x4d15a3a2286d883af0aa1b3f21367843fac63e07",symbol:"tusd"},{chainId:42161,address:"0xfa7f8980b0f1e64a2062791cc3b0871572f1f7f0",symbol:"uni"},{chainId:42161,address:"0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",symbol:"usdc"},{chainId:42161,address:"0xa684cd057951541187f288294a1e1c2646aa2d24",symbol:"vsta"},{chainId:42161,address:"0x64343594ab9b56e99087bfa6f2335db24c2d1f17",symbol:"vst"},{chainId:42161,address:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1",symbol:"weth"},{chainId:42161,address:"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f",symbol:"wbtc"},{chainId:42161,address:"0x82e3a8f066a6989666b031d916c43672085b1582",symbol:"yfi"}];class Qs{constructor(e,t){if(this.pools=new Es({url:e.urls.subgraph,chainId:e.chainId}),e.urls.blockNumberSubgraph){this.blockNumbers=new zs(e.urls.blockNumberSubgraph);const t=async()=>{if(this.blockNumbers)return await this.blockNumbers.find("dayAgo")};this.yesterdaysPools=new Es({url:e.urls.subgraph,chainId:e.chainId,blockHeight:t})}const a=Ys.filter((t=>t.chainId==e.chainId)).map((e=>e.address));this.tokenPrices=new Bs(a,e.chainId),this.tokenMeta=new xs([]),e.urls.gaugesSubgraph&&(this.liquidityGauges=new gs(e.urls.gaugesSubgraph,e.addresses.contracts.multicall,e.addresses.contracts.gaugeController||"",e.chainId,t)),e.addresses.contracts.feeDistributor&&e.addresses.tokens.bal&&e.addresses.tokens.veBal&&e.addresses.tokens.bbaUsd&&(this.feeDistributor=new Ds(e.addresses.contracts.multicall,e.addresses.contracts.feeDistributor,e.addresses.tokens.bal,e.addresses.tokens.veBal,e.addresses.tokens.bbaUsd,t)),this.feeCollector=new Ls(e.addresses.contracts.vault,t),e.addresses.contracts.protocolFeePercentagesProvider&&(this.protocolFees=new $s(e.addresses.contracts.multicall,e.addresses.contracts.protocolFeePercentagesProvider,t)),this.tokenYields=new Xs}}Object.defineProperty(exports,"PoolFilter",{enumerable:!0,get:function(){return d.PoolFilter}}),Object.defineProperty(exports,"RouteProposer",{enumerable:!0,get:function(){return d.RouteProposer}}),Object.defineProperty(exports,"SOR",{enumerable:!0,get:function(){return d.SOR}}),Object.defineProperty(exports,"SwapTypes",{enumerable:!0,get:function(){return d.SwapTypes}}),Object.defineProperty(exports,"formatSequence",{enumerable:!0,get:function(){return d.formatSequence}}),Object.defineProperty(exports,"getTokenAddressesForSwap",{enumerable:!0,get:function(){return d.getTokenAddressesForSwap}}),Object.defineProperty(exports,"parseToPoolsDict",{enumerable:!0,get:function(){return d.parseToPoolsDict}}),Object.defineProperty(exports,"phantomStableBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return d.phantomStableBPTForTokensZeroPriceImpact}}),Object.defineProperty(exports,"queryBatchSwapTokensIn",{enumerable:!0,get:function(){return d.queryBatchSwapTokensIn}}),Object.defineProperty(exports,"queryBatchSwapTokensOut",{enumerable:!0,get:function(){return d.queryBatchSwapTokensOut}}),Object.defineProperty(exports,"stableBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return d.stableBPTForTokensZeroPriceImpact}}),Object.defineProperty(exports,"weightedBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return d.weightedBPTForTokensZeroPriceImpact}}),exports.AaveHelpers=class{static async getRate(e,t){const a=new r.Contract(e,V,t);return(await a.getRate()).toString()}},exports.AssetHelpers=G,exports.BalancerAPIArgsFormatter=j,exports.BalancerError=le,exports.BalancerErrors=F,exports.BalancerMinterAuthorization=W,exports.BalancerSDK=class{constructor(e,t=new tn(e),a=new wn(e)){this.config=e,this.sor=t,this.subgraph=a,this.networkConfig=en(e),this.data=new Qs(this.networkConfig,t.provider),this.swaps=new fn(this.config),this.relayer=new gn(this.swaps),this.pricing=new En(e,this.swaps),this.pools=new ms(this.networkConfig,this.data),this.balancerContracts=new Sn(this.networkConfig.addresses.contracts,t.provider),this.zaps=new Xn(this.networkConfig.chainId)}get rpcProvider(){return this.sor.provider}get contracts(){return this.balancerContracts.contracts}},exports.BlockNumberRepository=zs,exports.CoingeckoPriceRepository=Bs,exports.ComposableStablePoolEncoder=N,exports.Data=Qs,exports.FeeCollectorRepository=Ls,exports.FeeDistributorRepository=Ds,exports.GaugeControllerMulticallRepository=hs,exports.GraphQLArgsBuilder=Z,exports.Liquidity=st,exports.LiquidityGaugeSubgraphRPCProvider=gs,exports.LiquidityGaugesMulticallRepository=Ts,exports.LiquidityGaugesSubgraphRepository=Is,exports.ManagedPoolEncoder=A,exports.Pools=ms,exports.PoolsBalancerAPIRepository=class{constructor(e){var t,a;this.pools=[],this.skip=0,this.client=new ws(e.url,e.apiKey);this.query={args:(null===(t=e.query)||void 0===t?void 0:t.args)||{chainId:1,orderBy:"totalLiquidity",orderDirection:"desc",where:{swapEnabled:{eq:!0},totalShares:{gt:.05}}},attrs:(null===(a=e.query)||void 0===a?void 0:a.attrs)||{id:!0,address:!0}}}fetchFromCache(e){const t=(null==e?void 0:e.first)||10,a=(null==e?void 0:e.skip)||0,n=this.pools.slice(a,t+a);return this.skip=a+t,n}async fetch(e){if(this.pools.length>((null==e?void 0:e.first)||10)+((null==e?void 0:e.skip)||0))return this.fetchFromCache(e);this.nextToken&&(this.query.args.nextToken=this.nextToken),(null==e?void 0:e.first)&&(this.query.args.first=2*e.first);const t=new Z(this.query.args).format(new j),a=this.query.attrs;a.nextToken=!0;const n={pools:{__args:t,...a}},s=(await this.client.get(n)).pools;return this.nextToken=s.nextToken,this.pools=this.pools.concat(s.pools.map(this.format)),this.skip=this.pools.length,this.fetchFromCache(e)}async find(e){return 0==this.pools.length&&await this.fetch(),this.findBy("id",e)}async findBy(e,t){0==this.pools.length&&await this.fetch();const a=this.pools.find((a=>a[e]==t));if(a)return this.format(a)}format(e){var t,a,n,s;if(null===(t=e.apr)||void 0===t?void 0:t.rewardAprs.breakdown){const t=JSON.parse(null===(a=e.apr)||void 0===a?void 0:a.rewardAprs.breakdown);e.apr.rewardAprs.breakdown=t}if(null===(n=e.apr)||void 0===n?void 0:n.tokenAprs.breakdown){const t=JSON.parse(null===(s=e.apr)||void 0===s?void 0:s.tokenAprs.breakdown);e.apr.tokenAprs.breakdown=t}return e}},exports.PoolsFallbackRepository=class{constructor(e,t={}){this.providers=e,this.currentProviderIdx=0,this.timeout=t.timeout||1e4}async fetch(e){return this.fallbackQuery("fetch",[e])}get currentProvider(){if(this.providers.length&&!(this.currentProviderIdx>=this.providers.length))return this.providers[this.currentProviderIdx]}async find(e){return this.fallbackQuery("find",[e])}async findBy(e,t){return this.fallbackQuery("findBy",[e,t])}async fallbackQuery(e,t){if(this.currentProviderIdx>=this.providers.length)throw new Error("No working providers found");let a;try{const n=this.providers[this.currentProviderIdx];a=await Promise.race([n[e].apply(n,t),new Promise(((e,t)=>setTimeout((()=>t(new Error("timeout"))),this.timeout)))])}catch(n){const s=n.message;"timeout"===s?console.error("Provider "+this.currentProviderIdx+" timed out, falling back to next provider"):console.error("Provider "+this.currentProviderIdx+" failed with error: ",s,", falling back to next provider"),this.currentProviderIdx++,a=await this.fallbackQuery.call(this,e,t)}return a}},exports.PoolsStaticRepository=class{constructor(e){this.pools=e}async find(e){return this.pools.find((t=>t.id.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.pools.find((a=>a[e]===t))}async all(){return this.pools}async where(e){return(await this.all()).filter(e)}},exports.PoolsSubgraphRepository=Es,exports.ProtocolFeesProvider=$s,exports.Relayer=gn,exports.RelayerAuthorization=q,exports.Sor=tn,exports.StablePoolEncoder=S,exports.StaticTokenPriceProvider=class{constructor(e){this.tokenPrices=e,this.calculateUSDPrices()}calculateUSDPrices(){let e=0,t=a.BigNumber.from(0);if(["0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","0x6b175474e89094c44da98b954eedeac495271d0f","0x6B175474E89094C44Da98b954EedeAC495271d0F","0xdac17f958d2ee523a2206206994597c13d831ec7","0xdAC17F958D2ee523a2206206994597C13D831ec7"].forEach((a=>{const n=this.tokenPrices[a];if(null==n?void 0:n.eth){const a=ye(null==n?void 0:n.eth,18);t=t.add(a),e++}})),0===e)return;const n=t.div(e);for(const e in this.tokenPrices){const t=this.tokenPrices[e];if(t.eth&&!t.usd){const e=ye("1",18).mul(ye(t.eth,18)).div(n).toString();t.usd=a.formatFixed(e,18)}}}async find(e){const t=this.tokenPrices[e];if(t)return t}async findBy(e,t){if("address"==e)return this.find(t)}},exports.StaticTokenProvider=xs,exports.Subgraph=wn,exports.SubgraphArgsFormatter=X,exports.Swaps=fn,exports.TokenYieldsRepository=Xs,exports.WeightedPoolEncoder=_,exports.accountToAddress=U,exports.balEmissions=ps,exports.getLimitsForSlippage=ae,exports.getPoolAddress=C,exports.getPoolNonce=D,exports.getPoolSpecialization=R,exports.isNormalizedWeights=e=>{const a=e.reduce(((e,t)=>e.add(t)),t.Zero);return a.eq(t.WeiPerEther)},exports.isSameAddress=H,exports.parsePoolInfo=K,exports.signPermit=async(e,n,i,r,o=t.MaxUint256,d)=>{const{chainId:p}=await e.provider.getNetwork(),l=await n.getAddress();d||(d=await e.nonces(l));const u={name:await e.name(),version:"1",chainId:p,verifyingContract:e.address},c={owner:l,spender:await U(i),value:r,nonce:d,deadline:o},y=await n._signTypedData(u,{Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},c);return{...s.splitSignature(y),deadline:a.BigNumber.from(o),nonce:a.BigNumber.from(d)}},exports.splitPoolId=e=>({address:C(e),specialization:R(e),nonce:D(e)}),exports.toNormalizedWeights=function(e){if(100==e.length)return Array(100).fill(t.WeiPerEther.div(100));const a=e.reduce(((e,t)=>e.add(t)),t.Zero);if(a.eq(t.WeiPerEther))return e;const n=[];let s=t.Zero;for(let i=0;i<e.length;i++)i<e.length-1?(n[i]=e[i].mul(t.WeiPerEther).div(a),s=s.add(n[i])):n[i]=t.WeiPerEther.sub(s);return n},exports.tokensToTokenPrices=function(e){const t={};return e.forEach((e=>{e.price&&(t[e.address]=e.price)})),t};
//# sourceMappingURL=index.js.map
