{"version":3,"file":"index.umd.js","sources":["../src/pool-stable/encoder.ts","../src/pool-weighted/encoder.ts","../src/pool-weighted/normalizedWeights.ts","../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../src/pool-utils/poolId.ts","../src/lib/utils/errors.ts","../src/lib/utils/signatures.ts","../src/lib/utils/permit.ts","../src/lib/utils/assetHelpers.ts","../src/lib/utils/aaveHelpers.ts","../src/lib/utils/tokens.ts","../src/lib/utils/index.ts","../src/lib/graphql/types.ts","../src/lib/graphql/formatters/balancer-api.ts","../src/lib/graphql/formatters/subgraph.ts","../src/lib/graphql/args-builder.ts","../src/types.ts","../src/modules/swaps/types.ts","../src/modules/swaps/helpers.ts","../src/lib/constants/network.ts","../src/lib/utils/math.ts","../src/modules/pools/pool-types/concerns/stable/liquidity.concern.ts","../src/modules/pools/pool-types/concerns/stable/spotPrice.concern.ts","../src/modules/pools/pool-types/concerns/stable/join.concern.ts","../src/modules/pools/pool-types/stable.module.ts","../src/modules/pools/pool-types/concerns/weighted/liquidity.concern.ts","../src/modules/pools/pool-types/concerns/weighted/spotPrice.concern.ts","../node_modules/@ethersproject/logger/lib.esm/_version.js","../node_modules/@ethersproject/logger/lib.esm/index.js","../node_modules/@ethersproject/units/lib.esm/_version.js","../node_modules/@ethersproject/units/lib.esm/index.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/subgraph/index.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/utils/big-number.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/utils/common.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/utils/math/math.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/pools/base/index.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/utils/math/log-exp.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/utils/math/fixed-point.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/pools/stable/math.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/pools/stable/index.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/pools/weighted/math.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/pools/weighted/index.js","../node_modules/@georgeroman/balancer-v2-pools/dist/src/index.js","../src/lib/utils/slippageHelper.ts","../src/lib/constants/config.ts","../src/balancerErrors.ts","../src/modules/pools/pool-types/concerns/weighted/join.concern.ts","../src/modules/pools/pool-types/weighted.module.ts","../src/modules/pools/pool-types/concerns/metaStable/liquidity.concern.ts","../src/modules/pools/pool-types/concerns/metaStable/spotPrice.concern.ts","../src/modules/pools/pool-types/concerns/metaStable/join.concern.ts","../src/modules/pools/pool-types/metaStable.module.ts","../src/modules/pools/pool-types/concerns/stablePhantom/liquidity.concern.ts","../src/modules/pools/pool-types/concerns/stablePhantom/spotPrice.concern.ts","../src/modules/pools/pool-types/concerns/stablePhantom/join.concern.ts","../src/modules/pools/pool-types/stablePhantom.module.ts","../src/modules/pools/pool-types/concerns/linear/liquidity.concern.ts","../src/modules/pools/pool-types/concerns/linear/spotPrice.concern.ts","../src/modules/pools/pool-types/concerns/linear/join.concern.ts","../src/modules/pools/pool-types/linear.module.ts","../src/modules/pools/pool-type-concerns.ts","../src/modules/liquidity/liquidity.module.ts","../src/modules/swaps/queryBatchSwap.ts","../node_modules/tslib/tslib.es6.js","../node_modules/graphql-tag/lib/index.js","../src/modules/subgraph/generated/balancer-subgraph-types.ts","../src/modules/subgraph/generated/balancer-gauges.ts","../src/modules/subgraph/subgraph.ts","../src/modules/contracts/multicall.ts","../src/lib/utils/multiCaller.ts","../src/modules/sor/pool-data/onChainData.ts","../src/modules/sor/pool-data/subgraphPoolDataService.ts","../src/modules/sor/token-price/coingeckoTokenPriceService.ts","../src/modules/sor/token-price/subgraphTokenPriceService.ts","../src/modules/data/bal/emissions.ts","../node_modules/@ethersproject/base64/lib.esm/base64.js","../node_modules/@ethersproject/properties/lib.esm/_version.js","../node_modules/@ethersproject/properties/lib.esm/index.js","../node_modules/@ethersproject/basex/lib.esm/index.js","../node_modules/js-sha3/src/sha3.js","../node_modules/@ethersproject/keccak256/lib.esm/index.js","../node_modules/@ethersproject/strings/lib.esm/_version.js","../node_modules/@ethersproject/strings/lib.esm/utf8.js","../node_modules/@ethersproject/strings/lib.esm/bytes32.js","../node_modules/@ethersproject/strings/lib.esm/idna.js","../node_modules/@ethersproject/hash/lib.esm/id.js","../node_modules/@ethersproject/hash/lib.esm/_version.js","../node_modules/@ethersproject/hash/lib.esm/namehash.js","../node_modules/@ethersproject/hash/lib.esm/message.js","../node_modules/@ethersproject/hash/lib.esm/typed-data.js","../node_modules/minimalistic-assert/index.js","../node_modules/inherits/inherits_browser.js","../node_modules/inherits/inherits.js","../node_modules/hash.js/lib/hash/utils.js","../node_modules/hash.js/lib/hash/common.js","../node_modules/hash.js/lib/hash/sha/common.js","../node_modules/hash.js/lib/hash/sha/1.js","../node_modules/hash.js/lib/hash/sha/256.js","../node_modules/hash.js/lib/hash/sha/224.js","../node_modules/hash.js/lib/hash/sha/512.js","../node_modules/hash.js/lib/hash/sha/384.js","../node_modules/hash.js/lib/hash/sha.js","../node_modules/hash.js/lib/hash/ripemd.js","../node_modules/hash.js/lib/hash/hmac.js","../node_modules/hash.js/lib/hash.js","../node_modules/@ethersproject/sha2/lib.esm/types.js","../node_modules/@ethersproject/sha2/lib.esm/_version.js","../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js","../node_modules/@ethersproject/signing-key/node_modules/bn.js/lib/bn.js","../node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../node_modules/@ethersproject/signing-key/lib.esm/_version.js","../node_modules/@ethersproject/signing-key/lib.esm/index.js","../node_modules/@ethersproject/rlp/lib.esm/_version.js","../node_modules/@ethersproject/rlp/lib.esm/index.js","../node_modules/@ethersproject/transactions/lib.esm/_version.js","../node_modules/@ethersproject/transactions/lib.esm/index.js","../node_modules/@ethersproject/wordlists/lib.esm/_version.js","../node_modules/@ethersproject/wordlists/lib.esm/wordlist.js","../node_modules/@ethersproject/wordlists/lib.esm/lang-en.js","../node_modules/@ethersproject/wordlists/lib.esm/wordlists.js","../node_modules/@ethersproject/hdnode/lib.esm/_version.js","../node_modules/@ethersproject/hdnode/lib.esm/index.js","../node_modules/aes-js/index.js","../node_modules/@ethersproject/json-wallets/lib.esm/_version.js","../node_modules/@ethersproject/json-wallets/lib.esm/utils.js","../node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js","../node_modules/@ethersproject/json-wallets/lib.esm/inspect.js","../node_modules/scrypt-js/scrypt.js","../node_modules/@ethersproject/random/lib.esm/_version.js","../node_modules/@ethersproject/random/lib.esm/random.js","../node_modules/@ethersproject/random/lib.esm/shuffle.js","../node_modules/@ethersproject/json-wallets/lib.esm/keystore.js","../node_modules/@ethersproject/json-wallets/lib.esm/index.js","../node_modules/@ethersproject/solidity/lib.esm/_version.js","../node_modules/@ethersproject/solidity/lib.esm/index.js","../node_modules/@ethersproject/abstract-provider/lib.esm/_version.js","../node_modules/@ethersproject/abstract-provider/lib.esm/index.js","../node_modules/@ethersproject/wallet/lib.esm/_version.js","../node_modules/@ethersproject/wallet/lib.esm/index.js","../node_modules/@ethersproject/web/lib.esm/_version.js","../node_modules/@ethersproject/web/lib.esm/geturl.js","../node_modules/@ethersproject/web/lib.esm/index.js","../node_modules/ethers/lib/utils.js","../src/modules/data/gauge-controller/multicall.ts","../src/modules/data/liquidity-gauges/multicall.ts","../src/modules/data/liquidity-gauges/subgraph.ts","../src/modules/data/liquidity-gauges/provider.ts","../src/modules/api/balancer-api.client.ts","../src/modules/data/pool/balancer-api.ts","../src/modules/data/pool/fallback.ts","../src/modules/data/pool/static.ts","../src/modules/data/pool/subgraph.ts","../src/modules/data/token/static.ts","../src/modules/data/token-prices/static.ts","../node_modules/ethers/lib.esm/_version.js","../node_modules/ethers/lib.esm/ethers.js","../src/modules/data/token-yields/tokens/aave.ts","../src/modules/data/token-prices/coingecko.ts","../src/modules/data/fee-distributor/repository.ts","../src/modules/data/fee-collector/repository.ts","../src/modules/data/token-yields/tokens/lido.ts","../src/modules/data/token-yields/tokens/overnight.ts","../src/modules/data/token-yields/repository.ts","../src/modules/data/block-number/index.ts","../src/modules/data/index.ts","../src/modules/sdk.helpers.ts","../src/modules/sor/sor.module.ts","../src/modules/swaps/flashSwap/index.ts","../src/modules/swaps/swap_builder/swap_utils.ts","../src/modules/swaps/swap_builder/swap_info_decorator.ts","../src/modules/swaps/swap_builder/single_swap_builder.ts","../src/modules/swaps/swap_builder/batch_swap_builder.ts","../src/modules/swaps/swaps.module.ts","../src/modules/relayer/relayer.module.ts","../src/modules/subgraph/subgraph.module.ts","../src/modules/pricing/pricing.module.ts","../src/modules/contracts/ERC20.ts","../src/modules/contracts/contracts.module.ts","../src/modules/pools/apr/protocol-revenue.ts","../src/modules/pools/fees/fees.ts","../src/modules/pools/apr/apr.ts","../src/modules/pools/volume/volume.ts","../src/modules/pools/model-provider.ts","../src/modules/pools/index.ts","../src/modules/sdk.module.ts"],"sourcesContent":["import { defaultAbiCoder } from '@ethersproject/abi';\nimport { BigNumberish } from '@ethersproject/bignumber';\n\nexport enum StablePoolJoinKind {\n  INIT = 0,\n  EXACT_TOKENS_IN_FOR_BPT_OUT,\n  TOKEN_IN_FOR_EXACT_BPT_OUT,\n}\n\nexport enum StablePhantomPoolJoinKind {\n  INIT = 0,\n  COLLECT_PROTOCOL_FEES,\n}\n\nexport enum StablePoolExitKind {\n  EXACT_BPT_IN_FOR_ONE_TOKEN_OUT = 0,\n  EXACT_BPT_IN_FOR_TOKENS_OUT,\n  BPT_IN_FOR_EXACT_TOKENS_OUT,\n}\n\nexport class StablePoolEncoder {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  }\n\n  /**\n   * Encodes the userData parameter for providing the initial liquidity to a StablePool\n   * @param initialBalances - the amounts of tokens to send to the pool to form the initial balances\n   */\n  static joinInit = (amountsIn: BigNumberish[]): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256[]'],\n      [StablePoolJoinKind.INIT, amountsIn]\n    );\n\n  /**\n   * Encodes the userData parameter for collecting protocol fees for StablePhantomPool\n   */\n  static joinCollectProtocolFees = (): string =>\n    defaultAbiCoder.encode(\n      ['uint256'],\n      [StablePhantomPoolJoinKind.COLLECT_PROTOCOL_FEES]\n    );\n\n  /**\n   * Encodes the userData parameter for joining a StablePool with exact token inputs\n   * @param amountsIn - the amounts each of token to deposit in the pool as liquidity\n   * @param minimumBPT - the minimum acceptable BPT to receive in return for deposited tokens\n   */\n  static joinExactTokensInForBPTOut = (\n    amountsIn: BigNumberish[],\n    minimumBPT: BigNumberish\n  ): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256[]', 'uint256'],\n      [StablePoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT, amountsIn, minimumBPT]\n    );\n\n  /**\n   * Encodes the userData parameter for joining a StablePool with to receive an exact amount of BPT\n   * @param bptAmountOut - the amount of BPT to be minted\n   * @param enterTokenIndex - the index of the token to be provided as liquidity\n   */\n  static joinTokenInForExactBPTOut = (\n    bptAmountOut: BigNumberish,\n    enterTokenIndex: number\n  ): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256', 'uint256'],\n      [\n        StablePoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,\n        bptAmountOut,\n        enterTokenIndex,\n      ]\n    );\n\n  /**\n   * Encodes the userData parameter for exiting a StablePool by removing a single token in return for an exact amount of BPT\n   * @param bptAmountIn - the amount of BPT to be burned\n   * @param enterTokenIndex - the index of the token to removed from the pool\n   */\n  static exitExactBPTInForOneTokenOut = (\n    bptAmountIn: BigNumberish,\n    exitTokenIndex: number\n  ): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256', 'uint256'],\n      [\n        StablePoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,\n        bptAmountIn,\n        exitTokenIndex,\n      ]\n    );\n\n  /**\n   * Encodes the userData parameter for exiting a StablePool by removing tokens in return for an exact amount of BPT\n   * @param bptAmountIn - the amount of BPT to be burned\n   */\n  static exitExactBPTInForTokensOut = (bptAmountIn: BigNumberish): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256'],\n      [StablePoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT, bptAmountIn]\n    );\n\n  /**\n   * Encodes the userData parameter for exiting a StablePool by removing exact amounts of tokens\n   * @param amountsOut - the amounts of each token to be withdrawn from the pool\n   * @param maxBPTAmountIn - the minimum acceptable BPT to burn in return for withdrawn tokens\n   */\n  static exitBPTInForExactTokensOut = (\n    amountsOut: BigNumberish[],\n    maxBPTAmountIn: BigNumberish\n  ): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256[]', 'uint256'],\n      [\n        StablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,\n        amountsOut,\n        maxBPTAmountIn,\n      ]\n    );\n}\n","import { defaultAbiCoder } from '@ethersproject/abi';\nimport { BigNumberish } from '@ethersproject/bignumber';\n\nexport enum WeightedPoolJoinKind {\n  INIT = 0,\n  EXACT_TOKENS_IN_FOR_BPT_OUT,\n  TOKEN_IN_FOR_EXACT_BPT_OUT,\n  ALL_TOKENS_IN_FOR_EXACT_BPT_OUT,\n}\n\nexport enum WeightedPoolExitKind {\n  EXACT_BPT_IN_FOR_ONE_TOKEN_OUT = 0,\n  EXACT_BPT_IN_FOR_TOKENS_OUT,\n  BPT_IN_FOR_EXACT_TOKENS_OUT,\n  MANAGEMENT_FEE_TOKENS_OUT,\n}\n\nexport class WeightedPoolEncoder {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  }\n\n  /**\n   * Encodes the userData parameter for providing the initial liquidity to a WeightedPool\n   * @param initialBalances - the amounts of tokens to send to the pool to form the initial balances\n   */\n  static joinInit = (amountsIn: BigNumberish[]): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256[]'],\n      [WeightedPoolJoinKind.INIT, amountsIn]\n    );\n\n  /**\n   * Encodes the userData parameter for joining a WeightedPool with exact token inputs\n   * @param amountsIn - the amounts each of token to deposit in the pool as liquidity\n   * @param minimumBPT - the minimum acceptable BPT to receive in return for deposited tokens\n   */\n  static joinExactTokensInForBPTOut = (\n    amountsIn: BigNumberish[],\n    minimumBPT: BigNumberish\n  ): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256[]', 'uint256'],\n      [WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT, amountsIn, minimumBPT]\n    );\n\n  /**\n   * Encodes the userData parameter for joining a WeightedPool with a single token to receive an exact amount of BPT\n   * @param bptAmountOut - the amount of BPT to be minted\n   * @param enterTokenIndex - the index of the token to be provided as liquidity\n   */\n  static joinTokenInForExactBPTOut = (\n    bptAmountOut: BigNumberish,\n    enterTokenIndex: number\n  ): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256', 'uint256'],\n      [\n        WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,\n        bptAmountOut,\n        enterTokenIndex,\n      ]\n    );\n\n  /**\n   * Encodes the userData parameter for joining a WeightedPool proportionally to receive an exact amount of BPT\n   * @param bptAmountOut - the amount of BPT to be minted\n   */\n  static joinAllTokensInForExactBPTOut = (bptAmountOut: BigNumberish): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256'],\n      [WeightedPoolJoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT, bptAmountOut]\n    );\n\n  /**\n   * Encodes the userData parameter for exiting a WeightedPool by removing a single token in return for an exact amount of BPT\n   * @param bptAmountIn - the amount of BPT to be burned\n   * @param enterTokenIndex - the index of the token to removed from the pool\n   */\n  static exitExactBPTInForOneTokenOut = (\n    bptAmountIn: BigNumberish,\n    exitTokenIndex: number\n  ): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256', 'uint256'],\n      [\n        WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,\n        bptAmountIn,\n        exitTokenIndex,\n      ]\n    );\n\n  /**\n   * Encodes the userData parameter for exiting a WeightedPool by removing tokens in return for an exact amount of BPT\n   * @param bptAmountIn - the amount of BPT to be burned\n   */\n  static exitExactBPTInForTokensOut = (bptAmountIn: BigNumberish): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256'],\n      [WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT, bptAmountIn]\n    );\n\n  /**\n   * Encodes the userData parameter for exiting a WeightedPool by removing exact amounts of tokens\n   * @param amountsOut - the amounts of each token to be withdrawn from the pool\n   * @param maxBPTAmountIn - the minimum acceptable BPT to burn in return for withdrawn tokens\n   */\n  static exitBPTInForExactTokensOut = (\n    amountsOut: BigNumberish[],\n    maxBPTAmountIn: BigNumberish\n  ): string =>\n    defaultAbiCoder.encode(\n      ['uint256', 'uint256[]', 'uint256'],\n      [\n        WeightedPoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,\n        amountsOut,\n        maxBPTAmountIn,\n      ]\n    );\n}\n\nexport class ManagedPoolEncoder {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  }\n\n  /**\n   * Encodes the userData parameter for exiting a ManagedPool for withdrawing management fees.\n   * This can only be done by the pool owner.\n   */\n  static exitForManagementFees = (): string =>\n    defaultAbiCoder.encode(\n      ['uint256'],\n      [WeightedPoolExitKind.MANAGEMENT_FEE_TOKENS_OUT]\n    );\n}\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber';\nimport { Zero, WeiPerEther as ONE } from '@ethersproject/constants';\n\n// Should match MAX_WEIGHTED_TOKENS from v2-helpers/constants\n// Including would introduce a dependency\nconst MaxWeightedTokens = 100;\n\n/**\n * Normalize an array of token weights to ensure they sum to `1e18`\n * @param weights - an array of token weights to be normalized\n * @returns an equivalent set of normalized weights\n */\nexport function toNormalizedWeights(weights: BigNumber[]): BigNumber[] {\n  // When the number is exactly equal to the max, normalizing with common inputs\n  // leads to a value < 0.01, which reverts. In this case fill in the weights exactly.\n  if (weights.length == MaxWeightedTokens) {\n    return Array(MaxWeightedTokens).fill(ONE.div(MaxWeightedTokens));\n  }\n\n  const sum = weights.reduce((total, weight) => total.add(weight), Zero);\n  if (sum.eq(ONE)) return weights;\n\n  const normalizedWeights = [];\n  let normalizedSum = Zero;\n  for (let index = 0; index < weights.length; index++) {\n    if (index < weights.length - 1) {\n      normalizedWeights[index] = weights[index].mul(ONE).div(sum);\n      normalizedSum = normalizedSum.add(normalizedWeights[index]);\n    } else {\n      normalizedWeights[index] = ONE.sub(normalizedSum);\n    }\n  }\n\n  return normalizedWeights;\n}\n\n/**\n * Check whether a set of weights are normalized\n * @param weights - an array of potentially unnormalized weights\n * @returns a boolean of whether the weights are normalized\n */\nexport const isNormalizedWeights = (weights: BigNumberish[]): boolean => {\n  const totalWeight = weights.reduce(\n    (total: BigNumber, weight) => total.add(weight),\n    Zero\n  );\n  return totalWeight.eq(ONE);\n};\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? prefix + \": \" + provided : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { PoolSpecialization } from '../types';\nimport invariant from 'tiny-invariant';\n\n/**\n * Splits a poolId into its components, i.e. pool address, pool specialization and its nonce\n * @param poolId - a bytes32 string of the pool's ID\n * @returns an object with the decomposed poolId\n */\nexport const splitPoolId = (\n  poolId: string\n): {\n  address: string;\n  specialization: PoolSpecialization;\n  nonce: BigNumber;\n} => {\n  return {\n    address: getPoolAddress(poolId),\n    specialization: getPoolSpecialization(poolId),\n    nonce: getPoolNonce(poolId),\n  };\n};\n\n/**\n * Extracts a pool's address from its poolId\n * @param poolId - a bytes32 string of the pool's ID\n * @returns the pool's address\n */\nexport const getPoolAddress = (poolId: string): string => {\n  invariant(poolId.length === 66, 'Invalid poolId length');\n  return poolId.slice(0, 42);\n};\n\n/**\n * Extracts a pool's specialization from its poolId\n * @param poolId - a bytes32 string of the pool's ID\n * @returns the pool's specialization\n */\nexport const getPoolSpecialization = (poolId: string): PoolSpecialization => {\n  invariant(poolId.length === 66, 'Invalid poolId length');\n\n  // Only have 3 pool specializations so we can just pull the relevant character\n  const specializationCode = parseInt(poolId[45]);\n  invariant(specializationCode < 3, 'Invalid pool specialization');\n\n  return specializationCode;\n};\n\n/**\n * Extracts a pool's nonce from its poolId\n * @param poolId - a bytes32 string of the pool's ID\n * @returns the pool's nonce\n */\nexport const getPoolNonce = (poolId: string): BigNumber => {\n  invariant(poolId.length === 66, 'Invalid poolId length');\n  return BigNumber.from(`0x${poolId.slice(46)}`);\n};\n","const balancerErrorCodes: Record<string, string> = {\n  '000': 'ADD_OVERFLOW',\n  '001': 'SUB_OVERFLOW',\n  '002': 'SUB_UNDERFLOW',\n  '003': 'MUL_OVERFLOW',\n  '004': 'ZERO_DIVISION',\n  '005': 'DIV_INTERNAL',\n  '006': 'X_OUT_OF_BOUNDS',\n  '007': 'Y_OUT_OF_BOUNDS',\n  '008': 'PRODUCT_OUT_OF_BOUNDS',\n  '009': 'INVALID_EXPONENT',\n  '100': 'OUT_OF_BOUNDS',\n  '101': 'UNSORTED_ARRAY',\n  '102': 'UNSORTED_TOKENS',\n  '103': 'INPUT_LENGTH_MISMATCH',\n  '104': 'ZERO_TOKEN',\n  '200': 'MIN_TOKENS',\n  '201': 'MAX_TOKENS',\n  '202': 'MAX_SWAP_FEE_PERCENTAGE',\n  '203': 'MIN_SWAP_FEE_PERCENTAGE',\n  '204': 'MINIMUM_BPT',\n  '205': 'CALLER_NOT_VAULT',\n  '206': 'UNINITIALIZED',\n  '207': 'BPT_IN_MAX_AMOUNT',\n  '208': 'BPT_OUT_MIN_AMOUNT',\n  '209': 'EXPIRED_PERMIT',\n  '210': 'NOT_TWO_TOKENS',\n  '211': 'DISABLED',\n  '300': 'MIN_AMP',\n  '301': 'MAX_AMP',\n  '302': 'MIN_WEIGHT',\n  '303': 'MAX_STABLE_TOKENS',\n  '304': 'MAX_IN_RATIO',\n  '305': 'MAX_OUT_RATIO',\n  '306': 'MIN_BPT_IN_FOR_TOKEN_OUT',\n  '307': 'MAX_OUT_BPT_FOR_TOKEN_IN',\n  '308': 'NORMALIZED_WEIGHT_INVARIANT',\n  '309': 'INVALID_TOKEN',\n  '310': 'UNHANDLED_JOIN_KIND',\n  '311': 'ZERO_INVARIANT',\n  '312': 'ORACLE_INVALID_SECONDS_QUERY',\n  '313': 'ORACLE_NOT_INITIALIZED',\n  '314': 'ORACLE_QUERY_TOO_OLD',\n  '315': 'ORACLE_INVALID_INDEX',\n  '316': 'ORACLE_BAD_SECS',\n  '317': 'AMP_END_TIME_TOO_CLOSE',\n  '318': 'AMP_ONGOING_UPDATE',\n  '319': 'AMP_RATE_TOO_HIGH',\n  '320': 'AMP_NO_ONGOING_UPDATE',\n  '321': 'STABLE_INVARIANT_DIDNT_CONVERGE',\n  '322': 'STABLE_GET_BALANCE_DIDNT_CONVERGE',\n  '323': 'RELAYER_NOT_CONTRACT',\n  '324': 'BASE_POOL_RELAYER_NOT_CALLED',\n  '325': 'REBALANCING_RELAYER_REENTERED',\n  '326': 'GRADUAL_UPDATE_TIME_TRAVEL',\n  '327': 'SWAPS_DISABLED',\n  '328': 'CALLER_IS_NOT_LBP_OWNER',\n  '329': 'PRICE_RATE_OVERFLOW',\n  '330': 'INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED',\n  '331': 'WEIGHT_CHANGE_TOO_FAST',\n  '332': 'LOWER_GREATER_THAN_UPPER_TARGET',\n  '333': 'UPPER_TARGET_TOO_HIGH',\n  '334': 'UNHANDLED_BY_LINEAR_POOL',\n  '335': 'OUT_OF_TARGET_RANGE',\n  '336': 'UNHANDLED_EXIT_KIND ',\n  '337': 'UNAUTHORIZED_EXIT',\n  '338': 'MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE',\n  '339': 'UNHANDLED_BY_MANAGED_POOL',\n  '340': 'UNHANDLED_BY_PHANTOM_POOL',\n  '341': 'TOKEN_DOES_NOT_HAVE_RATE_PROVIDER',\n  '342': 'INVALID_INITIALIZATION',\n  '343': 'OUT_OF_NEW_TARGET_RANGE',\n  '344': 'UNAUTHORIZED_OPERATION',\n  '345': 'UNINITIALIZED_POOL_CONTROLLER',\n  '400': 'REENTRANCY',\n  '401': 'SENDER_NOT_ALLOWED',\n  '402': 'PAUSED',\n  '403': 'PAUSE_WINDOW_EXPIRED',\n  '404': 'MAX_PAUSE_WINDOW_DURATION',\n  '405': 'MAX_BUFFER_PERIOD_DURATION',\n  '406': 'INSUFFICIENT_BALANCE',\n  '407': 'INSUFFICIENT_ALLOWANCE',\n  '408': 'ERC20_TRANSFER_FROM_ZERO_ADDRESS',\n  '409': 'ERC20_TRANSFER_TO_ZERO_ADDRESS',\n  '410': 'ERC20_MINT_TO_ZERO_ADDRESS',\n  '411': 'ERC20_BURN_FROM_ZERO_ADDRESS',\n  '412': 'ERC20_APPROVE_FROM_ZERO_ADDRESS',\n  '413': 'ERC20_APPROVE_TO_ZERO_ADDRESS',\n  '414': 'ERC20_TRANSFER_EXCEEDS_ALLOWANCE',\n  '415': 'ERC20_DECREASED_ALLOWANCE_BELOW_ZERO',\n  '416': 'ERC20_TRANSFER_EXCEEDS_BALANCE',\n  '417': 'ERC20_BURN_EXCEEDS_ALLOWANCE',\n  '418': 'SAFE_ERC20_CALL_FAILED',\n  '419': 'ADDRESS_INSUFFICIENT_BALANCE',\n  '420': 'ADDRESS_CANNOT_SEND_VALUE',\n  '421': 'SAFE_CAST_VALUE_CANT_FIT_INT256',\n  '422': 'GRANT_SENDER_NOT_ADMIN',\n  '423': 'REVOKE_SENDER_NOT_ADMIN',\n  '424': 'RENOUNCE_SENDER_NOT_ALLOWED',\n  '425': 'BUFFER_PERIOD_EXPIRED',\n  '426': 'CALLER_IS_NOT_OWNER',\n  '427': 'NEW_OWNER_IS_ZERO',\n  '428': 'CODE_DEPLOYMENT_FAILED',\n  '429': 'CALL_TO_NON_CONTRACT',\n  '430': 'LOW_LEVEL_CALL_FAILED',\n  '431': 'NOT_PAUSED',\n  '432': 'ADDRESS_ALREADY_ALLOWLISTED',\n  '433': 'ADDRESS_NOT_ALLOWLISTED',\n  '434': 'ERC20_BURN_EXCEEDS_BALANCE',\n  '500': 'INVALID_POOL_ID',\n  '501': 'CALLER_NOT_POOL',\n  '502': 'SENDER_NOT_ASSET_MANAGER',\n  '503': 'USER_DOESNT_ALLOW_RELAYER',\n  '504': 'INVALID_SIGNATURE',\n  '505': 'EXIT_BELOW_MIN',\n  '506': 'JOIN_ABOVE_MAX',\n  '507': 'SWAP_LIMIT',\n  '508': 'SWAP_DEADLINE',\n  '509': 'CANNOT_SWAP_SAME_TOKEN',\n  '510': 'UNKNOWN_AMOUNT_IN_FIRST_SWAP',\n  '511': 'MALCONSTRUCTED_MULTIHOP_SWAP',\n  '512': 'INTERNAL_BALANCE_OVERFLOW',\n  '513': 'INSUFFICIENT_INTERNAL_BALANCE',\n  '514': 'INVALID_ETH_INTERNAL_BALANCE',\n  '515': 'INVALID_POST_LOAN_BALANCE',\n  '516': 'INSUFFICIENT_ETH',\n  '517': 'UNALLOCATED_ETH',\n  '518': 'ETH_TRANSFER',\n  '519': 'CANNOT_USE_ETH_SENTINEL',\n  '520': 'TOKENS_MISMATCH',\n  '521': 'TOKEN_NOT_REGISTERED',\n  '522': 'TOKEN_ALREADY_REGISTERED',\n  '523': 'TOKENS_ALREADY_SET',\n  '524': 'TOKENS_LENGTH_MUST_BE_2',\n  '525': 'NONZERO_TOKEN_BALANCE',\n  '526': 'BALANCE_TOTAL_OVERFLOW',\n  '527': 'POOL_NO_TOKENS',\n  '528': 'INSUFFICIENT_FLASH_LOAN_BALANCE',\n  '600': 'SWAP_FEE_PERCENTAGE_TOO_HIGH',\n  '601': 'FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH',\n  '602': 'INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT',\n};\n\nexport class BalancerErrors {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  }\n\n  static isErrorCode = (error: string): boolean => {\n    if (!error.includes('BAL#')) return false;\n\n    const errorCode = error.replace('BAL#', '');\n    return Object.keys(balancerErrorCodes).includes(errorCode);\n  };\n\n  /**\n   * Decodes a Balancer error code into the corresponding reason\n   * @param error - a Balancer error code of the form `BAL#000`\n   * @returns The decoded error reason\n   */\n  static parseErrorCode = (error: string): string => {\n    if (!error.includes('BAL#')) throw new Error('Error code not found');\n    const errorCode = error.replace('BAL#', '');\n\n    const actualError = balancerErrorCodes[errorCode];\n\n    if (!actualError) throw new Error('Error code not found');\n\n    return actualError;\n  };\n\n  /**\n   * Decodes a Balancer error code into the corresponding reason\n   * @param error - a Balancer error code of the form `BAL#000`\n   * @returns The decoded error reason if passed a valid error code, otherwise returns passed input\n   */\n  static tryParseErrorCode = (error: string): string => {\n    try {\n      return BalancerErrors.parseErrorCode(error);\n    } catch {\n      return error;\n    }\n  };\n\n  /**\n   * Tests whether a string is a known Balancer error message\n   * @param error - a string to be checked verified as a Balancer error message\n   */\n  static isBalancerError = (error: string): boolean =>\n    Object.values(balancerErrorCodes).includes(error);\n\n  /**\n   * Encodes an error string into the corresponding error code\n   * @param error - a Balancer error message string\n   * @returns a Balancer error code of the form `BAL#000`\n   */\n  static encodeError = (error: string): string => {\n    const encodedError = Object.entries(balancerErrorCodes).find(\n      ([, message]) => message === error\n    );\n\n    if (!encodedError) throw Error('Error message not found');\n\n    return `BAL#${encodedError[0]}`;\n  };\n}\n","import { MaxUint256 as MAX_DEADLINE } from '@ethersproject/constants';\nimport { Contract } from '@ethersproject/contracts';\nimport { hexValue, hexZeroPad, splitSignature } from '@ethersproject/bytes';\nimport { BigNumber, BigNumberish } from '@ethersproject/bignumber';\nimport { Signer, TypedDataSigner } from '@ethersproject/abstract-signer';\n\nexport type Account = string | Signer | Contract;\n\nexport async function accountToAddress(account: Account): Promise<string> {\n  if (typeof account == 'string') return account;\n  if (Signer.isSigner(account)) return account.getAddress();\n  if (account.address) return account.address;\n  throw new Error('Could not read account address');\n}\n\nexport enum RelayerAction {\n  JoinPool = 'JoinPool',\n  ExitPool = 'ExitPool',\n  Swap = 'Swap',\n  BatchSwap = 'BatchSwap',\n  SetRelayerApproval = 'SetRelayerApproval',\n}\n\nexport class RelayerAuthorization {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  }\n\n  static encodeCalldataAuthorization = (\n    calldata: string,\n    deadline: BigNumberish,\n    signature: string\n  ): string => {\n    const encodedDeadline = hexZeroPad(hexValue(deadline), 32).slice(2);\n    const { v, r, s } = splitSignature(signature);\n    const encodedV = hexZeroPad(hexValue(v), 32).slice(2);\n    const encodedR = r.slice(2);\n    const encodedS = s.slice(2);\n    return `${calldata}${encodedDeadline}${encodedV}${encodedR}${encodedS}`;\n  };\n\n  static signJoinAuthorization = (\n    validator: Contract,\n    user: Signer & TypedDataSigner,\n    allowedSender: Account,\n    allowedCalldata: string,\n    deadline?: BigNumberish,\n    nonce?: BigNumberish\n  ): Promise<string> =>\n    RelayerAuthorization.signAuthorizationFor(\n      RelayerAction.JoinPool,\n      validator,\n      user,\n      allowedSender,\n      allowedCalldata,\n      deadline,\n      nonce\n    );\n\n  static signExitAuthorization = (\n    validator: Contract,\n    user: Signer & TypedDataSigner,\n    allowedSender: Account,\n    allowedCalldata: string,\n    deadline?: BigNumberish,\n    nonce?: BigNumberish\n  ): Promise<string> =>\n    RelayerAuthorization.signAuthorizationFor(\n      RelayerAction.ExitPool,\n      validator,\n      user,\n      allowedSender,\n      allowedCalldata,\n      deadline,\n      nonce\n    );\n\n  static signSwapAuthorization = (\n    validator: Contract,\n    user: Signer & TypedDataSigner,\n    allowedSender: Account,\n    allowedCalldata: string,\n    deadline?: BigNumberish,\n    nonce?: BigNumberish\n  ): Promise<string> =>\n    RelayerAuthorization.signAuthorizationFor(\n      RelayerAction.Swap,\n      validator,\n      user,\n      allowedSender,\n      allowedCalldata,\n      deadline,\n      nonce\n    );\n\n  static signBatchSwapAuthorization = (\n    validator: Contract,\n    user: Signer & TypedDataSigner,\n    allowedSender: Account,\n    allowedCalldata: string,\n    deadline?: BigNumberish,\n    nonce?: BigNumberish\n  ): Promise<string> =>\n    RelayerAuthorization.signAuthorizationFor(\n      RelayerAction.BatchSwap,\n      validator,\n      user,\n      allowedSender,\n      allowedCalldata,\n      deadline,\n      nonce\n    );\n\n  static signSetRelayerApprovalAuthorization = (\n    validator: Contract,\n    user: Signer & TypedDataSigner,\n    allowedSender: Account,\n    allowedCalldata: string,\n    deadline?: BigNumberish,\n    nonce?: BigNumberish\n  ): Promise<string> =>\n    RelayerAuthorization.signAuthorizationFor(\n      RelayerAction.SetRelayerApproval,\n      validator,\n      user,\n      allowedSender,\n      allowedCalldata,\n      deadline,\n      nonce\n    );\n\n  static signAuthorizationFor = async (\n    type: RelayerAction,\n    validator: Contract,\n    user: Signer & TypedDataSigner,\n    allowedSender: Account,\n    allowedCalldata: string,\n    deadline: BigNumberish = MAX_DEADLINE,\n    nonce?: BigNumberish\n  ): Promise<string> => {\n    const { chainId } = await validator.provider.getNetwork();\n    if (!nonce) {\n      const userAddress = await user.getAddress();\n      nonce = (await validator.getNextNonce(userAddress)) as BigNumberish;\n    }\n\n    const domain = {\n      name: 'Balancer V2 Vault',\n      version: '1',\n      chainId,\n      verifyingContract: validator.address,\n    };\n\n    const types = {\n      [type]: [\n        { name: 'calldata', type: 'bytes' },\n        { name: 'sender', type: 'address' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'deadline', type: 'uint256' },\n      ],\n    };\n\n    const value = {\n      calldata: allowedCalldata,\n      sender: await accountToAddress(allowedSender),\n      nonce: nonce.toString(),\n      deadline: deadline.toString(),\n    };\n\n    return user._signTypedData(domain, types, value);\n  };\n}\n\nexport class BalancerMinterAuthorization {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n  }\n\n  static signSetMinterApproval = async (\n    minterContract: Contract,\n    minter: Account,\n    approval: boolean,\n    user: Signer & TypedDataSigner,\n    deadline: BigNumberish = MAX_DEADLINE,\n    nonce?: BigNumberish\n  ): Promise<{ v: number; r: string; s: string; deadline: BigNumber }> => {\n    const { chainId } = await minterContract.provider.getNetwork();\n    if (!nonce) {\n      const userAddress = await user.getAddress();\n      nonce = (await minterContract.getNextNonce(userAddress)) as BigNumberish;\n    }\n\n    const domain = {\n      name: 'Balancer Minter',\n      version: '1',\n      chainId,\n      verifyingContract: minterContract.address,\n    };\n\n    const types = {\n      SetMinterApproval: [\n        { name: 'minter', type: 'address' },\n        { name: 'approval', type: 'bool' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'deadline', type: 'uint256' },\n      ],\n    };\n\n    const value = {\n      minter: await accountToAddress(minter),\n      approval,\n      nonce: nonce.toString(),\n      deadline: deadline.toString(),\n    };\n\n    const signature = await user._signTypedData(domain, types, value);\n\n    return {\n      ...splitSignature(signature),\n      deadline: BigNumber.from(deadline),\n    };\n  };\n}\n","import { Signer, TypedDataSigner } from '@ethersproject/abstract-signer';\nimport { BigNumber, BigNumberish } from '@ethersproject/bignumber';\nimport { splitSignature } from '@ethersproject/bytes';\nimport { MaxUint256 as MAX_DEADLINE } from '@ethersproject/constants';\nimport { Contract } from '@ethersproject/contracts';\nimport { Account, accountToAddress } from './signatures';\n\nexport const signPermit = async (\n  token: Contract,\n  owner: Signer & TypedDataSigner,\n  spender: Account,\n  amount: BigNumberish,\n  deadline: BigNumberish = MAX_DEADLINE,\n  nonce?: BigNumberish\n): Promise<{\n  v: number;\n  r: string;\n  s: string;\n  deadline: BigNumber;\n  nonce: BigNumber;\n}> => {\n  const { chainId } = await token.provider.getNetwork();\n  const ownerAddress = await owner.getAddress();\n\n  if (!nonce) nonce = (await token.nonces(ownerAddress)) as BigNumberish;\n\n  const domain = {\n    name: await token.name(),\n    version: '1',\n    chainId,\n    verifyingContract: token.address,\n  };\n\n  const types = {\n    Permit: [\n      { name: 'owner', type: 'address' },\n      { name: 'spender', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'nonce', type: 'uint256' },\n      { name: 'deadline', type: 'uint256' },\n    ],\n  };\n\n  const value = {\n    owner: ownerAddress,\n    spender: await accountToAddress(spender),\n    value: amount,\n    nonce,\n    deadline,\n  };\n\n  const signature = await owner._signTypedData(domain, types, value);\n  return {\n    ...splitSignature(signature),\n    deadline: BigNumber.from(deadline),\n    nonce: BigNumber.from(nonce),\n  };\n};\n","import { getAddress } from '@ethersproject/address';\nimport { AddressZero } from '@ethersproject/constants';\nimport invariant from 'tiny-invariant';\n\nconst cmpTokens = (tokenA: string, tokenB: string): number =>\n  tokenA.toLowerCase() > tokenB.toLowerCase() ? 1 : -1;\n\nconst transposeMatrix = (matrix: unknown[][]): unknown[][] =>\n  matrix[0].map((_, columnIndex) => matrix.map((row) => row[columnIndex]));\n\nexport class AssetHelpers {\n  public readonly ETH: string = AddressZero;\n  public readonly WETH: string;\n\n  constructor(wethAddress: string) {\n    this.WETH = getAddress(wethAddress);\n  }\n\n  static isEqual = (addressA: string, addressB: string): boolean =>\n    getAddress(addressA) === getAddress(addressB);\n\n  /**\n   * Tests whether `token` is ETH (represented by `0x0000...0000`).\n   *\n   * @param token - the address of the asset to be checked\n   */\n  isETH = (token: string): boolean => AssetHelpers.isEqual(token, this.ETH);\n\n  /**\n   * Tests whether `token` is WETH.\n   *\n   * @param token - the address of the asset to be checked\n   */\n  isWETH = (token: string): boolean => AssetHelpers.isEqual(token, this.WETH);\n\n  /**\n   * Converts an asset to the equivalent ERC20 address.\n   *\n   * For ERC20s this will return the passed address but passing ETH (`0x0000...0000`) will return the WETH address\n   * @param token - the address of the asset to be translated to an equivalent ERC20\n   * @returns the address of translated ERC20 asset\n   */\n  translateToERC20 = (token: string): string =>\n    this.isETH(token) ? this.WETH : token;\n\n  /**\n   * Sorts an array of token addresses into ascending order to match the format expected by the Vault.\n   *\n   * Passing additional arrays will result in each being sorted to maintain relative ordering to token addresses.\n   *\n   * The zero address (representing ETH) is sorted as if it were the WETH address.\n   * This matches the behaviour expected by the Vault when receiving an array of addresses.\n   *\n   * @param tokens - an array of token addresses to be sorted in ascending order\n   * @param others - a set of arrays to be sorted in the same order as the tokens, e.g. token weights or asset manager addresses\n   * @returns an array of the form `[tokens, ...others]` where each subarray has been sorted to maintain its ordering relative to `tokens`\n   *\n   * @example\n   * const [tokens] = sortTokens([tokenB, tokenC, tokenA])\n   * const [tokens, weights] = sortTokens([tokenB, tokenC, tokenA], [weightB, weightC, weightA])\n   * // where tokens = [tokenA, tokenB, tokenC], weights = [weightA, weightB, weightC]\n   */\n  sortTokens(\n    tokens: string[],\n    ...others: unknown[][]\n  ): [string[], ...unknown[][]] {\n    others.forEach((array) =>\n      invariant(tokens.length === array.length, 'array length mismatch')\n    );\n\n    // We want to sort ETH as if were WETH so we translate to ERC20s\n    const erc20Tokens = tokens.map(this.translateToERC20);\n\n    const transpose = transposeMatrix([erc20Tokens, ...others]) as [\n      string,\n      ...unknown[]\n    ][];\n    const sortedTranspose = transpose.sort(([tokenA], [tokenB]) =>\n      cmpTokens(tokenA, tokenB)\n    );\n    const [sortedErc20s, ...sortedOthers] = transposeMatrix(\n      sortedTranspose\n    ) as [string[], ...unknown[][]];\n\n    // If one of the tokens was ETH, we need to translate back from WETH\n    const sortedTokens = tokens.includes(this.ETH)\n      ? sortedErc20s.map((token) => (this.isWETH(token) ? this.ETH : token))\n      : sortedErc20s;\n    return [sortedTokens, ...sortedOthers];\n  }\n}\n","import { JsonRpcProvider } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\n\nimport aTokenRateProviderAbi from '../abi/StaticATokenRateProvider.json';\n\nexport class AaveHelpers {\n  static async getRate(\n    rateProviderAddress: string,\n    provider: JsonRpcProvider\n  ): Promise<string> {\n    const rateProviderContract = new Contract(\n      rateProviderAddress,\n      aTokenRateProviderAbi,\n      provider\n    );\n\n    const rate = await rateProviderContract.getRate();\n    return rate.toString();\n  }\n}\n","import { Token, TokenPrices } from '@/types';\n\nexport function tokensToTokenPrices(tokens: Token[]): TokenPrices {\n  const tokenPrices: TokenPrices = {};\n  tokens.forEach((token) => {\n    if (token.price) {\n      tokenPrices[token.address] = token.price;\n    }\n  });\n\n  return tokenPrices;\n}\n","import { getAddress } from '@ethersproject/address';\n\nexport * from './errors';\nexport * from './permit';\nexport * from './signatures';\nexport * from './assetHelpers';\nexport * from './aaveHelpers';\nexport * from './tokens';\n\nexport const isSameAddress = (address1: string, address2: string): boolean =>\n  getAddress(address1) === getAddress(address2);\n","export enum GraphQLFilterOperator {\n  GreaterThan,\n  LessThan,\n  Equals,\n  In,\n  NotIn,\n  Contains,\n}\n\nexport interface GraphQLFilter {\n  operator: GraphQLFilterOperator;\n  value: any;\n}\n\nexport interface GraphQLArgs {\n  chainId?: number;\n  first?: number;\n  skip?: number | string;\n  orderBy?: string;\n  orderDirection?: string;\n  block?: {\n    number?: number;\n  };\n  where?: Record<string, GraphQLFilter>;\n}\n\nexport interface GraphQLArgsFormatter {\n  format(args: GraphQLArgs): any;\n}\n","import {\n  GraphQLArgs,\n  GraphQLArgsFormatter,\n  GraphQLFilterOperator,\n} from '../types';\n\nexport class BalancerAPIArgsFormatter implements GraphQLArgsFormatter {\n  operatorMap: Record<GraphQLFilterOperator, string>;\n\n  constructor() {\n    this.operatorMap = {\n      [GraphQLFilterOperator.GreaterThan]: 'gt',\n      [GraphQLFilterOperator.LessThan]: 'lt',\n      [GraphQLFilterOperator.Equals]: 'eq',\n      [GraphQLFilterOperator.In]: 'in',\n      [GraphQLFilterOperator.NotIn]: 'not_in',\n      [GraphQLFilterOperator.Contains]: 'contains',\n    };\n  }\n\n  format(args: GraphQLArgs): any {\n    const whereQuery: Record<string, any> = {};\n    if (args.where) {\n      Object.entries(args.where).forEach(([name, filter]) => {\n        whereQuery[name] = {\n          [this.operatorMap[filter.operator]]: filter.value,\n        };\n      });\n    }\n\n    return {\n      ...args,\n      ...{ where: whereQuery },\n    };\n  }\n}\n","import {\n  GraphQLArgs,\n  GraphQLArgsFormatter,\n  GraphQLFilterOperator,\n} from '../types';\n\nexport class SubgraphArgsFormatter implements GraphQLArgsFormatter {\n  operatorMap: Record<GraphQLFilterOperator, string>;\n\n  constructor() {\n    this.operatorMap = {\n      [GraphQLFilterOperator.GreaterThan]: '_gt',\n      [GraphQLFilterOperator.LessThan]: '_lt',\n      [GraphQLFilterOperator.Equals]: '',\n      [GraphQLFilterOperator.In]: '_in',\n      [GraphQLFilterOperator.NotIn]: '_not_in',\n      [GraphQLFilterOperator.Contains]: '_contains',\n    };\n  }\n\n  format(args: GraphQLArgs): any {\n    const whereQuery: Record<string, any> = {};\n    if (args.where) {\n      Object.entries(args.where).forEach(([name, filter]) => {\n        whereQuery[`${name}${this.operatorMap[filter.operator]}`] =\n          filter.value;\n      });\n    }\n\n    return {\n      ...args,\n      ...{ where: whereQuery },\n    };\n  }\n}\n","import { mergeWith } from 'lodash';\nimport {\n  GraphQLArgs,\n  GraphQLArgsFormatter,\n  GraphQLFilter,\n  GraphQLFilterOperator,\n} from './types';\n\nexport * from './formatters';\n\nfunction GreaterThan(value: number): GraphQLFilter {\n  return {\n    operator: GraphQLFilterOperator.GreaterThan,\n    value,\n  };\n}\n\nfunction LessThan(value: number): GraphQLFilter {\n  return {\n    operator: GraphQLFilterOperator.LessThan,\n    value,\n  };\n}\n\nfunction Equals(value: unknown): GraphQLFilter {\n  return {\n    operator: GraphQLFilterOperator.Equals,\n    value,\n  };\n}\n\nfunction In(value: (number | string)[]): GraphQLFilter {\n  return {\n    operator: GraphQLFilterOperator.In,\n    value,\n  };\n}\n\nfunction NotIn(value: (number | string)[]): GraphQLFilter {\n  return {\n    operator: GraphQLFilterOperator.NotIn,\n    value,\n  };\n}\n\nfunction Contains(value: (number | string)[]): GraphQLFilter {\n  return {\n    operator: GraphQLFilterOperator.Contains,\n    value,\n  };\n}\n\nexport const Op = {\n  GreaterThan,\n  LessThan,\n  Equals,\n  In,\n  NotIn,\n  Contains,\n};\n\nexport class GraphQLArgsBuilder {\n  constructor(readonly args: GraphQLArgs) {}\n\n  merge(other: GraphQLArgsBuilder): GraphQLArgsBuilder {\n    const mergedArgs = mergeWith(\n      this.args,\n      other.args,\n      (objValue: any, srcValue: any) => {\n        if (Array.isArray(objValue)) {\n          return objValue.concat(srcValue);\n        }\n      }\n    );\n\n    return new GraphQLArgsBuilder(mergedArgs);\n  }\n\n  format(formatter: GraphQLArgsFormatter): any {\n    return formatter.format(this.args);\n  }\n}\n","import type { BigNumberish } from '@ethersproject/bignumber';\nimport type { Network } from './lib/constants/network';\nimport type { Contract } from '@ethersproject/contracts';\nimport type { PoolDataService, TokenPriceService } from '@balancer-labs/sor';\nimport type { JoinPoolAttributes } from './modules/pools/pool-types/concerns/types';\nimport type {\n  Findable,\n  Searchable,\n  LiquidityGauge,\n  PoolAttribute,\n  TokenAttribute,\n} from '@/modules/data/types';\nimport type { BaseFeeDistributor } from './modules/data';\nimport type { GraphQLArgs } from './lib/graphql';\n\nexport * from '@/modules/data/types';\nimport type { AprBreakdown } from '@/modules/pools/apr/apr';\nexport { AprBreakdown };\n\nexport type Address = string;\n\nexport interface BalancerSdkConfig {\n  //use a known network or provide an entirely custom config\n  network: Network | BalancerNetworkConfig;\n  rpcUrl: string;\n  //overwrite the subgraph url if you don't want to use the balancer labs maintained version\n  customSubgraphUrl?: string;\n  //optionally overwrite parts of the standard SOR config\n  sor?: Partial<BalancerSdkSorConfig>;\n}\n\nexport interface BalancerSdkSorConfig {\n  //use a built-in service or provide a custom implementation of a TokenPriceService\n  //defaults to coingecko\n  tokenPriceService: 'coingecko' | 'subgraph' | TokenPriceService;\n  //use a built-in service or provide a custom implementation of a PoolDataService\n  //defaults to subgraph\n  poolDataService: 'subgraph' | PoolDataService;\n  //if a custom PoolDataService is provided, on chain balance fetching needs to be handled externally\n  //default to true.\n  fetchOnChainBalances: boolean;\n}\n\nexport interface ContractAddresses {\n  vault: string;\n  multicall: string;\n  lidoRelayer?: string;\n  gaugeController: string;\n  feeDistributor: string;\n}\n\nexport interface BalancerNetworkConfig {\n  chainId: Network;\n  addresses: {\n    contracts: ContractAddresses;\n    tokens: {\n      wrappedNativeAsset: string;\n      lbpRaisingTokens?: string[];\n      stETH?: string;\n      wstETH?: string;\n      bal: string;\n      veBal: string;\n      bbaUsd: string;\n    };\n  };\n  urls: {\n    subgraph: string;\n    gaugesSubgraph: string;\n  };\n  pools: {\n    wETHwstETH?: PoolReference;\n  };\n}\n\nexport interface BalancerDataRepositories {\n  pools: Findable<Pool, PoolAttribute> & Searchable<Pool>;\n  yesterdaysPools: Findable<Pool, PoolAttribute> & Searchable<Pool>;\n  tokenPrices: Findable<Price>;\n  tokenMeta: Findable<Token, TokenAttribute>;\n  liquidityGauges: Findable<LiquidityGauge>;\n  feeDistributor: BaseFeeDistributor;\n  feeCollector: Findable<number>;\n  tokenYields: Findable<number>;\n}\n\nexport type PoolReference = {\n  id: string;\n  address: string;\n};\n\nexport enum PoolSpecialization {\n  GeneralPool = 0,\n  MinimalSwapInfoPool,\n  TwoTokenPool,\n}\n\n// Joins\n\nexport type JoinPoolRequest = {\n  assets: string[];\n  maxAmountsIn: BigNumberish[];\n  userData: string;\n  fromInternalBalance: boolean;\n};\n\n// Exit\n\nexport type ExitPoolRequest = {\n  assets: string[];\n  minAmountsOut: string[];\n  userData: string;\n  toInternalBalance: boolean;\n};\n\n// Balance Operations\n\nexport enum UserBalanceOpKind {\n  DepositInternal = 0,\n  WithdrawInternal,\n  TransferInternal,\n  TransferExternal,\n}\n\nexport type UserBalanceOp = {\n  kind: UserBalanceOpKind;\n  asset: string;\n  amount: BigNumberish;\n  sender: string;\n  recipient: string;\n};\n\nexport enum PoolBalanceOpKind {\n  Withdraw = 0,\n  Deposit = 1,\n  Update = 2,\n}\n\nexport type PoolBalanceOp = {\n  kind: PoolBalanceOpKind;\n  poolId: string;\n  token: string;\n  amount: BigNumberish;\n};\n\nexport interface TransactionData {\n  contract?: Contract;\n  function: string;\n  params: string[];\n  outputs?: {\n    amountsIn?: string[];\n    amountsOut?: string[];\n  };\n}\n\nexport type Currency = 'eth' | 'usd';\n\nexport type Price = { [currency in Currency]?: string };\nexport type TokenPrices = { [address: string]: Price };\n\nexport interface Token {\n  address: string;\n  decimals?: number;\n  symbol?: string;\n  price?: Price;\n}\n\nexport interface PoolToken extends Token {\n  balance: string;\n  priceRate?: string;\n  weight?: string | null;\n}\n\nexport interface OnchainTokenData {\n  balance: string;\n  weight: number;\n  decimals: number;\n  logoURI: string | undefined;\n  name: string;\n  symbol: string;\n}\n\nexport interface OnchainPoolData {\n  tokens: Record<Address, OnchainTokenData>;\n  totalSupply: string;\n  decimals: number;\n  swapFee: string;\n  amp?: string;\n  swapEnabled: boolean;\n  tokenRates?: string[];\n}\n\nexport enum PoolType {\n  Weighted = 'Weighted',\n  Investment = 'Investment',\n  Stable = 'Stable',\n  MetaStable = 'MetaStable',\n  StablePhantom = 'StablePhantom',\n  LiquidityBootstrapping = 'LiquidityBootstrapping',\n  AaveLinear = 'AaveLinear',\n  ERC4626Linear = 'ERC4626Linear',\n  Element = 'Element',\n}\n\nexport interface Pool {\n  id: string;\n  name: string;\n  address: string;\n  poolType: PoolType;\n  swapFee: string;\n  owner?: string;\n  factory?: string;\n  tokens: PoolToken[];\n  tokensList: string[];\n  tokenAddresses?: string[];\n  totalLiquidity: string;\n  totalShares: string;\n  totalSwapFee?: string;\n  totalSwapVolume?: string;\n  onchain?: OnchainPoolData;\n  createTime?: number;\n  mainTokens?: string[];\n  wrappedTokens?: string[];\n  unwrappedTokens?: string[];\n  isNew?: boolean;\n  volumeSnapshot?: string;\n  feesSnapshot?: string;\n  boost?: string;\n  symbol?: string;\n  apr?: AprBreakdown;\n  liquidity?: string;\n}\n\n/**\n * Live data controller used for caching or as a fallback for missing cached data\n */\nexport interface PoolModel extends Pool {\n  calcLiquidity: () => Promise<string>;\n  calcApr: () => Promise<AprBreakdown>;\n  calcFees: () => Promise<number>;\n  calcVolume: () => Promise<number>;\n}\n\n/**\n * Pool use-cases / controller layer\n */\nexport interface PoolWithMethods extends Pool {\n  buildJoin: (\n    joiner: string,\n    tokensIn: string[],\n    amountsIn: string[],\n    slippage: string\n  ) => Promise<JoinPoolAttributes>;\n}\n\nexport interface GraphQLQuery {\n  args: GraphQLArgs;\n  attrs: any;\n}\n","import { SwapInfo } from '@balancer-labs/sor';\nimport { Vault } from '@balancer-labs/typechain';\nimport { BigNumber, BigNumberish } from '@ethersproject/bignumber';\n\nexport enum SwapType {\n  SwapExactIn,\n  SwapExactOut,\n}\n\nexport type FundManagement = {\n  sender: string;\n  recipient: string;\n  fromInternalBalance: boolean;\n  toInternalBalance: boolean;\n};\n\nexport type SingleSwap = {\n  poolId: string;\n  kind: SwapType;\n  assetIn: string;\n  assetOut: string;\n  amount: BigNumberish;\n  userData: string;\n};\n\nexport type Swap = {\n  request: SingleSwap;\n  funds: FundManagement;\n  limit: BigNumberish;\n  deadline: BigNumberish;\n  value?: BigNumberish;\n  outputReference?: BigNumberish;\n};\n\nexport type BatchSwapStep = {\n  poolId: string;\n  assetInIndex: number;\n  assetOutIndex: number;\n  amount: string;\n  userData: string;\n};\n\nexport type BatchSwap = {\n  kind: SwapType;\n  swaps: BatchSwapStep[];\n  assets: string[];\n  funds: FundManagement;\n  limits: BigNumberish[];\n  deadline: BigNumberish;\n  value?: BigNumberish;\n  outputReferences?: { index: BigNumberish; key: BigNumberish }[];\n};\n\nexport interface FetchPoolsInput {\n  fetchPools: boolean;\n  fetchOnChain: boolean;\n}\n\nexport interface QueryWithSorInput {\n  tokensIn: string[];\n  tokensOut: string[];\n  swapType: SwapType;\n  amounts: string[];\n  fetchPools: FetchPoolsInput;\n}\n\nexport interface SwapInput {\n  tokenIn: string;\n  tokenOut: string;\n  swapType: SwapType;\n  amount: string;\n}\n\nexport interface QueryWithSorOutput {\n  returnAmounts: string[];\n  swaps: BatchSwapStep[];\n  assets: string[];\n  deltas: string[];\n}\n\nexport interface QuerySimpleFlashSwapParameters {\n  poolIds: string[];\n  assets: BatchSwap['assets'];\n  flashLoanAmount: string;\n  vaultContract: Vault;\n}\n\nexport interface SimpleFlashSwapParameters {\n  poolIds: string[];\n  assets: BatchSwap['assets'];\n  flashLoanAmount: string;\n  walletAddress: string;\n}\n\nexport interface QuerySimpleFlashSwapResponse {\n  profits: Record<string, string>;\n  isProfitable: boolean;\n}\n\nexport interface FindRouteParameters {\n  tokenIn: string;\n  tokenOut: string;\n  amount: BigNumber;\n  gasPrice: BigNumber;\n  maxPools: number;\n}\n\nexport interface BuildTransactionParameters {\n  userAddress: string;\n  recipient?: string;\n  swapInfo: SwapInfo;\n  kind: SwapType;\n  deadline: BigNumber;\n  maxSlippage: number;\n}\n\nexport interface SwapTransactionRequest {\n  to: string;\n  data: string;\n  value?: BigNumber;\n}\n\nexport interface SwapAttributes {\n  to: string;\n  functionName: string;\n  attributes: Swap | BatchSwap;\n  data: string;\n  value?: BigNumber;\n}\n","import { BigNumberish, BigNumber } from '@ethersproject/bignumber';\nimport { Zero, WeiPerEther } from '@ethersproject/constants';\n\nimport { SwapType } from './types';\nimport { isSameAddress } from '@/lib/utils';\n\n/**\n * Helper to create limits using a defined slippage amount.\n * @param tokensIn - Array of token in addresses.\n * @param tokensOut - Array of token out addresses.\n * @param swapType - Type of swap - SwapExactIn or SwapExactOut\n * @param deltas - An array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array.\n * @param assets - array contains the addresses of all assets involved in the swaps.\n * @param slippage - Slippage to be applied. i.e. 5%=50000000000000000.\n * @returns Returns an array (same length as assets) with limits applied for each asset.\n */\nexport function getLimitsForSlippage(\n  tokensIn: string[],\n  tokensOut: string[],\n  swapType: SwapType,\n  deltas: BigNumberish[],\n  assets: string[],\n  slippage: BigNumberish\n): BigNumberish[] {\n  // Limits:\n  // +ve means max to send\n  // -ve mean min to receive\n  // For a multihop the intermediate tokens should be 0\n  const limits: BigNumber[] = new Array(assets.length).fill(Zero);\n\n  assets.forEach((token, i) => {\n    if (tokensIn.some((tokenIn) => isSameAddress(token, tokenIn))) {\n      // For SwapExactOut slippage is on tokenIn, i.e. amtIn + slippage\n      const slippageAmount = BigNumber.from(slippage).add(WeiPerEther);\n      limits[i] =\n        swapType === SwapType.SwapExactOut\n          ? limits[i].add(\n              BigNumber.from(deltas[i]).mul(slippageAmount).div(WeiPerEther)\n            )\n          : limits[i].add(deltas[i]);\n    }\n\n    if (tokensOut.some((tokenOut) => isSameAddress(token, tokenOut))) {\n      // For SwapExactIn slippage is on tokenOut, i.e. amtOut - slippage\n      const slippageAmount = WeiPerEther.sub(BigNumber.from(slippage));\n      limits[i] =\n        swapType === SwapType.SwapExactIn\n          ? limits[i].add(\n              BigNumber.from(deltas[i]).mul(slippageAmount).div(WeiPerEther)\n            )\n          : limits[i].add(deltas[i]);\n    }\n  });\n\n  return limits;\n}\n","export enum Network {\n  MAINNET = 1,\n  ROPSTEN = 3,\n  RINKEBY = 4,\n  GOERLI = 5,\n  GÖRLI = 5,\n  OPTIMISM = 10,\n  KOVAN = 42,\n  POLYGON = 137,\n  ARBITRUM = 42161,\n}\n","import {\n  BigNumber,\n  BigNumberish,\n  parseFixed as _parseFixed,\n} from '@ethersproject/bignumber';\n\nexport function parseFixed(value: string, decimals?: BigNumberish): BigNumber {\n  const valueWithTrimmedDecimals = new RegExp(`[0-9]+\\\\.?[0-9]{0,${decimals}}`);\n  const result = value.match(valueWithTrimmedDecimals);\n  let parsedValue = value;\n  if (result) {\n    parsedValue = result[0];\n  }\n\n  return _parseFixed(parsedValue, decimals);\n}\n","import { LiquidityConcern } from '../types';\nimport { PoolToken } from '@/types';\nimport { BigNumber, formatFixed } from '@ethersproject/bignumber';\nimport { parseFixed } from '@/lib/utils/math';\n\nconst SCALING_FACTOR = 18;\n\nexport class StablePoolLiquidity implements LiquidityConcern {\n  calcTotal(tokens: PoolToken[]): string {\n    let sumBalance = BigNumber.from(0);\n    let sumValue = BigNumber.from(0);\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      // if a token's price is unknown, ignore it\n      // it will be computed at the next step\n      if (!token.price?.usd) {\n        continue;\n      }\n\n      const price = parseFixed(token.price.usd.toString(), SCALING_FACTOR);\n      const balance = parseFixed(token.balance, SCALING_FACTOR);\n\n      const value = balance.mul(price);\n      sumValue = sumValue.add(value);\n      sumBalance = sumBalance.add(balance);\n    }\n\n    // if at least the partial value of the pool is known\n    // then compute the rest of the value of tokens with unknown prices\n    if (sumBalance.gt(0)) {\n      const avgPrice = sumValue.div(sumBalance);\n\n      for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i];\n\n        if (token.price?.usd) {\n          continue;\n        }\n\n        const balance = parseFixed(token.balance, SCALING_FACTOR);\n\n        const value = balance.mul(avgPrice);\n        sumValue = sumValue.add(value);\n        sumBalance = sumBalance.add(balance);\n      }\n    }\n\n    return formatFixed(sumValue, SCALING_FACTOR * 2).toString();\n  }\n}\n","import { SpotPriceConcern } from '../types';\nimport { SubgraphPoolBase, StablePool, ZERO } from '@balancer-labs/sor';\n\nexport class StablePoolSpotPrice implements SpotPriceConcern {\n  calcPoolSpotPrice(\n    tokenIn: string,\n    tokenOut: string,\n    pool: SubgraphPoolBase\n  ): string {\n    const poolClass = StablePool.fromPool(pool);\n    const poolPairData = poolClass.parsePoolPairData(tokenIn, tokenOut);\n    return poolClass\n      ._spotPriceAfterSwapExactTokenInForTokenOut(poolPairData, ZERO)\n      .toString();\n  }\n}\n","import { JoinPoolParameters, JoinConcern, JoinPoolAttributes } from '../types';\n\nexport class StablePoolJoin implements JoinConcern {\n  async buildJoin({\n    joiner,\n    pool,\n    tokensIn,\n    amountsIn,\n    slippage,\n    wrappedNativeAsset,\n  }: JoinPoolParameters): Promise<JoinPoolAttributes> {\n    // TODO implementation\n    console.log(\n      joiner,\n      pool,\n      tokensIn,\n      amountsIn,\n      slippage,\n      wrappedNativeAsset\n    );\n    throw new Error('To be implemented');\n  }\n}\n","import { StablePoolLiquidity } from './concerns/stable/liquidity.concern';\nimport { StablePoolSpotPrice } from './concerns/stable/spotPrice.concern';\nimport { PoolType } from './pool-type.interface';\nimport {\n  JoinConcern,\n  LiquidityConcern,\n  SpotPriceConcern,\n} from './concerns/types';\nimport { StablePoolJoin } from './concerns/stable/join.concern';\n\nexport class Stable implements PoolType {\n  public liquidity: LiquidityConcern;\n  public spotPriceCalculator: SpotPriceConcern;\n  public join: JoinConcern;\n\n  constructor(\n    private liquidityConcern = StablePoolLiquidity,\n    private spotPriceCalculatorConcern = StablePoolSpotPrice,\n    private joinConcern = StablePoolJoin\n  ) {\n    this.liquidity = new this.liquidityConcern();\n    this.spotPriceCalculator = new this.spotPriceCalculatorConcern();\n    this.join = new this.joinConcern();\n  }\n}\n","import { LiquidityConcern } from '../types';\nimport { PoolToken } from '@/types';\nimport { BigNumber as OldBigNumber } from 'bignumber.js';\n\nexport class WeightedPoolLiquidity implements LiquidityConcern {\n  calcTotal(tokens: PoolToken[]): string {\n    let sumWeight = new OldBigNumber(0);\n    let sumValue = new OldBigNumber(0);\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      if (!token.price?.usd) {\n        continue;\n      }\n      const price = new OldBigNumber(token.price.usd);\n      const balance = new OldBigNumber(token.balance);\n\n      const value = balance.times(price);\n      sumValue = sumValue.plus(value);\n      sumWeight = sumWeight.plus(token.weight || '0');\n    }\n\n    // Scale the known prices of x% of the pool to get value of 100% of the pool.\n    const totalWeight = tokens.reduce(\n      (total: OldBigNumber, token) => total.plus(token.weight || '0'),\n      new OldBigNumber(0)\n    );\n    if (sumWeight.gt(0)) {\n      const liquidity = sumValue.times(totalWeight).div(sumWeight);\n      return liquidity.toString();\n    }\n\n    return '0';\n  }\n}\n","import { SpotPriceConcern } from '../types';\nimport { SubgraphPoolBase, WeightedPool, ZERO } from '@balancer-labs/sor';\n\nexport class WeightedPoolSpotPrice implements SpotPriceConcern {\n  calcPoolSpotPrice(\n    tokenIn: string,\n    tokenOut: string,\n    pool: SubgraphPoolBase\n  ): string {\n    const weightedPool = WeightedPool.fromPool(pool);\n    const poolPairData = weightedPool.parsePoolPairData(tokenIn, tokenOut);\n    return weightedPool\n      ._spotPriceAfterSwapExactTokenInForTokenOut(poolPairData, ZERO)\n      .toString();\n  }\n}\n","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"units/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPool = void 0;\nconst graphql_request_1 = require(\"graphql-request\");\nconst getPool = async (poolId, blockNumber, testnet) => {\n    const data = `\n    id\n    address\n    poolType\n    swapFee\n    totalShares\n    amp\n    tokens {\n      id\n      address\n      symbol\n      balance\n      decimals\n      weight\n    }\n  `;\n    let query;\n    if (blockNumber) {\n        query = graphql_request_1.gql `\n      query getPool($poolId: ID!, $blockNumber: Int!) {\n        pools(where: { id: $poolId }, block: { number: $blockNumber }) {\n          ${data}\n        }\n      }\n    `;\n    }\n    else {\n        query = graphql_request_1.gql `\n      query getPool($poolId: ID!) {\n        pools(where: { id: $poolId }) {\n          ${data}\n        }\n      }\n    `;\n    }\n    const result = await graphql_request_1.request(testnet\n        ? \"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-kovan-v2\"\n        : \"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-v2\", query, { poolId, blockNumber });\n    if (result && result.pools && result.pools.length) {\n        return result.pools[0];\n    }\n    return null;\n};\nexports.getPool = getPool;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scaleAll = exports.scale = exports.bn = void 0;\nconst bignumber_js_1 = require(\"bignumber.js\");\nbignumber_js_1.BigNumber.config({\n    EXPONENTIAL_AT: [-100, 100],\n    ROUNDING_MODE: 1,\n    DECIMAL_PLACES: 18,\n});\nexports.default = bignumber_js_1.BigNumber;\nconst bn = (value) => new bignumber_js_1.BigNumber(value);\nexports.bn = bn;\nconst scale = (value, decimalPlaces) => exports.bn(value).times(exports.bn(10).pow(decimalPlaces));\nexports.scale = scale;\nconst scaleAll = (values, decimalPlaces) => values.map((x) => exports.scale(x, decimalPlaces));\nexports.scaleAll = scaleAll;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shallowCopyAll = exports.shallowCopy = void 0;\nconst shallowCopy = (obj) => {\n    return Object.assign({}, obj);\n};\nexports.shallowCopy = shallowCopy;\nconst shallowCopyAll = (objs) => {\n    return objs.map(exports.shallowCopy);\n};\nexports.shallowCopyAll = shallowCopyAll;\n","\"use strict\";\n// Ported from Solidity:\n// https://github.com/balancer-labs/balancer-v2-monorepo/blob/ce70f7663e0ac94b25ed60cb86faaa8199fd9e13/pkg/solidity-utils/contracts/math/Math.sol\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.divUp = exports.divDown = exports.div = exports.mul = exports.min = exports.max = exports.sub = exports.add = exports.TWO = exports.ONE = exports.ZERO = void 0;\nconst big_number_1 = require(\"../big-number\");\nexports.ZERO = big_number_1.bn(0);\nexports.ONE = big_number_1.bn(1);\nexports.TWO = big_number_1.bn(2);\nconst add = (a, b) => {\n    return a.plus(b);\n};\nexports.add = add;\nconst sub = (a, b) => {\n    if (b.gt(a)) {\n        throw new Error(\"SUB_OVERFLOW\");\n    }\n    return a.minus(b);\n};\nexports.sub = sub;\nconst max = (a, b) => {\n    return a.gte(b) ? a : b;\n};\nexports.max = max;\nconst min = (a, b) => {\n    return a.lt(b) ? a : b;\n};\nexports.min = min;\nconst mul = (a, b) => {\n    return a.times(b);\n};\nexports.mul = mul;\nconst div = (a, b, roundUp) => {\n    return roundUp ? exports.divUp(a, b) : exports.divDown(a, b);\n};\nexports.div = div;\nconst divDown = (a, b) => {\n    if (b.isZero()) {\n        throw new Error(\"ZERO_DIVISION\");\n    }\n    return a.idiv(b);\n};\nexports.divDown = divDown;\nconst divUp = (a, b) => {\n    if (b.isZero()) {\n        throw new Error(\"ZERO_DIVISION\");\n    }\n    return a.isZero() ? exports.ZERO : exports.ONE.plus(a.minus(exports.ONE).idiv(b));\n};\nexports.divUp = divUp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst big_number_1 = require(\"../../utils/big-number\");\nconst math = require(\"../../utils/math/math\");\nclass BasePool {\n    // ---------------------- Constructor ----------------------\n    constructor(params) {\n        this.MIN_SWAP_FEE_PERCENTAGE = big_number_1.bn(\"0.000001\"); // 0.0001%\n        this.MAX_SWAP_FEE_PERCENTAGE = big_number_1.bn(\"0.1\"); // 10%\n        this._query = false;\n        this._id = params.id;\n        this._address = params.address;\n        this._bptTotalSupply = params.bptTotalSupply;\n        this.setSwapFeePercentage(params.swapFeePercentage);\n        if (params.query) {\n            this._query = params.query;\n        }\n    }\n    // ---------------------- Getters ----------------------\n    get id() {\n        return this._id;\n    }\n    get address() {\n        return this._address;\n    }\n    get bptTotalSupply() {\n        return this._bptTotalSupply;\n    }\n    get swapFeePercentage() {\n        return this._swapFeePercentage;\n    }\n    get query() {\n        return this._query;\n    }\n    // ---------------------- Setters ----------------------\n    setSwapFeePercentage(swapFeePercentage) {\n        if (big_number_1.bn(swapFeePercentage).lt(this.MIN_SWAP_FEE_PERCENTAGE)) {\n            throw new Error(\"MIN_SWAP_FEE_PERCENTAGE\");\n        }\n        if (big_number_1.bn(swapFeePercentage).gt(this.MAX_SWAP_FEE_PERCENTAGE)) {\n            throw new Error(\"MAX_SWAP_FEE_PERCENTAGE\");\n        }\n        this._swapFeePercentage = swapFeePercentage;\n    }\n    setQuery(query) {\n        this._query = query;\n    }\n    // ---------------------- Internal ----------------------\n    _upScale(amount, decimals) {\n        return math.mul(big_number_1.scale(amount, decimals), big_number_1.bn(10).pow(18 - decimals));\n    }\n    _downScaleDown(amount, decimals) {\n        return big_number_1.scale(math.divDown(big_number_1.bn(amount), big_number_1.bn(10).pow(18 - decimals)), -decimals);\n    }\n    _downScaleUp(amount, decimals) {\n        return big_number_1.scale(math.divUp(big_number_1.bn(amount), big_number_1.bn(10).pow(18 - decimals)), -decimals);\n    }\n}\nexports.default = BasePool;\n","\"use strict\";\n// Ported from Solidity:\n// https://github.com/balancer-labs/balancer-core-v2/blob/70843e6a61ad11208c1cfabf5cfe15be216ca8d3/pkg/solidity-utils/contracts/math/LogExpMath.sol\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ln = exports.log = exports.exp = exports.pow = void 0;\nconst big_number_1 = require(\"../big-number\");\n// All fixed point multiplications and divisions are inlined\n// This means we need to divide by ONE when multiplying two numbers, and multiply by ONE when dividing them\n// All arguments and return values are 18 decimal fixed point numbers\nconst ONE_18 = big_number_1.bn(\"1000000000000000000\"); // 1e18\n// Internally, intermediate values are computed with higher precision as 20 decimal fixed point numbers, and in the case of ln36, 36 decimals\nconst ONE_20 = big_number_1.bn(\"100000000000000000000\"); // 1e20\nconst ONE_36 = big_number_1.bn(\"1000000000000000000000000000000000000\"); // 1e36\n// The domain of natural exponentiation is bound by the word size and number of decimals used\n// Because internally the result will be stored using 20 decimals, the largest possible result is\n// (2^255 - 1) / 10^20, which makes the largest exponent ln((2^255 - 1) / 10^20) = 130.700829182905140221\n// The smallest possible result is 10^(-18), which makes largest negative argument\n// ln(10^(-18)) = -41.446531673892822312.\n// We use 130.0 and -41.0 to have some safety margin\nconst MAX_NATURAL_EXPONENT = big_number_1.bn(\"130000000000000000000\"); // 130e18\nconst MIN_NATURAL_EXPONENT = big_number_1.bn(\"-41000000000000000000\"); // (-41)e18\n// Bounds for ln_36's argument\n// Both ln(0.9) and ln(1.1) can be represented with 36 decimal places in a fixed point 256 bit integer\nconst LN_36_LOWER_BOUND = ONE_18.minus(big_number_1.bn(\"100000000000000000\")); // 1e18 - 1e17\nconst LN_36_UPPER_BOUND = ONE_18.plus(big_number_1.bn(\"100000000000000000\")); // 1e18 + 1e17\nconst MILD_EXPONENT_BOUND = big_number_1.bn(2).pow(254).idiv(ONE_20);\n// 18 decimal constants\nconst x0 = big_number_1.bn(\"128000000000000000000\"); // 2ˆ7\nconst a0 = big_number_1.bn(\"38877084059945950922200000000000000000000000000000000000\"); // eˆ(x0) (no decimals)\nconst x1 = big_number_1.bn(\"64000000000000000000\"); // 2ˆ6\nconst a1 = big_number_1.bn(\"6235149080811616882910000000\"); // eˆ(x1) (no decimals)\n// 20 decimal constants\nconst x2 = big_number_1.bn(\"3200000000000000000000\"); // 2ˆ5\nconst a2 = big_number_1.bn(\"7896296018268069516100000000000000\"); // eˆ(x2)\nconst x3 = big_number_1.bn(\"1600000000000000000000\"); // 2ˆ4\nconst a3 = big_number_1.bn(\"888611052050787263676000000\"); // eˆ(x3)\nconst x4 = big_number_1.bn(\"800000000000000000000\"); // 2ˆ3\nconst a4 = big_number_1.bn(\"298095798704172827474000\"); // eˆ(x4)\nconst x5 = big_number_1.bn(\"400000000000000000000\"); // 2ˆ2\nconst a5 = big_number_1.bn(\"5459815003314423907810\"); // eˆ(x5)\nconst x6 = big_number_1.bn(\"200000000000000000000\"); // 2ˆ1\nconst a6 = big_number_1.bn(\"738905609893065022723\"); // eˆ(x6)\nconst x7 = big_number_1.bn(\"100000000000000000000\"); // 2ˆ0\nconst a7 = big_number_1.bn(\"271828182845904523536\"); // eˆ(x7)\nconst x8 = big_number_1.bn(\"50000000000000000000\"); // 2ˆ(-1)\nconst a8 = big_number_1.bn(\"164872127070012814685\"); // eˆ(x8)\nconst x9 = big_number_1.bn(\"25000000000000000000\"); // 2ˆ(-2)\nconst a9 = big_number_1.bn(\"128402541668774148407\"); // eˆ(x9)\nconst x10 = big_number_1.bn(\"12500000000000000000\"); // 2ˆ(-3)\nconst a10 = big_number_1.bn(\"113314845306682631683\"); // eˆ(x10)\nconst x11 = big_number_1.bn(\"6250000000000000000\"); // 2ˆ(-4)\nconst a11 = big_number_1.bn(\"106449445891785942956\"); // eˆ(x11)\nconst pow = (x, y) => {\n    if (y.isZero()) {\n        // We solve the 0^0 indetermination by making it equal one.\n        return ONE_18;\n    }\n    if (x.isZero()) {\n        return big_number_1.bn(0);\n    }\n    // Instead of computing x^y directly, we instead rely on the properties of logarithms and exponentiation to\n    // arrive at that result. In particular, exp(ln(x)) = x, and ln(x^y) = y * ln(x). This means\n    // x^y = exp(y * ln(x)).\n    // The ln function takes a signed value, so we need to make sure x fits in the signed 256 bit range.\n    if (x.gte(big_number_1.bn(2).pow(255))) {\n        throw new Error(\"X_OUT_OF_BOUNDS\");\n    }\n    // We will compute y * ln(x) in a single step. Depending on the value of x, we can either use ln or ln_36. In\n    // both cases, we leave the division by ONE_18 (due to fixed point multiplication) to the end.\n    // This prevents y * ln(x) from overflowing, and at the same time guarantees y fits in the signed 256 bit range.\n    if (y.gte(MILD_EXPONENT_BOUND)) {\n        throw new Error(\"Y_OUT_OF_BOUNDS\");\n    }\n    let logx_times_y;\n    if (LN_36_LOWER_BOUND.lt(x) && x.lt(LN_36_UPPER_BOUND)) {\n        let ln_36_x = _ln_36(x);\n        // ln_36_x has 36 decimal places, so multiplying by y_int256 isn't as straightforward, since we can't just\n        // bring y_int256 to 36 decimal places, as it might overflow. Instead, we perform two 18 decimal\n        // multiplications and add the results: one with the first 18 decimals of ln_36_x, and one with the\n        // (downscaled) last 18 decimals.\n        logx_times_y = ln_36_x\n            .idiv(ONE_18)\n            .times(y)\n            .plus(ln_36_x.mod(ONE_18).times(y).idiv(ONE_18));\n    }\n    else {\n        logx_times_y = _ln(x).times(y);\n    }\n    logx_times_y = logx_times_y.idiv(ONE_18);\n    // Finally, we compute exp(y * ln(x)) to arrive at x^y\n    if (logx_times_y.lt(MIN_NATURAL_EXPONENT) ||\n        logx_times_y.gt(MAX_NATURAL_EXPONENT)) {\n        throw new Error(\"PRODUCT_OUT_OF_BOUNDS\");\n    }\n    return exports.exp(logx_times_y);\n};\nexports.pow = pow;\nconst exp = (x) => {\n    if (x.lt(MIN_NATURAL_EXPONENT) || x.gt(MAX_NATURAL_EXPONENT)) {\n        throw new Error(\"INVALID_EXPONENT\");\n    }\n    if (x.lt(0)) {\n        // We only handle positive exponents: e^(-x) is computed as 1 / e^x. We can safely make x positive since it\n        // fits in the signed 256 bit range (as it is larger than MIN_NATURAL_EXPONENT).\n        // Fixed point division requires multiplying by ONE_18.\n        return ONE_18.times(ONE_18).idiv(exports.exp(x.negated()));\n    }\n    // First, we use the fact that e^(x+y) = e^x * e^y to decompose x into a sum of powers of two, which we call x_n,\n    // where x_n == 2^(7 - n), and e^x_n = a_n has been precomputed. We choose the first x_n, x0, to equal 2^7\n    // because all larger powers are larger than MAX_NATURAL_EXPONENT, and therefore not present in the\n    // decomposition.\n    // At the end of this process we will have the product of all e^x_n = a_n that apply, and the remainder of this\n    // decomposition, which will be lower than the smallest x_n.\n    // exp(x) = k_0 * a_0 * k_1 * a_1 * ... + k_n * a_n * exp(remainder), where each k_n equals either 0 or 1.\n    // We mutate x by subtracting x_n, making it the remainder of the decomposition.\n    // The first two a_n (e^(2^7) and e^(2^6)) are too large if stored as 18 decimal numbers, and could cause\n    // intermediate overflows. Instead we store them as plain integers, with 0 decimals.\n    // Additionally, x0 + x1 is larger than MAX_NATURAL_EXPONENT, which means they will not both be present in the\n    // decomposition.\n    // For each x_n, we test if that term is present in the decomposition (if x is larger than it), and if so deduct\n    // it and compute the accumulated product.\n    let firstAN;\n    if (x.gte(x0)) {\n        x = x.minus(x0);\n        firstAN = a0;\n    }\n    else if (x.gte(x1)) {\n        x = x.minus(x1);\n        firstAN = a1;\n    }\n    else {\n        firstAN = big_number_1.bn(1); // One with no decimal places\n    }\n    // We now transform x into a 20 decimal fixed point number, to have enhanced precision when computing the\n    // smaller terms.\n    x = x.times(100);\n    // `product` is the accumulated product of all a_n (except a0 and a1), which starts at 20 decimal fixed point\n    // one. Recall that fixed point multiplication requires dividing by ONE_20.\n    let product = ONE_20;\n    if (x.gte(x2)) {\n        x = x.minus(x2);\n        product = product.times(a2).idiv(ONE_20);\n    }\n    if (x.gte(x3)) {\n        x = x.minus(x3);\n        product = product.times(a3).idiv(ONE_20);\n    }\n    if (x.gte(x4)) {\n        x = x.minus(x4);\n        product = product.times(a4).idiv(ONE_20);\n    }\n    if (x.gte(x5)) {\n        x = x.minus(x5);\n        product = product.times(a5).idiv(ONE_20);\n    }\n    if (x.gte(x6)) {\n        x = x.minus(x6);\n        product = product.times(a6).idiv(ONE_20);\n    }\n    if (x.gte(x7)) {\n        x = x.minus(x7);\n        product = product.times(a7).idiv(ONE_20);\n    }\n    if (x.gte(x8)) {\n        x = x.minus(x8);\n        product = product.times(a8).idiv(ONE_20);\n    }\n    if (x.gte(x9)) {\n        x = x.minus(x9);\n        product = product.times(a9).idiv(ONE_20);\n    }\n    // x10 and x11 are unnecessary here since we have high enough precision already.\n    // Now we need to compute e^x, where x is small (in particular, it is smaller than x9). We use the Taylor series\n    // expansion for e^x: 1 + x + (x^2 / 2!) + (x^3 / 3!) + ... + (x^n / n!).\n    let seriesSum = ONE_20; // The initial one in the sum, with 20 decimal places.\n    let term; // Each term in the sum, where the nth term is (x^n / n!).\n    // The first term is simply x.\n    term = x;\n    seriesSum = seriesSum.plus(term);\n    // Each term (x^n / n!) equals the previous one times x, divided by n. Since x is a fixed point number,\n    // multiplying by it requires dividing by ONE_20, but dividing by the non-fixed point n values does not.\n    term = term.times(x).idiv(ONE_20).idiv(2);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(3);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(4);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(5);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(6);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(7);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(8);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(9);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(10);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(11);\n    seriesSum = seriesSum.plus(term);\n    term = term.times(x).idiv(ONE_20).idiv(12);\n    seriesSum = seriesSum.plus(term);\n    // 12 Taylor terms are sufficient for 18 decimal precision.\n    // We now have the first a_n (with no decimals), and the product of all other a_n present, and the Taylor\n    // approximation of the exponentiation of the remainder (both with 20 decimals). All that remains is to multiply\n    // all three (one 20 decimal fixed point multiplication, dividing by ONE_20, and one integer multiplication),\n    // and then drop two digits to return an 18 decimal value.\n    return product.times(seriesSum).idiv(ONE_20).times(firstAN).idiv(100);\n};\nexports.exp = exp;\nconst log = (arg, base) => {\n    // This performs a simple base change: log(arg, base) = ln(arg) / ln(base).\n    // Both logBase and logArg are computed as 36 decimal fixed point numbers, either by using ln_36, or by\n    // upscaling.\n    let logBase;\n    if (LN_36_LOWER_BOUND.lt(base) && base.lt(LN_36_UPPER_BOUND)) {\n        logBase = _ln_36(base);\n    }\n    else {\n        logBase = _ln(base).times(ONE_18);\n    }\n    let logArg;\n    if (LN_36_LOWER_BOUND.lt(arg) && arg.lt(LN_36_UPPER_BOUND)) {\n        logArg = _ln_36(arg);\n    }\n    else {\n        logArg = _ln(arg).times(ONE_18);\n    }\n    // When dividing, we multiply by ONE_18 to arrive at a result with 18 decimal places\n    return logArg.times(ONE_18).idiv(logBase);\n};\nexports.log = log;\nconst ln = (a) => {\n    // The real natural logarithm is not defined for negative numbers or zero.\n    if (a.lte(0)) {\n        throw new Error(\"OUT_OF_BOUNDS\");\n    }\n    if (LN_36_LOWER_BOUND.lt(a) && a.lt(LN_36_UPPER_BOUND)) {\n        return _ln_36(a).idiv(ONE_18);\n    }\n    else {\n        return _ln(a);\n    }\n};\nexports.ln = ln;\nconst _ln = (a) => {\n    if (a.lt(ONE_18)) {\n        // Since ln(a^k) = k * ln(a), we can compute ln(a) as ln(a) = ln((1/a)^(-1)) = - ln((1/a))\n        // If a is less than one, 1/a will be greater than one, and this if statement will not be entered in the recursive call\n        // Fixed point division requires multiplying by ONE_18\n        return _ln(ONE_18.times(ONE_18).idiv(a)).negated();\n    }\n    // First, we use the fact that ln^(a * b) = ln(a) + ln(b) to decompose ln(a) into a sum of powers of two, which\n    // we call x_n, where x_n == 2^(7 - n), which are the natural logarithm of precomputed quantities a_n (that is,\n    // ln(a_n) = x_n). We choose the first x_n, x0, to equal 2^7 because the exponential of all larger powers cannot\n    // be represented as 18 fixed point decimal numbers in 256 bits, and are therefore larger than a.\n    // At the end of this process we will have the sum of all x_n = ln(a_n) that apply, and the remainder of this\n    // decomposition, which will be lower than the smallest a_n.\n    // ln(a) = k_0 * x_0 + k_1 * x_1 + ... + k_n * x_n + ln(remainder), where each k_n equals either 0 or 1\n    // We mutate a by subtracting a_n, making it the remainder of the decomposition\n    // For reasons related to how `exp` works, the first two a_n (e^(2^7) and e^(2^6)) are not stored as fixed point\n    // numbers with 18 decimals, but instead as plain integers with 0 decimals, so we need to multiply them by\n    // ONE_18 to convert them to fixed point.\n    // For each a_n, we test if that term is present in the decomposition (if a is larger than it), and if so divide\n    // by it and compute the accumulated sum.\n    let sum = big_number_1.bn(0);\n    if (a.gte(a0.times(ONE_18))) {\n        a = a.idiv(a0); // Integer, not fixed point division\n        sum = sum.plus(x0);\n    }\n    if (a.gte(a1.times(ONE_18))) {\n        a = a.idiv(a1); // Integer, not fixed point division\n        sum = sum.plus(x1);\n    }\n    // All other a_n and x_n are stored as 20 digit fixed point numbers, so we convert the sum and a to this format.\n    sum = sum.times(100);\n    a = a.times(100);\n    // Because further a_n are  20 digit fixed point numbers, we multiply by ONE_20 when dividing by them.\n    if (a.gte(a2)) {\n        a = a.times(ONE_20).idiv(a2);\n        sum = sum.plus(x2);\n    }\n    if (a.gte(a3)) {\n        a = a.times(ONE_20).idiv(a3);\n        sum = sum.plus(x3);\n    }\n    if (a.gte(a4)) {\n        a = a.times(ONE_20).idiv(a4);\n        sum = sum.plus(x4);\n    }\n    if (a.gte(a5)) {\n        a = a.times(ONE_20).idiv(a5);\n        sum = sum.plus(x5);\n    }\n    if (a.gte(a6)) {\n        a = a.times(ONE_20).idiv(a6);\n        sum = sum.plus(x6);\n    }\n    if (a.gte(a7)) {\n        a = a.times(ONE_20).idiv(a7);\n        sum = sum.plus(x7);\n    }\n    if (a.gte(a8)) {\n        a = a.times(ONE_20).idiv(a8);\n        sum = sum.plus(x8);\n    }\n    if (a.gte(a9)) {\n        a = a.times(ONE_20).idiv(a9);\n        sum = sum.plus(x9);\n    }\n    if (a.gte(a10)) {\n        a = a.times(ONE_20).idiv(a10);\n        sum = sum.plus(x10);\n    }\n    if (a.gte(a11)) {\n        a = a.times(ONE_20).idiv(a11);\n        sum = sum.plus(x11);\n    }\n    // a is now a small number (smaller than a_11, which roughly equals 1.06). This means we can use a Taylor series\n    // that converges rapidly for values of `a` close to one - the same one used in ln_36.\n    // Let z = (a - 1) / (a + 1).\n    // ln(a) = 2 * (z + z^3 / 3 + z^5 / 5 + z^7 / 7 + ... + z^(2 * n + 1) / (2 * n + 1))\n    // Recall that 20 digit fixed point division requires multiplying by ONE_20, and multiplication requires\n    // division by ONE_20.\n    const z = a.minus(ONE_20).times(ONE_20).idiv(a.plus(ONE_20));\n    const z_squared = z.times(z).idiv(ONE_20);\n    // num is the numerator of the series: the z^(2 * n + 1) term\n    let num = z;\n    // seriesSum holds the accumulated sum of each term in the series, starting with the initial z\n    let seriesSum = num;\n    // In each step, the numerator is multiplied by z^2\n    num = num.times(z_squared).idiv(ONE_20);\n    seriesSum = seriesSum.plus(num.idiv(3));\n    num = num.times(z_squared).idiv(ONE_20);\n    seriesSum = seriesSum.plus(num.idiv(5));\n    num = num.times(z_squared).idiv(ONE_20);\n    seriesSum = seriesSum.plus(num.idiv(7));\n    num = num.times(z_squared).idiv(ONE_20);\n    seriesSum = seriesSum.plus(num.idiv(9));\n    num = num.times(z_squared).idiv(ONE_20);\n    seriesSum = seriesSum.plus(num.idiv(11));\n    // 6 Taylor terms are sufficient for 36 decimal precision.\n    // Finally, we multiply by 2 (non fixed point) to compute ln(remainder)\n    seriesSum = seriesSum.times(2);\n    // We now have the sum of all x_n present, and the Taylor approximation of the logarithm of the remainder (both\n    // with 20 decimals). All that remains is to sum these two, and then drop two digits to return a 18 decimal\n    // value.\n    return sum.plus(seriesSum).idiv(100);\n};\nconst _ln_36 = (x) => {\n    // Since ln(1) = 0, a value of x close to one will yield a very small result, which makes using 36 digits worthwhile\n    // First, we transform x to a 36 digit fixed point value\n    x = x.times(ONE_18);\n    // We will use the following Taylor expansion, which converges very rapidly. Let z = (x - 1) / (x + 1)\n    // ln(x) = 2 * (z + z^3 / 3 + z^5 / 5 + z^7 / 7 + ... + z^(2 * n + 1) / (2 * n + 1))\n    // Recall that 36 digit fixed point division requires multiplying by ONE_36, and multiplication requires division by ONE_36\n    const z = x.minus(ONE_36).times(ONE_36).idiv(x.plus(ONE_36));\n    const z_squared = z.times(z).idiv(ONE_36);\n    // num is the numerator of the series: the z^(2 * n + 1) term\n    let num = z;\n    // seriesSum holds the accumulated sum of each term in the series, starting with the initial z\n    let seriesSum = num;\n    // In each step, the numerator is multiplied by z^2\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(3));\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(5));\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(7));\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(9));\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(11));\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(13));\n    num = num.times(z_squared).idiv(ONE_36);\n    seriesSum = seriesSum.plus(num.idiv(15));\n    // 8 Taylor terms are sufficient for 36 decimal precision\n    // All that remains is multiplying by 2 (non fixed point)\n    return seriesSum.times(2);\n};\n","\"use strict\";\n// Ported from Solidity:\n// https://github.com/balancer-labs/balancer-core-v2/blob/70843e6a61ad11208c1cfabf5cfe15be216ca8d3/pkg/solidity-utils/contracts/math/FixedPoint.sol\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.complement = exports.powUp = exports.powDown = exports.divUp = exports.divDown = exports.mulUp = exports.mulDown = exports.sub = exports.add = exports.MIN_POW_BASE_FREE_EXPONENT = exports.MAX_POW_RELATIVE_ERROR = exports.ONE = exports.ZERO = void 0;\nconst big_number_1 = require(\"../big-number\");\nconst logExp = require(\"./log-exp\");\nexports.ZERO = big_number_1.bn(0);\nexports.ONE = big_number_1.bn(\"1000000000000000000\"); // 10^18\nexports.MAX_POW_RELATIVE_ERROR = big_number_1.bn(10000); // 10^(-14)\n// Minimum base for the power function when the exponent is 'free' (larger than ONE)\nexports.MIN_POW_BASE_FREE_EXPONENT = big_number_1.bn(\"700000000000000000\"); // 0.7e18\nconst add = (a, b) => {\n    // Fixed Point addition is the same as regular checked addition\n    return a.plus(b);\n};\nexports.add = add;\nconst sub = (a, b) => {\n    // Fixed Point subtraction is the same as regular checked subtraction\n    if (b.gt(a)) {\n        throw new Error(\"SUB_OVERFLOW\");\n    }\n    return a.minus(b);\n};\nexports.sub = sub;\nconst mulDown = (a, b) => {\n    return a.times(b).idiv(exports.ONE);\n};\nexports.mulDown = mulDown;\nconst mulUp = (a, b) => {\n    const product = a.times(b);\n    if (product.isZero()) {\n        return product;\n    }\n    else {\n        // The traditional divUp formula is:\n        // divUp(x, y) := (x + y - 1) / y\n        // To avoid intermediate overflow in the addition, we distribute the division and get:\n        // divUp(x, y) := (x - 1) / y + 1\n        // Note that this requires x != 0, which we already tested for\n        return product.minus(big_number_1.bn(1)).idiv(exports.ONE).plus(big_number_1.bn(1));\n    }\n};\nexports.mulUp = mulUp;\nconst divDown = (a, b) => {\n    if (b.isZero()) {\n        throw new Error(\"ZERO_DIVISION\");\n    }\n    if (a.isZero()) {\n        return a;\n    }\n    else {\n        return a.times(exports.ONE).idiv(b);\n    }\n};\nexports.divDown = divDown;\nconst divUp = (a, b) => {\n    if (b.isZero()) {\n        throw new Error(\"ZERO_DIVISION\");\n    }\n    if (a.isZero()) {\n        return a;\n    }\n    else {\n        // The traditional divUp formula is:\n        // divUp(x, y) := (x + y - 1) / y\n        // To avoid intermediate overflow in the addition, we distribute the division and get:\n        // divUp(x, y) := (x - 1) / y + 1\n        // Note that this requires x != 0, which we already tested for.\n        return a.times(exports.ONE).minus(big_number_1.bn(1)).idiv(b).plus(big_number_1.bn(1));\n    }\n};\nexports.divUp = divUp;\nconst powDown = (x, y) => {\n    const raw = logExp.pow(x, y);\n    const maxError = exports.add(exports.mulUp(raw, exports.MAX_POW_RELATIVE_ERROR), big_number_1.bn(1));\n    if (raw.lt(maxError)) {\n        return big_number_1.bn(0);\n    }\n    else {\n        return exports.sub(raw, maxError);\n    }\n};\nexports.powDown = powDown;\nconst powUp = (x, y) => {\n    const raw = logExp.pow(x, y);\n    const maxError = exports.add(exports.mulUp(raw, exports.MAX_POW_RELATIVE_ERROR), big_number_1.bn(1));\n    return exports.add(raw, maxError);\n};\nexports.powUp = powUp;\nconst complement = (x) => {\n    return x.lt(exports.ONE) ? exports.ONE.minus(x) : big_number_1.bn(0);\n};\nexports.complement = complement;\n","\"use strict\";\n// Ported from Solidity:\n// https://github.com/balancer-labs/balancer-core-v2/blob/70843e6a61ad11208c1cfabf5cfe15be216ca8d3/pkg/pool-stable/contracts/StableMath.sol\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._calcDueTokenProtocolSwapFeeAmount = exports._calcTokensOutGivenExactBptIn = exports._calcTokenOutGivenExactBptIn = exports._calcBptInGivenExactTokensOut = exports._calcTokenInGivenExactBptOut = exports._calcBptOutGivenExactTokensIn = exports._calcInGivenOut = exports._calcOutGivenIn = exports._calculateInvariant = exports.MAX_STABLE_TOKENS = exports.AMP_PRECISION = exports.MAX_AMP = exports.MIN_AMP = void 0;\nconst big_number_1 = require(\"../../utils/big-number\");\nconst fp = require(\"../../utils/math/fixed-point\");\nconst math = require(\"../../utils/math/math\");\nexports.MIN_AMP = big_number_1.bn(1);\nexports.MAX_AMP = big_number_1.bn(5000);\nexports.AMP_PRECISION = big_number_1.bn(1000);\nexports.MAX_STABLE_TOKENS = 5;\n// Computes the invariant given the current balances, using the Newton-Raphson approximation.\n// The amplification parameter equals: A n^(n-1)\nconst _calculateInvariant = (amplificationParameter, balances, roundUp) => {\n    /**********************************************************************************************\n    // invariant                                                                                 //\n    // D = invariant                                                  D^(n+1)                    //\n    // A = amplification coefficient      A  n^n S + D = A D n^n + -----------                   //\n    // S = sum of balances                                             n^n P                     //\n    // P = product of balances                                                                   //\n    // n = number of tokens                                                                      //\n    **********************************************************************************************/\n    // We support rounding up or down.\n    let sum = math.ZERO;\n    let numTokens = big_number_1.bn(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        sum = fp.add(sum, balances[i]);\n    }\n    if (sum.isZero()) {\n        return math.ZERO;\n    }\n    let prevInvariant = math.ZERO;\n    let invariant = sum;\n    let ampTimesTotal = math.mul(amplificationParameter, numTokens);\n    for (let i = 0; i < 255; i++) {\n        let P_D = math.mul(numTokens, balances[0]);\n        for (let j = 1; j < balances.length; j++) {\n            P_D = math.div(math.mul(math.mul(P_D, balances[j]), numTokens), invariant, roundUp);\n        }\n        prevInvariant = invariant;\n        invariant = math.div(fp.add(math.mul(math.mul(numTokens, invariant), invariant), math.div(math.mul(math.mul(ampTimesTotal, sum), P_D), exports.AMP_PRECISION, roundUp)), fp.add(math.mul(fp.add(numTokens, math.ONE), invariant), math.div(math.mul(fp.sub(ampTimesTotal, exports.AMP_PRECISION), P_D), exports.AMP_PRECISION, !roundUp)), roundUp);\n        if (invariant.gt(prevInvariant)) {\n            if (fp.sub(invariant, prevInvariant).lte(math.ONE)) {\n                return invariant;\n            }\n        }\n        else if (fp.sub(prevInvariant, invariant).lte(math.ONE)) {\n            return invariant;\n        }\n    }\n    throw new Error(\"STABLE_GET_BALANCE_DIDNT_CONVERGE\");\n};\nexports._calculateInvariant = _calculateInvariant;\n// Computes how many tokens can be taken out of a pool if `tokenAmountIn` are sent, given the current balances.\n// The amplification parameter equals: A n^(n-1)\nconst _calcOutGivenIn = (amplificationParameter, balances, tokenIndexIn, tokenIndexOut, tokenAmountIn, swapFeePercentage) => {\n    /**************************************************************************************************************\n    // outGivenIn token x for y - polynomial equation to solve                                                   //\n    // ay = amount out to calculate                                                                              //\n    // by = balance token out                                                                                    //\n    // y = by - ay (finalBalanceOut)                                                                             //\n    // D = invariant                                               D                     D^(n+1)                 //\n    // A = amplification coefficient               y^2 + ( S - ----------  - D) * y -  ------------- = 0         //\n    // n = number of tokens                                    (A * n^n)               A * n^2n * P              //\n    // S = sum of final balances but y                                                                           //\n    // P = product of final balances but y                                                                       //\n    **************************************************************************************************************/\n    // Subtract the fee from the amount in if requested\n    if (swapFeePercentage) {\n        tokenAmountIn = fp.sub(tokenAmountIn, fp.mulUp(tokenAmountIn, swapFeePercentage));\n    }\n    // Amount out, so we round down overall.\n    // Given that we need to have a greater final balance out, the invariant needs to be rounded up\n    const invariant = exports._calculateInvariant(amplificationParameter, balances, true);\n    balances[tokenIndexIn] = fp.add(balances[tokenIndexIn], tokenAmountIn);\n    const finalBalanceOut = _getTokenBalanceGivenInvariantAndAllOtherBalances(amplificationParameter, balances, invariant, tokenIndexOut);\n    balances[tokenIndexIn] = fp.sub(balances[tokenIndexIn], tokenAmountIn);\n    return fp.sub(fp.sub(balances[tokenIndexOut], finalBalanceOut), math.ONE);\n};\nexports._calcOutGivenIn = _calcOutGivenIn;\n// Computes how many tokens must be sent to a pool if `tokenAmountOut` are sent given the\n// current balances, using the Newton-Raphson approximation.\n// The amplification parameter equals: A n^(n-1)\nconst _calcInGivenOut = (amplificationParameter, balances, tokenIndexIn, tokenIndexOut, tokenAmountOut, swapFeePercentage) => {\n    /**************************************************************************************************************\n    // inGivenOut token x for y - polynomial equation to solve                                                   //\n    // ax = amount in to calculate                                                                               //\n    // bx = balance token in                                                                                     //\n    // x = bx + ax (finalBalanceIn)                                                                              //\n    // D = invariant                                                D                     D^(n+1)                //\n    // A = amplification coefficient               x^2 + ( S - ----------  - D) * x -  ------------- = 0         //\n    // n = number of tokens                                     (A * n^n)               A * n^2n * P             //\n    // S = sum of final balances but x                                                                           //\n    // P = product of final balances but x                                                                       //\n    **************************************************************************************************************/\n    // Amount in, so we round up overall.\n    // Given that we need to have a greater final balance in, the invariant needs to be rounded up\n    const invariant = exports._calculateInvariant(amplificationParameter, balances, true);\n    balances[tokenIndexOut] = fp.sub(balances[tokenIndexOut], tokenAmountOut);\n    const finalBalanceIn = _getTokenBalanceGivenInvariantAndAllOtherBalances(amplificationParameter, balances, invariant, tokenIndexIn);\n    balances[tokenIndexOut] = fp.add(balances[tokenIndexOut], tokenAmountOut);\n    let amountIn = fp.add(fp.sub(finalBalanceIn, balances[tokenIndexIn]), math.ONE);\n    // Add the fee to the amount in if requested\n    if (swapFeePercentage) {\n        amountIn = fp.divUp(amountIn, fp.complement(swapFeePercentage));\n    }\n    return amountIn;\n};\nexports._calcInGivenOut = _calcInGivenOut;\nconst _calcBptOutGivenExactTokensIn = (amp, balances, amountsIn, bptTotalSupply, swapFeePercentage) => {\n    // BPT out, so we round down overall.\n    // First loop calculates the sum of all token balances, which will be used to calculate\n    // the current weights of each token, relative to this sum\n    let sumBalances = math.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = fp.add(sumBalances, balances[i]);\n    }\n    // Calculate the weighted balance ratio without considering fees\n    const balanceRatiosWithFee = new Array(amountsIn.length);\n    // The weighted sum of token balance ratios without fee\n    let invariantRatioWithFees = math.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        const currentWeight = fp.divDown(balances[i], sumBalances);\n        balanceRatiosWithFee[i] = fp.divDown(fp.add(balances[i], amountsIn[i]), balances[i]);\n        invariantRatioWithFees = fp.add(invariantRatioWithFees, fp.mulDown(balanceRatiosWithFee[i], currentWeight));\n    }\n    // Second loop calculates new amounts in, taking into account the fee on the percentage excess\n    const newBalances = new Array(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        let amountInWithoutFee;\n        // Check if the balance ratio is greater than the ideal ratio to charge fees or not\n        if (balanceRatiosWithFee[i].gt(invariantRatioWithFees)) {\n            const nonTaxableAmount = fp.mulDown(balances[i], fp.sub(invariantRatioWithFees, fp.ONE));\n            const taxableAmount = fp.sub(amountsIn[i], nonTaxableAmount);\n            amountInWithoutFee = fp.add(nonTaxableAmount, fp.mulDown(taxableAmount, fp.sub(fp.ONE, swapFeePercentage)));\n        }\n        else {\n            amountInWithoutFee = amountsIn[i];\n        }\n        newBalances[i] = fp.add(balances[i], amountInWithoutFee);\n    }\n    // Get current and new invariants, taking swap fees into account\n    const currentInvariant = exports._calculateInvariant(amp, balances, true);\n    const newInvariant = exports._calculateInvariant(amp, newBalances, false);\n    const invariantRatio = fp.divDown(newInvariant, currentInvariant);\n    // If the invariant didn't increase for any reason, we simply don't mint BPT\n    if (invariantRatio.gt(fp.ONE)) {\n        return fp.mulDown(bptTotalSupply, fp.sub(invariantRatio, fp.ONE));\n    }\n    else {\n        return math.ZERO;\n    }\n};\nexports._calcBptOutGivenExactTokensIn = _calcBptOutGivenExactTokensIn;\nconst _calcTokenInGivenExactBptOut = (amp, balances, tokenIndex, bptAmountOut, bptTotalSupply, swapFeePercentage) => {\n    // Token in, so we round up overall.\n    // Get the current invariant\n    const currentInvariant = exports._calculateInvariant(amp, balances, true);\n    // Calculate new invariant\n    const newInvariant = fp.mulUp(fp.divUp(fp.add(bptTotalSupply, bptAmountOut), bptTotalSupply), currentInvariant);\n    // Calculate amount in without fee.\n    const newBalanceTokenIndex = _getTokenBalanceGivenInvariantAndAllOtherBalances(amp, balances, newInvariant, tokenIndex);\n    const amountInWithoutFee = fp.sub(newBalanceTokenIndex, balances[tokenIndex]);\n    // First calculate the sum of all token balances, which will be used to calculate\n    // the current weight of each token\n    let sumBalances = math.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = fp.add(sumBalances, balances[i]);\n    }\n    // We can now compute how much extra balance is being deposited and used in virtual swaps, and charge swap fees\n    // accordingly.\n    const currentWeight = fp.divDown(balances[tokenIndex], sumBalances);\n    const taxablePercentage = fp.complement(currentWeight);\n    const taxableAmount = fp.mulUp(amountInWithoutFee, taxablePercentage);\n    const nonTaxableAmount = fp.sub(amountInWithoutFee, taxableAmount);\n    return fp.add(nonTaxableAmount, fp.divUp(taxableAmount, fp.sub(fp.ONE, swapFeePercentage)));\n};\nexports._calcTokenInGivenExactBptOut = _calcTokenInGivenExactBptOut;\n/*\n  Flow of calculations:\n  amountsTokenOut -> amountsOutProportional ->\n  amountOutPercentageExcess -> amountOutBeforeFee -> newInvariant -> amountBPTIn\n*/\nconst _calcBptInGivenExactTokensOut = (amp, balances, amountsOut, bptTotalSupply, swapFeePercentage) => {\n    // BPT in, so we round up overall.\n    // First loop calculates the sum of all token balances, which will be used to calculate\n    // the current weights of each token relative to this sum\n    let sumBalances = math.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = fp.add(sumBalances, balances[i]);\n    }\n    // Calculate the weighted balance ratio without considering fees\n    const balanceRatiosWithoutFee = new Array(amountsOut.length);\n    let invariantRatioWithoutFees = math.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        const currentWeight = fp.divUp(balances[i], sumBalances);\n        balanceRatiosWithoutFee[i] = fp.divUp(fp.sub(balances[i], amountsOut[i]), balances[i]);\n        invariantRatioWithoutFees = fp.add(invariantRatioWithoutFees, fp.mulUp(balanceRatiosWithoutFee[i], currentWeight));\n    }\n    // Second loop calculates new amounts in, taking into account the fee on the percentage excess\n    const newBalances = new Array(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        // Swap fees are typically charged on 'token in', but there is no 'token in' here, so we apply it to\n        // 'token out'. This results in slightly larger price impact.\n        let amountOutWithFee;\n        if (invariantRatioWithoutFees.gt(balanceRatiosWithoutFee[i])) {\n            const nonTaxableAmount = fp.mulDown(balances[i], fp.complement(invariantRatioWithoutFees));\n            const taxableAmount = fp.sub(amountsOut[i], nonTaxableAmount);\n            amountOutWithFee = fp.add(nonTaxableAmount, fp.divUp(taxableAmount, fp.sub(fp.ONE, swapFeePercentage)));\n        }\n        else {\n            amountOutWithFee = amountsOut[i];\n        }\n        newBalances[i] = fp.sub(balances[i], amountOutWithFee);\n    }\n    // Get current and new invariants, taking into account swap fees\n    const currentInvariant = exports._calculateInvariant(amp, balances, true);\n    const newInvariant = exports._calculateInvariant(amp, newBalances, false);\n    const invariantRatio = fp.divDown(newInvariant, currentInvariant);\n    // return amountBPTIn\n    return fp.mulUp(bptTotalSupply, fp.complement(invariantRatio));\n};\nexports._calcBptInGivenExactTokensOut = _calcBptInGivenExactTokensOut;\nconst _calcTokenOutGivenExactBptIn = (amp, balances, tokenIndex, bptAmountIn, bptTotalSupply, swapFeePercentage) => {\n    // Token out, so we round down overall.\n    // Get the current and new invariants. Since we need a bigger new invariant, we round the current one up.\n    const currentInvariant = exports._calculateInvariant(amp, balances, true);\n    const newInvariant = fp.mulUp(fp.divUp(fp.sub(bptTotalSupply, bptAmountIn), bptTotalSupply), currentInvariant);\n    // Calculate amount out without fee\n    const newBalanceTokenIndex = _getTokenBalanceGivenInvariantAndAllOtherBalances(amp, balances, newInvariant, tokenIndex);\n    const amountOutWithoutFee = fp.sub(balances[tokenIndex], newBalanceTokenIndex);\n    // First calculate the sum of all token balances, which will be used to calculate\n    // the current weight of each token\n    let sumBalances = math.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = fp.add(sumBalances, balances[i]);\n    }\n    // We can now compute how much excess balance is being withdrawn as a result of the virtual swaps, which result\n    // in swap fees.\n    const currentWeight = fp.divDown(balances[tokenIndex], sumBalances);\n    const taxablePercentage = fp.complement(currentWeight);\n    // Swap fees are typically charged on 'token in', but there is no 'token in' here, so we apply it\n    // to 'token out'. This results in slightly larger price impact. Fees are rounded up.\n    const taxableAmount = fp.mulUp(amountOutWithoutFee, taxablePercentage);\n    const nonTaxableAmount = fp.sub(amountOutWithoutFee, taxableAmount);\n    return fp.add(nonTaxableAmount, fp.mulDown(taxableAmount, fp.sub(fp.ONE, swapFeePercentage)));\n};\nexports._calcTokenOutGivenExactBptIn = _calcTokenOutGivenExactBptIn;\nconst _calcTokensOutGivenExactBptIn = (balances, bptAmountIn, bptTotalSupply) => {\n    /**********************************************************************************************\n    // exactBPTInForTokensOut                                                                    //\n    // (per token)                                                                               //\n    // aO = tokenAmountOut             /        bptIn         \\                                  //\n    // b = tokenBalance      a0 = b * | ---------------------  |                                 //\n    // bptIn = bptAmountIn             \\     bptTotalSupply    /                                 //\n    // bpt = bptTotalSupply                                                                      //\n    **********************************************************************************************/\n    // Since we're computing an amount out, we round down overall. This means rounding down on both the\n    // multiplication and division.\n    const bptRatio = fp.divDown(bptAmountIn, bptTotalSupply);\n    const amountsOut = new Array(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        amountsOut[i] = fp.mulDown(balances[i], bptRatio);\n    }\n    return amountsOut;\n};\nexports._calcTokensOutGivenExactBptIn = _calcTokensOutGivenExactBptIn;\n// The amplification parameter equals: A n^(n-1)\nconst _calcDueTokenProtocolSwapFeeAmount = (amplificationParameter, balances, lastInvariant, tokenIndex, protocolSwapFeePercentage) => {\n    /**************************************************************************************************************\n    // oneTokenSwapFee - polynomial equation to solve                                                            //\n    // af = fee amount to calculate in one token                                                                 //\n    // bf = balance of fee token                                                                                 //\n    // f = bf - af (finalBalanceFeeToken)                                                                        //\n    // D = old invariant                                            D                     D^(n+1)                //\n    // A = amplification coefficient               f^2 + ( S - ----------  - D) * f -  ------------- = 0         //\n    // n = number of tokens                                    (A * n^n)               A * n^2n * P              //\n    // S = sum of final balances but f                                                                           //\n    // P = product of final balances but f                                                                       //\n    **************************************************************************************************************/\n    // Protocol swap fee amount, so we round down overall.\n    const finalBalanceFeeToken = _getTokenBalanceGivenInvariantAndAllOtherBalances(amplificationParameter, balances, lastInvariant, tokenIndex);\n    if (balances[tokenIndex].lte(finalBalanceFeeToken)) {\n        // This shouldn't happen outside of rounding errors, but have this safeguard nonetheless to prevent the Pool\n        // from entering a locked state in which joins and exits revert while computing accumulated swap fees.\n        return math.ZERO;\n    }\n    // Result is rounded down\n    const accumulatedTokenSwapFees = fp.sub(balances[tokenIndex], finalBalanceFeeToken);\n    return fp.divDown(fp.mulDown(accumulatedTokenSwapFees, protocolSwapFeePercentage), fp.ONE);\n};\nexports._calcDueTokenProtocolSwapFeeAmount = _calcDueTokenProtocolSwapFeeAmount;\n// This function calculates the balance of a given token (tokenIndex)\n// given all the other balances and the invariant\nconst _getTokenBalanceGivenInvariantAndAllOtherBalances = (amplificationParameter, balances, invariant, tokenIndex) => {\n    // Rounds result up overall\n    const numTokens = big_number_1.bn(balances.length);\n    const ampTimesTotal = math.mul(amplificationParameter, numTokens);\n    let sum = balances[0];\n    let P_D = math.mul(numTokens, balances[0]);\n    for (let j = 1; j < balances.length; j++) {\n        P_D = math.divDown(math.mul(math.mul(P_D, balances[j]), numTokens), invariant);\n        sum = fp.add(sum, balances[j]);\n    }\n    sum = fp.sub(sum, balances[tokenIndex]);\n    const inv2 = math.mul(invariant, invariant);\n    // We remove the balance fromm c by multiplying it\n    const c = math.mul(math.mul(math.divUp(inv2, math.mul(ampTimesTotal, P_D)), exports.AMP_PRECISION), balances[tokenIndex]);\n    const b = fp.add(sum, math.mul(math.divDown(invariant, ampTimesTotal), exports.AMP_PRECISION));\n    // We iterate to find the balance\n    let prevTokenBalance = math.ZERO;\n    // We multiply the first iteration outside the loop with the invariant to set the value of the\n    // initial approximation.\n    let tokenBalance = math.divUp(fp.add(inv2, c), fp.add(invariant, b));\n    for (let i = 0; i < 255; i++) {\n        prevTokenBalance = tokenBalance;\n        tokenBalance = math.divUp(fp.add(math.mul(tokenBalance, tokenBalance), c), fp.sub(fp.add(math.mul(tokenBalance, math.TWO), b), invariant));\n        if (tokenBalance.gt(prevTokenBalance)) {\n            if (fp.sub(tokenBalance, prevTokenBalance).lte(math.ONE)) {\n                return tokenBalance;\n            }\n        }\n        else if (fp.sub(prevTokenBalance, tokenBalance).lte(math.ONE)) {\n            return tokenBalance;\n        }\n    }\n    throw new Error(\"STABLE_GET_BALANCE_DIDNT_CONVERGE\");\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_1 = require(\"../../subgraph/index\");\nconst big_number_1 = require(\"../../utils/big-number\");\nconst common_1 = require(\"../../utils/common\");\nconst base_1 = require(\"../base\");\nconst math = require(\"./math\");\nclass StablePool extends base_1.default {\n    // ---------------------- Constructor ----------------------\n    constructor(params) {\n        super(params);\n        if (params.tokens.length > math.MAX_STABLE_TOKENS) {\n            throw new Error(\"MAX_STABLE_TOKENS\");\n        }\n        this._tokens = common_1.shallowCopyAll(params.tokens);\n        if (big_number_1.bn(params.amplificationParameter).lt(math.MIN_AMP)) {\n            throw new Error(\"MIN_AMP\");\n        }\n        if (big_number_1.bn(params.amplificationParameter).gt(math.MAX_AMP)) {\n            throw new Error(\"MAX_AMP\");\n        }\n        this._amplificationParameter = big_number_1.bn(params.amplificationParameter)\n            .times(math.AMP_PRECISION)\n            .toString();\n    }\n    // ---------------------- Getters ----------------------\n    get tokens() {\n        // Shallow-copy to disallow direct changes\n        return common_1.shallowCopyAll(this._tokens);\n    }\n    get amplificationParameter() {\n        return big_number_1.bn(this._amplificationParameter).idiv(math.AMP_PRECISION).toString();\n    }\n    // ---------------------- Subgraph initializer ----------------------\n    static async initFromRealPool(poolId, query = false, blockNumber, testnet) {\n        const pool = await index_1.getPool(poolId, blockNumber, testnet);\n        if (!pool) {\n            throw new Error(\"Could not fetch pool data\");\n        }\n        if (pool.poolType !== \"Stable\") {\n            throw new Error(\"Pool must be stable\");\n        }\n        const id = pool.id;\n        const address = pool.address;\n        const bptTotalSupply = pool.totalShares;\n        const swapFeePercentage = pool.swapFee;\n        const amplificationParameter = pool.amp;\n        const tokens = [];\n        for (const token of pool.tokens) {\n            tokens.push({\n                address: token.address,\n                symbol: token.symbol,\n                balance: token.balance,\n                decimals: token.decimals,\n            });\n        }\n        return new StablePool({\n            id,\n            address,\n            tokens,\n            bptTotalSupply,\n            swapFeePercentage,\n            amplificationParameter,\n            query,\n        });\n    }\n    // ---------------------- Swap actions ----------------------\n    swapGivenIn(tokenInSymbol, tokenOutSymbol, amountIn) {\n        const tokenIndexIn = this._tokens.findIndex((t) => t.symbol === tokenInSymbol);\n        const tokenIndexOut = this._tokens.findIndex((t) => t.symbol === tokenOutSymbol);\n        const tokenIn = this._tokens[tokenIndexIn];\n        const tokenOut = this._tokens[tokenIndexOut];\n        const scaledAmountOut = math._calcOutGivenIn(big_number_1.bn(this._amplificationParameter), this._tokens.map((t) => this._upScale(t.balance, t.decimals)), tokenIndexIn, tokenIndexOut, this._upScale(amountIn, tokenIn.decimals), this._upScale(this._swapFeePercentage, 18));\n        const amountOut = this._downScaleDown(scaledAmountOut, tokenOut.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenIn.balance = big_number_1.bn(tokenIn.balance).plus(amountIn).toString();\n            tokenOut.balance = big_number_1.bn(tokenOut.balance).minus(amountOut).toString();\n        }\n        return amountOut.toString();\n    }\n    swapGivenOut(tokenInSymbol, tokenOutSymbol, amountOut) {\n        const tokenIndexIn = this._tokens.findIndex((t) => t.symbol === tokenInSymbol);\n        const tokenIndexOut = this._tokens.findIndex((t) => t.symbol === tokenOutSymbol);\n        const tokenIn = this._tokens[tokenIndexIn];\n        const tokenOut = this._tokens[tokenIndexOut];\n        const scaledAmountIn = math._calcInGivenOut(big_number_1.bn(this._amplificationParameter), this._tokens.map((t) => this._upScale(t.balance, t.decimals)), tokenIndexIn, tokenIndexOut, this._upScale(amountOut, tokenOut.decimals), this._upScale(this._swapFeePercentage, 18));\n        const amountIn = this._downScaleUp(scaledAmountIn, tokenIn.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenIn.balance = big_number_1.bn(tokenIn.balance).plus(amountIn).toString();\n            tokenOut.balance = big_number_1.bn(tokenOut.balance).minus(amountOut).toString();\n        }\n        return amountIn.toString();\n    }\n    // ---------------------- LP actions ----------------------\n    joinExactTokensInForBptOut(amountsIn) {\n        if (Object.keys(amountsIn).length !== this._tokens.length) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledBptOut = math._calcBptOutGivenExactTokensIn(big_number_1.bn(this._amplificationParameter), this._tokens.map((t) => this._upScale(t.balance, t.decimals)), this._tokens.map((t) => this._upScale(amountsIn[t.symbol], t.decimals)), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const bptOut = this._downScaleDown(scaledBptOut, 18);\n        // In-place balance updates\n        if (!this._query) {\n            for (let i = 0; i < this._tokens.length; i++) {\n                const token = this._tokens[i];\n                token.balance = big_number_1.bn(token.balance)\n                    .plus(amountsIn[token.symbol])\n                    .toString();\n            }\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).plus(bptOut).toString();\n        }\n        return bptOut.toString();\n    }\n    joinTokenInForExactBptOut(tokenInSymbol, bptOut) {\n        const tokenIndex = this._tokens.findIndex((t) => t.symbol === tokenInSymbol);\n        const tokenIn = this._tokens[tokenIndex];\n        if (!tokenIn) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledAmountIn = math._calcTokenInGivenExactBptOut(big_number_1.bn(this._amplificationParameter), this._tokens.map((t) => this._upScale(t.balance, t.decimals)), tokenIndex, this._upScale(bptOut, 18), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const amountIn = this._downScaleUp(scaledAmountIn, tokenIn.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenIn.balance = big_number_1.bn(tokenIn.balance).plus(amountIn).toString();\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).plus(bptOut).toString();\n        }\n        return amountIn.toString();\n    }\n    exitExactBptInForTokenOut(tokenOutSymbol, bptIn) {\n        const tokenIndex = this._tokens.findIndex((t) => t.symbol === tokenOutSymbol);\n        const tokenOut = this._tokens[tokenIndex];\n        if (!tokenOut) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledAmountOut = math._calcTokenOutGivenExactBptIn(big_number_1.bn(this._amplificationParameter), this._tokens.map((t) => this._upScale(t.balance, t.decimals)), tokenIndex, this._upScale(bptIn, 18), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const amountOut = this._downScaleDown(scaledAmountOut, tokenOut.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenOut.balance = big_number_1.bn(tokenOut.balance).minus(amountOut).toString();\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).minus(bptIn).toString();\n        }\n        return amountOut.toString();\n    }\n    exitExactBptInForTokensOut(bptIn) {\n        // Exactly match the EVM version\n        if (big_number_1.bn(bptIn).gt(this._bptTotalSupply)) {\n            throw new Error(\"BPT in exceeds total supply\");\n        }\n        const scaledAmountsOut = math._calcTokensOutGivenExactBptIn(this._tokens.map((t) => this._upScale(t.balance, t.decimals)), this._upScale(bptIn, 18), this._upScale(this._bptTotalSupply, 18));\n        const amountsOut = scaledAmountsOut.map((amount, i) => this._downScaleDown(amount, this._tokens[i].decimals));\n        // In-place balance updates\n        if (!this._query) {\n            for (let i = 0; i < this._tokens.length; i++) {\n                const token = this._tokens[i];\n                token.balance = big_number_1.bn(token.balance).minus(amountsOut[i]).toString();\n            }\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).minus(bptIn).toString();\n        }\n        return amountsOut.map((a) => a.toString());\n    }\n    exitBptInForExactTokensOut(amountsOut) {\n        if (Object.keys(amountsOut).length !== this._tokens.length) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledBptIn = math._calcBptInGivenExactTokensOut(big_number_1.bn(this._amplificationParameter), this._tokens.map((t) => this._upScale(t.balance, t.decimals)), this._tokens.map((t) => this._upScale(amountsOut[t.symbol], t.decimals)), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const bptIn = this._downScaleDown(scaledBptIn, 18);\n        // In-place balance updates\n        if (!this._query) {\n            for (let i = 0; i < this._tokens.length; i++) {\n                const token = this._tokens[i];\n                token.balance = big_number_1.bn(token.balance)\n                    .minus(amountsOut[token.symbol])\n                    .toString();\n            }\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).minus(bptIn).toString();\n        }\n        return bptIn.toString();\n    }\n}\nexports.default = StablePool;\n","\"use strict\";\n// Ported from Solidity:\n// https://github.com/balancer-labs/balancer-core-v2/blob/70843e6a61ad11208c1cfabf5cfe15be216ca8d3/pkg/pool-weighted/contracts/WeightedMath.sol\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._calcBptInGivenExactTokenOut = exports._calcBptOutGivenExactTokenIn = exports._calcDueTokenProtocolSwapFeeAmount = exports._calcTokensOutGivenExactBptIn = exports._calcTokenOutGivenExactBptIn = exports._calcBptInGivenExactTokensOut = exports._calcTokenInGivenExactBptOut = exports._calcBptOutGivenExactTokensIn = exports._calcInGivenOut = exports._calcOutGivenIn = exports._calculateInvariant = void 0;\nconst big_number_1 = require(\"../../utils/big-number\");\nconst fp = require(\"../../utils/math/fixed-point\");\n// Swap limits: amounts swapped may not be larger than this percentage of total balance\nconst MAX_IN_RATIO = big_number_1.bn(\"300000000000000000\"); // 0.3e18\nconst MAX_OUT_RATIO = big_number_1.bn(\"300000000000000000\"); // 0.3e18\n// Invariant growth limit: non-proportional joins cannot cause the invariant to increase by more than this ratio\nconst MAX_INVARIANT_RATIO = big_number_1.bn(\"3000000000000000000\"); // 3e18\n// Invariant shrink limit: non-proportional exits cannot cause the invariant to decrease by less than this ratio\nconst MIN_INVARIANT_RATIO = big_number_1.bn(\"700000000000000000\"); // 0.7e18\nconst _calculateInvariant = (normalizedWeights, balances) => {\n    /*****************************************************************************************\n    // invariant               _____                                                        //\n    // wi = weight index i      | |      wi                                                 //\n    // bi = balance index i     | |  bi ^   = i                                             //\n    // i = invariant                                                                        //\n    *****************************************************************************************/\n    let invariant = fp.ONE;\n    for (let i = 0; i < normalizedWeights.length; i++) {\n        invariant = fp.mulDown(invariant, fp.powDown(balances[i], normalizedWeights[i]));\n    }\n    if (invariant.lte(fp.ZERO)) {\n        throw new Error(\"ZERO_INVARIANT\");\n    }\n    return invariant;\n};\nexports._calculateInvariant = _calculateInvariant;\n// Computes how many tokens can be taken out of a pool if `amountIn` is sent, given the\n// current balances and weights.\nconst _calcOutGivenIn = (balanceIn, weightIn, balanceOut, weightOut, amountIn, swapFeePercentage) => {\n    /*****************************************************************************************\n    // outGivenIn                                                                           //\n    // ao = amountOut                                                                       //\n    // bo = balanceOut                                                                      //\n    // bi = balanceIn              /      /            bi             \\    (wi / wo) \\      //\n    // ai = amountIn    ao = bo * |  1 - | --------------------------  | ^            |     //\n    // wi = weightIn               \\      \\       ( bi + ai )         /              /      //\n    // wo = weightOut                                                                       //\n    *****************************************************************************************/\n    // Subtract the fee from the amount in if requested\n    if (swapFeePercentage) {\n        amountIn = fp.sub(amountIn, fp.mulUp(amountIn, swapFeePercentage));\n    }\n    // Amount out, so we round down overall\n    // The multiplication rounds down, and the subtrahend (power) rounds up (so the base rounds up too)\n    // Because bi / (bi + ai) <= 1, the exponent rounds down\n    // Cannot exceed maximum in ratio\n    if (amountIn.gt(fp.mulDown(balanceIn, MAX_IN_RATIO))) {\n        throw new Error(\"MAX_IN_RATIO\");\n    }\n    const denominator = fp.add(balanceIn, amountIn);\n    const base = fp.divUp(balanceIn, denominator);\n    const exponent = fp.divDown(weightIn, weightOut);\n    const power = fp.powUp(base, exponent);\n    return fp.mulDown(balanceOut, fp.complement(power));\n};\nexports._calcOutGivenIn = _calcOutGivenIn;\n// Computes how many tokens must be sent to a pool in order to take `amountOut`, given the\n// current balances and weights.\nconst _calcInGivenOut = (balanceIn, weightIn, balanceOut, weightOut, amountOut, swapFeePercentage) => {\n    /*****************************************************************************************\n    // inGivenOut                                                                           //\n    // ao = amountOut                                                                       //\n    // bo = balanceOut                                                                      //\n    // bi = balanceIn              /  /            bo             \\    (wo / wi)      \\     //\n    // ai = amountIn    ai = bi * |  | --------------------------  | ^            - 1  |    //\n    // wi = weightIn               \\  \\       ( bo - ao )         /                   /     //\n    // wo = weightOut                                                                       //\n    *****************************************************************************************/\n    // Amount in, so we round up overall\n    // The multiplication rounds up, and the power rounds up (so the base rounds up too)\n    // Because bo / (bo - ao) >= 1, the exponent rounds up\n    // Cannot exceed maximum out ratio\n    if (amountOut.gt(fp.mulDown(balanceOut, MAX_OUT_RATIO))) {\n        throw new Error(\"MAX_OUT_RATIO\");\n    }\n    const base = fp.divUp(balanceOut, fp.sub(balanceOut, amountOut));\n    const exponent = fp.divUp(weightOut, weightIn);\n    const power = fp.powUp(base, exponent);\n    const ratio = fp.sub(power, fp.ONE);\n    let amountIn = fp.mulUp(balanceIn, ratio);\n    // Add the fee to the amount in if requested\n    if (swapFeePercentage) {\n        amountIn = fp.divUp(amountIn, fp.complement(swapFeePercentage));\n    }\n    return amountIn;\n};\nexports._calcInGivenOut = _calcInGivenOut;\nconst _calcBptOutGivenExactTokensIn = (balances, normalizedWeights, amountsIn, bptTotalSupply, swapFee) => {\n    // BPT out, so we round down overall\n    const balanceRatiosWithFee = new Array(amountsIn.length);\n    let invariantRatioWithFees = fp.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        balanceRatiosWithFee[i] = fp.divDown(fp.add(balances[i], amountsIn[i]), balances[i]);\n        invariantRatioWithFees = fp.add(invariantRatioWithFees, fp.mulDown(balanceRatiosWithFee[i], normalizedWeights[i]));\n    }\n    let invariantRatio = fp.ONE;\n    for (let i = 0; i < balances.length; i++) {\n        let amountInWithoutFee;\n        if (balanceRatiosWithFee[i].gt(invariantRatioWithFees)) {\n            const nonTaxableAmount = fp.mulDown(balances[i], fp.sub(invariantRatioWithFees, fp.ONE));\n            const taxableAmount = fp.sub(amountsIn[i], nonTaxableAmount);\n            amountInWithoutFee = fp.add(nonTaxableAmount, fp.mulDown(taxableAmount, fp.sub(fp.ONE, swapFee)));\n        }\n        else {\n            amountInWithoutFee = amountsIn[i];\n        }\n        const balanceRatio = fp.divDown(fp.add(balances[i], amountInWithoutFee), balances[i]);\n        invariantRatio = fp.mulDown(invariantRatio, fp.powDown(balanceRatio, normalizedWeights[i]));\n    }\n    if (invariantRatio.gte(fp.ONE)) {\n        return fp.mulDown(bptTotalSupply, fp.sub(invariantRatio, fp.ONE));\n    }\n    else {\n        return fp.ZERO;\n    }\n};\nexports._calcBptOutGivenExactTokensIn = _calcBptOutGivenExactTokensIn;\nconst _calcTokenInGivenExactBptOut = (balance, normalizedWeight, bptAmountOut, bptTotalSupply, swapFee) => {\n    /*****************************************************************************************\n    // tokenInForExactBptOut                                                                //\n    // a = amountIn                                                                         //\n    // b = balance                      /  /     bpt + bptOut     \\    (1 / w)      \\       //\n    // bptOut = bptAmountOut   a = b * |  | ---------------------- | ^          - 1  |      //\n    // bpt = bptTotalSupply             \\  \\         bpt          /                 /       //\n    // w = normalizedWeight                                                                 //\n    *****************************************************************************************/\n    // Token in, so we round up overall\n    // Calculate the factor by which the invariant will increase after minting `bptAmountOut`\n    const invariantRatio = fp.divUp(fp.add(bptTotalSupply, bptAmountOut), bptTotalSupply);\n    if (invariantRatio.gt(MAX_INVARIANT_RATIO)) {\n        throw new Error(\"MAX_OUT_BPT_FOR_TOKEN_IN\");\n    }\n    // Calculate by how much the token balance has to increase to cause `invariantRatio`\n    const balanceRatio = fp.powUp(invariantRatio, fp.divUp(fp.ONE, normalizedWeight));\n    const amountInWithoutFee = fp.mulUp(balance, fp.sub(balanceRatio, fp.ONE));\n    // We can now compute how much extra balance is being deposited and used in virtual swaps, and charge swap fees accordingly\n    const taxablePercentage = fp.complement(normalizedWeight);\n    const taxableAmount = fp.mulUp(amountInWithoutFee, taxablePercentage);\n    const nonTaxableAmount = fp.sub(amountInWithoutFee, taxableAmount);\n    return fp.add(nonTaxableAmount, fp.divUp(taxableAmount, fp.complement(swapFee)));\n};\nexports._calcTokenInGivenExactBptOut = _calcTokenInGivenExactBptOut;\nconst _calcBptInGivenExactTokensOut = (balances, normalizedWeights, amountsOut, bptTotalSupply, swapFee) => {\n    // BPT in, so we round up overall\n    const balanceRatiosWithoutFee = new Array(amountsOut.length);\n    let invariantRatioWithoutFees = fp.ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        balanceRatiosWithoutFee[i] = fp.divUp(fp.sub(balances[i], amountsOut[i]), balances[i]);\n        invariantRatioWithoutFees = fp.add(invariantRatioWithoutFees, fp.mulUp(balanceRatiosWithoutFee[i], normalizedWeights[i]));\n    }\n    let invariantRatio = fp.ONE;\n    for (let i = 0; i < balances.length; i++) {\n        // Swap fees are typically charged on 'tokenIn', but there is no 'tokenIn' here, so we apply it to\n        // 'tokenOut' - this results in slightly larger price impact\n        let amountOutWithFee;\n        if (invariantRatioWithoutFees.gt(balanceRatiosWithoutFee[i])) {\n            const nonTaxableAmount = fp.mulDown(balances[i], fp.complement(invariantRatioWithoutFees));\n            const taxableAmount = fp.sub(amountsOut[i], nonTaxableAmount);\n            amountOutWithFee = fp.add(nonTaxableAmount, fp.divUp(taxableAmount, fp.complement(swapFee)));\n        }\n        else {\n            amountOutWithFee = amountsOut[i];\n        }\n        const balanceRatio = fp.divDown(fp.sub(balances[i], amountOutWithFee), balances[i]);\n        invariantRatio = fp.mulDown(invariantRatio, fp.powDown(balanceRatio, normalizedWeights[i]));\n    }\n    return fp.mulUp(bptTotalSupply, fp.complement(invariantRatio));\n};\nexports._calcBptInGivenExactTokensOut = _calcBptInGivenExactTokensOut;\nconst _calcTokenOutGivenExactBptIn = (balance, normalizedWeight, bptAmountIn, bptTotalSupply, swapFee) => {\n    /*****************************************************************************************\n    // exactBptInForTokenOut                                                                //\n    // a = amountOut                                                                        //\n    // b = balance                     /      /    bpt - bptIn    \\    (1 / w)  \\           //\n    // bptIn = bptAmountIn    a = b * |  1 - | ------------------- | ^           |          //\n    // bpt = bptTotalSupply            \\      \\        bpt        /             /           //\n    // w = weight                                                                           //\n    *****************************************************************************************/\n    // Token out, so we round down overall\n    // The multiplication rounds down, but the power rounds up (so the base rounds up)\n    // Because (bpt - bptIn) / bpt <= 1, the exponent rounds down\n    // Calculate the factor by which the invariant will decrease after burning `bptAmountIn`\n    const invariantRatio = fp.divUp(fp.sub(bptTotalSupply, bptAmountIn), bptTotalSupply);\n    if (invariantRatio.lt(MIN_INVARIANT_RATIO)) {\n        throw new Error(\"MIN_BPT_IN_FOR_TOKEN_OUT\");\n    }\n    // Calculate by how much the token balance has to increase to cause `invariantRatio`\n    const balanceRatio = fp.powUp(invariantRatio, fp.divDown(fp.ONE, normalizedWeight));\n    // Because of rounding up, `balanceRatio` can be greater than one, so we use its complement\n    const amountOutWithoutFee = fp.mulDown(balance, fp.complement(balanceRatio));\n    // We can now compute how much excess balance is being withdrawn as a result of the virtual swaps,\n    // which result in swap fees\n    const taxablePercentage = fp.complement(normalizedWeight);\n    // Swap fees are typically charged on 'tokenIn', but there is no 'tokenIn' here, so we apply it\n    // to 'tokenOut' - this results in slightly larger price impact (fees are rounded up)\n    const taxableAmount = fp.mulUp(amountOutWithoutFee, taxablePercentage);\n    const nonTaxableAmount = fp.sub(amountOutWithoutFee, taxableAmount);\n    return fp.add(nonTaxableAmount, fp.mulDown(taxableAmount, fp.complement(swapFee)));\n};\nexports._calcTokenOutGivenExactBptIn = _calcTokenOutGivenExactBptIn;\nconst _calcTokensOutGivenExactBptIn = (balances, bptAmountIn, bptTotalSupply) => {\n    /*****************************************************************************************\n    // exactBptInForTokensOut                                                               //\n    // (formula per token)                                                                  //\n    // ao = amountOut                  /   bptIn   \\                                        //\n    // b = balance           ao = b * | ----------- |                                       //\n    // bptIn = bptAmountIn             \\    bpt    /                                        //\n    // bpt = bptTotalSupply                                                                 //\n    *****************************************************************************************/\n    // Token out, so we round down overall\n    // This means rounding down on both multiplication and division\n    const bptRatio = fp.divDown(bptAmountIn, bptTotalSupply);\n    const amountsOut = new Array(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        amountsOut[i] = fp.mulDown(balances[i], bptRatio);\n    }\n    return amountsOut;\n};\nexports._calcTokensOutGivenExactBptIn = _calcTokensOutGivenExactBptIn;\nconst _calcDueTokenProtocolSwapFeeAmount = (balance, normalizedWeight, previousInvariant, currentInvariant, protocolSwapFeePercentage) => {\n    /*********************************************************************************\n    /*  protocolSwapFeePercentage * balanceToken * ( 1 - (previousInvariant / currentInvariant) ^ (1 / weightToken))\n    *********************************************************************************/\n    if (currentInvariant.lte(previousInvariant)) {\n        // This shouldn't happen outside of rounding errors, but have this safeguard nonetheless to prevent the Pool\n        // from entering a locked state in which joins and exits revert while computing accumulated swap fees.\n        return fp.ZERO;\n    }\n    // We round down to prevent issues in the Pool's accounting, even if it means paying slightly less in protocol\n    // fees to the Vault.\n    // Fee percentage and balance multiplications round down, while the subtrahend (power) rounds up (as does the\n    // base). Because previousInvariant / currentInvariant <= 1, the exponent rounds down.\n    let base = fp.divUp(previousInvariant, currentInvariant);\n    const exponent = fp.divDown(fp.ONE, normalizedWeight);\n    // Because the exponent is larger than one, the base of the power function has a lower bound. We cap to this\n    // value to avoid numeric issues, which means in the extreme case (where the invariant growth is larger than\n    // 1 / min exponent) the Pool will pay less in protocol fees than it should.\n    base = base.gte(fp.MIN_POW_BASE_FREE_EXPONENT)\n        ? base\n        : fp.MIN_POW_BASE_FREE_EXPONENT;\n    const power = fp.powUp(base, exponent);\n    const tokenAccruedFees = fp.mulDown(balance, fp.complement(power));\n    return fp.mulDown(tokenAccruedFees, protocolSwapFeePercentage);\n};\nexports._calcDueTokenProtocolSwapFeeAmount = _calcDueTokenProtocolSwapFeeAmount;\n// Convenience method needed by the SOR package (adapted from _calcBptOutGivenExactTokensIn)\nconst _calcBptOutGivenExactTokenIn = (balance, normalizedWeight, amountIn, bptTotalSupply, swapFee) => {\n    // BPT out, so we round down overall\n    const tokenBalanceRatioWithoutFee = fp.divDown(fp.add(balance, amountIn), balance);\n    const weightedBalanceRatio = fp.mulDown(tokenBalanceRatioWithoutFee, normalizedWeight);\n    let invariantRatio = fp.ONE;\n    // Percentage of the amount supplied that will be swapped for other tokens in the pool\n    let tokenBalancePercentageExcess;\n    // Some tokens might have amounts supplied in excess of a 'balanced' join: these are identified if\n    // the token's balance ratio sans fee is larger than the weighted balance ratio, and swap fees charged\n    // on the amount to swap\n    if (weightedBalanceRatio.gte(tokenBalanceRatioWithoutFee)) {\n        tokenBalancePercentageExcess = fp.ZERO;\n    }\n    else {\n        tokenBalancePercentageExcess = fp.divUp(fp.sub(tokenBalanceRatioWithoutFee, weightedBalanceRatio), fp.sub(tokenBalanceRatioWithoutFee, fp.ONE));\n    }\n    const swapFeeExcess = fp.mulUp(swapFee, tokenBalancePercentageExcess);\n    const amountInAfterFee = fp.mulDown(amountIn, fp.complement(swapFeeExcess));\n    const tokenBalanceRatio = fp.add(fp.ONE, fp.divDown(amountInAfterFee, balance));\n    invariantRatio = fp.mulDown(invariantRatio, fp.powDown(tokenBalanceRatio, normalizedWeight));\n    return fp.mulDown(bptTotalSupply, fp.sub(invariantRatio, fp.ONE));\n};\nexports._calcBptOutGivenExactTokenIn = _calcBptOutGivenExactTokenIn;\n// Convenience method needed by the SOR package (adapted from _calcBptInGivenExactTokensOut)\nfunction _calcBptInGivenExactTokenOut(balance, normalizedWeight, amountOut, bptTotalSupply, swapFee) {\n    // BPT in, so we round up overall\n    const tokenBalanceRatioWithoutFee = fp.divUp(fp.sub(balance, amountOut), balance);\n    const weightedBalanceRatio = fp.mulUp(tokenBalanceRatioWithoutFee, normalizedWeight);\n    let invariantRatio = fp.ONE;\n    // Percentage of the amount supplied that will be swapped for other tokens in the pool\n    let tokenBalancePercentageExcess;\n    // For each ratioSansFee, compare with the total weighted ratio (weightedBalanceRatio) and\n    // decrease the fee from what goes above it\n    if (weightedBalanceRatio.lte(tokenBalanceRatioWithoutFee)) {\n        tokenBalancePercentageExcess = fp.ZERO;\n    }\n    else {\n        tokenBalancePercentageExcess = fp.divUp(fp.sub(weightedBalanceRatio, tokenBalanceRatioWithoutFee), fp.complement(tokenBalanceRatioWithoutFee));\n    }\n    const swapFeeExcess = fp.mulUp(swapFee, tokenBalancePercentageExcess);\n    const amountOutBeforeFee = fp.divUp(amountOut, fp.complement(swapFeeExcess));\n    const tokenBalanceRatio = fp.complement(fp.divUp(amountOutBeforeFee, balance));\n    invariantRatio = fp.mulDown(invariantRatio, fp.powDown(tokenBalanceRatio, normalizedWeight));\n    return fp.mulUp(bptTotalSupply, fp.complement(invariantRatio));\n}\nexports._calcBptInGivenExactTokenOut = _calcBptInGivenExactTokenOut;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_1 = require(\"../../subgraph/index\");\nconst big_number_1 = require(\"../../utils/big-number\");\nconst common_1 = require(\"../../utils/common\");\nconst base_1 = require(\"../base\");\nconst math = require(\"./math\");\nclass WeightedPool extends base_1.default {\n    // ---------------------- Constructor ----------------------\n    constructor(params) {\n        super(params);\n        this.MIN_TOKENS = 2;\n        this.MAX_TOKENS = 8;\n        // A minimum normalized weight imposes a maximum weight ratio\n        // We need this due to limitations in the implementation of the power function, as these ratios are often exponents\n        this.MIN_WEIGHT = big_number_1.bn(\"0.01\"); // 0.01e18\n        if (params.tokens.length < this.MIN_TOKENS) {\n            throw new Error(\"MIN_TOKENS\");\n        }\n        if (params.tokens.length > this.MAX_TOKENS) {\n            throw new Error(\"MAX_TOKENS\");\n        }\n        this._tokens = common_1.shallowCopyAll(params.tokens);\n        let normalizedSum = big_number_1.bn(0);\n        for (let i = 0; i < params.tokens.length; i++) {\n            if (big_number_1.bn(params.tokens[i].weight).lt(this.MIN_WEIGHT)) {\n                throw new Error(\"MIN_WEIGHT\");\n            }\n            normalizedSum = normalizedSum.plus(params.tokens[i].weight);\n        }\n        if (!normalizedSum.eq(1)) {\n            throw new Error(\"NORMALIZED_WEIGHT_INVARIANT\");\n        }\n    }\n    // ---------------------- Getters ----------------------\n    get tokens() {\n        // Shallow-copy to disallow direct changes\n        return common_1.shallowCopyAll(this._tokens);\n    }\n    // ---------------------- Subgraph initializer ----------------------\n    static async initFromRealPool(poolId, query = false, blockNumber, testnet) {\n        const pool = await index_1.getPool(poolId, blockNumber, testnet);\n        if (!pool) {\n            throw new Error(\"Could not fetch pool data\");\n        }\n        if (pool.poolType !== \"Weighted\") {\n            throw new Error(\"Pool must be weighted\");\n        }\n        const id = pool.id;\n        const address = pool.address;\n        const bptTotalSupply = pool.totalShares;\n        const swapFeePercentage = pool.swapFee;\n        const tokens = [];\n        for (const token of pool.tokens) {\n            tokens.push({\n                address: token.address,\n                symbol: token.symbol,\n                balance: token.balance,\n                decimals: token.decimals,\n                weight: token.weight,\n            });\n        }\n        return new WeightedPool({\n            id,\n            address,\n            tokens,\n            bptTotalSupply,\n            swapFeePercentage,\n            query,\n        });\n    }\n    // ---------------------- Misc ----------------------\n    getInvariant() {\n        const invariant = math._calculateInvariant(this._tokens.map((t) => this._upScale(t.weight, 18)), this._tokens.map((t) => this._upScale(t.balance, t.decimals)));\n        return invariant.toString();\n    }\n    // ---------------------- Swap actions ----------------------\n    swapGivenIn(tokenInSymbol, tokenOutSymbol, amountIn) {\n        const tokenIn = this._tokens.find((t) => t.symbol === tokenInSymbol);\n        const tokenOut = this._tokens.find((t) => t.symbol === tokenOutSymbol);\n        const scaledAmountOut = math._calcOutGivenIn(this._upScale(tokenIn.balance, tokenIn.decimals), this._upScale(tokenIn.weight, 18), this._upScale(tokenOut.balance, tokenOut.decimals), this._upScale(tokenOut.weight, 18), this._upScale(amountIn, tokenIn.decimals), this._upScale(this._swapFeePercentage, 18));\n        const amountOut = this._downScaleDown(scaledAmountOut, tokenOut.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenIn.balance = big_number_1.bn(tokenIn.balance).plus(amountIn).toString();\n            tokenOut.balance = big_number_1.bn(tokenOut.balance).minus(amountOut).toString();\n        }\n        return amountOut.toString();\n    }\n    swapGivenOut(tokenInSymbol, tokenOutSymbol, amountOut) {\n        const tokenIn = this._tokens.find((t) => t.symbol === tokenInSymbol);\n        const tokenOut = this._tokens.find((t) => t.symbol === tokenOutSymbol);\n        const scaledAmountIn = math._calcInGivenOut(this._upScale(tokenIn.balance, tokenIn.decimals), this._upScale(tokenIn.weight, 18), this._upScale(tokenOut.balance, tokenOut.decimals), this._upScale(tokenOut.weight, 18), this._upScale(amountOut, tokenOut.decimals), this._upScale(this._swapFeePercentage, 18));\n        const amountIn = this._downScaleUp(scaledAmountIn, tokenIn.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenIn.balance = big_number_1.bn(tokenIn.balance).plus(amountIn).toString();\n            tokenOut.balance = big_number_1.bn(tokenOut.balance).minus(amountOut).toString();\n        }\n        return amountIn.toString();\n    }\n    // ---------------------- LP actions ----------------------\n    joinExactTokensInForBptOut(amountsIn) {\n        if (Object.keys(amountsIn).length !== this._tokens.length) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledBptOut = math._calcBptOutGivenExactTokensIn(this._tokens.map((t) => this._upScale(t.balance, t.decimals)), this._tokens.map((t) => this._upScale(t.weight, 18)), this._tokens.map((t) => this._upScale(amountsIn[t.symbol], t.decimals)), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const bptOut = this._downScaleDown(scaledBptOut, 18);\n        // In-place balance updates\n        if (!this._query) {\n            for (let i = 0; i < this._tokens.length; i++) {\n                const token = this._tokens[i];\n                token.balance = big_number_1.bn(token.balance)\n                    .plus(amountsIn[token.symbol])\n                    .toString();\n            }\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).plus(bptOut).toString();\n        }\n        return bptOut.toString();\n    }\n    joinTokenInForExactBptOut(tokenInSymbol, bptOut) {\n        const tokenIn = this._tokens.find((t) => t.symbol === tokenInSymbol);\n        if (!tokenIn) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledAmountIn = math._calcTokenInGivenExactBptOut(this._upScale(tokenIn.balance, tokenIn.decimals), this._upScale(tokenIn.weight, 18), this._upScale(bptOut, 18), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const amountIn = this._downScaleUp(scaledAmountIn, tokenIn.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenIn.balance = big_number_1.bn(tokenIn.balance).plus(amountIn).toString();\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).plus(bptOut).toString();\n        }\n        return amountIn.toString();\n    }\n    exitExactBptInForTokenOut(tokenOutSymbol, bptIn) {\n        const tokenOut = this._tokens.find((t) => t.symbol === tokenOutSymbol);\n        if (!tokenOut) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledAmountOut = math._calcTokenOutGivenExactBptIn(this._upScale(tokenOut.balance, tokenOut.decimals), this._upScale(tokenOut.weight, 18), this._upScale(bptIn, 18), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const amountOut = this._downScaleDown(scaledAmountOut, tokenOut.decimals);\n        // In-place balance updates\n        if (!this._query) {\n            tokenOut.balance = big_number_1.bn(tokenOut.balance).minus(amountOut).toString();\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).minus(bptIn).toString();\n        }\n        return amountOut.toString();\n    }\n    exitExactBptInForTokensOut(bptIn) {\n        // Exactly match the EVM version\n        if (big_number_1.bn(bptIn).gt(this._bptTotalSupply)) {\n            throw new Error(\"BPT in exceeds total supply\");\n        }\n        const scaledAmountsOut = math._calcTokensOutGivenExactBptIn(this._tokens.map((t) => this._upScale(t.balance, t.decimals)), this._upScale(bptIn, 18), this._upScale(this._bptTotalSupply, 18));\n        const amountsOut = scaledAmountsOut.map((amount, i) => this._downScaleDown(amount, this._tokens[i].decimals));\n        // In-place balance updates\n        if (!this._query) {\n            for (let i = 0; i < this._tokens.length; i++) {\n                const token = this._tokens[i];\n                token.balance = big_number_1.bn(token.balance).minus(amountsOut[i]).toString();\n            }\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).minus(bptIn).toString();\n        }\n        return amountsOut.map((a) => a.toString());\n    }\n    exitBptInForExactTokensOut(amountsOut) {\n        if (Object.keys(amountsOut).length !== this._tokens.length) {\n            throw new Error(\"Invalid input\");\n        }\n        const scaledBptIn = math._calcBptInGivenExactTokensOut(this._tokens.map((t) => this._upScale(t.balance, t.decimals)), this._tokens.map((t) => this._upScale(t.weight, 18)), this._tokens.map((t) => this._upScale(amountsOut[t.symbol], t.decimals)), this._upScale(this._bptTotalSupply, 18), this._upScale(this._swapFeePercentage, 18));\n        const bptIn = this._downScaleUp(scaledBptIn, 18);\n        // In-place balance updates\n        if (!this._query) {\n            for (let i = 0; i < this._tokens.length; i++) {\n                const token = this._tokens[i];\n                token.balance = big_number_1.bn(token.balance)\n                    .minus(amountsOut[token.symbol])\n                    .toString();\n            }\n            this._bptTotalSupply = big_number_1.bn(this._bptTotalSupply).minus(bptIn).toString();\n        }\n        return bptIn.toString();\n    }\n}\nexports.default = WeightedPool;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeightedMath = exports.WeightedPool = exports.StableMath = exports.StablePool = void 0;\nconst stable_1 = require(\"./pools/stable\");\nexports.StablePool = stable_1.default;\nconst StableMath = require(\"./pools/stable/math\");\nexports.StableMath = StableMath;\nconst weighted_1 = require(\"./pools/weighted\");\nexports.WeightedPool = weighted_1.default;\nconst WeightedMath = require(\"./pools/weighted/math\");\nexports.WeightedMath = WeightedMath;\n","import { BigNumber } from '@ethersproject/bignumber';\n\nconst bpsPerOne = BigNumber.from('10000'); // number of basis points in 100%\n\n/**\n * Multiplies input by slippage amount\n *\n * @param {BigNumber} amount Input amount (not parsed)\n * @param {BigNumber} slippage Slippage value in bps - i.e. 50 = 0.5%\n * @returns Result delta from multiplying amount and slippage\n */\nexport const mulSlippage = (\n  amount: BigNumber,\n  slippage: BigNumber\n): BigNumber => {\n  const delta = amount.mul(slippage).div(bpsPerOne);\n  return delta;\n};\n\n/**\n * Reduce input amount by slippage factor\n *\n * @param {BigNumber} amount Input in EVM amounts\n * @param {BigNumber} slippage Slippage value in bps - i.e. 50 = 0.5%\n * @returns Result amount subtracting slippage\n */\nexport const subSlippage = (\n  amount: BigNumber,\n  slippage: BigNumber\n): BigNumber => {\n  const delta = mulSlippage(amount, slippage);\n  return amount.sub(delta);\n};\n\n/**\n * Increase input amount by slippage factor\n *\n * @param {BigNumber} amount Input in EVM amounts\n * @param {BigNumber} slippage Slippage value in bps - i.e. 50 = 0.5%\n * @returns Result amount adding slippage\n */\nexport const addSlippage = (\n  amount: BigNumber,\n  slippage: BigNumber\n): BigNumber => {\n  const delta = mulSlippage(amount, slippage);\n  return amount.add(delta);\n};\n","import { Network } from './network';\nimport { BalancerNetworkConfig } from '@/types';\n\nexport const balancerVault = '0xBA12222222228d8Ba445958a75a0704d566BF2C8';\n\nexport const BALANCER_NETWORK_CONFIG: Record<Network, BalancerNetworkConfig> = {\n  [Network.MAINNET]: {\n    chainId: Network.MAINNET, //1\n    addresses: {\n      contracts: {\n        vault: '0xBA12222222228d8Ba445958a75a0704d566BF2C8',\n        multicall: '0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n        lidoRelayer: '0xdcdbf71A870cc60C6F9B621E28a7D3Ffd6Dd4965',\n        gaugeController: '0xc128468b7ce63ea702c1f104d55a2566b13d3abd',\n        feeDistributor: '0xD3cf852898b21fc233251427c2DC93d3d604F3BB',\n      },\n      tokens: {\n        wrappedNativeAsset: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n        lbpRaisingTokens: [\n          '0x6B175474E89094C44Da98b954EedeAC495271d0F',\n          '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n          '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n        ],\n        stETH: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        wstETH: '0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0',\n        bal: '0xba100000625a3754423978a60c9317c58a424e3d',\n        veBal: '0xC128a9954e6c874eA3d62ce62B468bA073093F25',\n        bbaUsd: '0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2',\n      },\n    },\n    urls: {\n      subgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-v2',\n      gaugesSubgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges',\n    },\n    pools: {\n      wETHwstETH: {\n        id: '0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080',\n        address: '0x32296969ef14eb0c6d29669c550d4a0449130230',\n      },\n    },\n  },\n  [Network.POLYGON]: {\n    chainId: Network.POLYGON, //137\n    addresses: {\n      contracts: {\n        vault: '0xBA12222222228d8Ba445958a75a0704d566BF2C8',\n        multicall: '0xa1B2b503959aedD81512C37e9dce48164ec6a94d',\n        gaugeController: '',\n        feeDistributor: '',\n      },\n      tokens: {\n        wrappedNativeAsset: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n        bal: '',\n        veBal: '',\n        bbaUsd: '',\n      },\n    },\n    urls: {\n      subgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-polygon-v2',\n      gaugesSubgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges',\n    },\n    pools: {},\n  },\n  [Network.ARBITRUM]: {\n    chainId: Network.ARBITRUM, //42161\n    addresses: {\n      contracts: {\n        vault: '0xBA12222222228d8Ba445958a75a0704d566BF2C8',\n        multicall: '0x269ff446d9892c9e19082564df3f5e8741e190a1',\n        gaugeController: '',\n        feeDistributor: '',\n      },\n      tokens: {\n        wrappedNativeAsset: '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1',\n        bal: '',\n        veBal: '',\n        bbaUsd: '',\n      },\n    },\n    urls: {\n      subgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-arbitrum-v2',\n      gaugesSubgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges',\n    },\n    pools: {},\n  },\n  [Network.KOVAN]: {\n    chainId: Network.KOVAN, //42\n    addresses: {\n      contracts: {\n        vault: '0xBA12222222228d8Ba445958a75a0704d566BF2C8',\n        multicall: '0x2cc8688C5f75E365aaEEb4ea8D6a480405A48D2A',\n        gaugeController: '',\n        feeDistributor: '',\n      },\n      tokens: {\n        wrappedNativeAsset: '0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1',\n        bal: '',\n        veBal: '',\n        bbaUsd: '',\n      },\n    },\n    urls: {\n      subgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-kovan-v2',\n      gaugesSubgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges',\n    },\n    pools: {},\n  },\n  [Network.ROPSTEN]: {\n    chainId: Network.ROPSTEN, //3\n    addresses: {\n      contracts: {\n        vault: '0xBA12222222228d8Ba445958a75a0704d566BF2C8',\n        multicall: '0x53c43764255c17bd724f74c4ef150724ac50a3ed',\n        gaugeController: '',\n        feeDistributor: '',\n      },\n      tokens: {\n        wrappedNativeAsset: '0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1',\n        bal: '',\n        veBal: '',\n        bbaUsd: '',\n      },\n    },\n    urls: {\n      subgraph: '',\n      gaugesSubgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges',\n    },\n    pools: {},\n  },\n  [Network.RINKEBY]: {\n    chainId: Network.RINKEBY, //4\n    addresses: {\n      contracts: {\n        vault: '0xBA12222222228d8Ba445958a75a0704d566BF2C8',\n        multicall: '0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821',\n        gaugeController: '',\n        feeDistributor: '',\n      },\n      tokens: {\n        wrappedNativeAsset: '0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1',\n        bal: '',\n        veBal: '',\n        bbaUsd: '',\n      },\n    },\n    urls: {\n      subgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-rinkeby-v2',\n      gaugesSubgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges',\n    },\n    pools: {},\n  },\n  [Network.GOERLI]: {\n    chainId: Network.GOERLI, //5\n    addresses: {\n      contracts: {\n        vault: '0xBA12222222228d8Ba445958a75a0704d566BF2C8',\n        multicall: '0x77dCa2C955b15e9dE4dbBCf1246B4B85b651e50e',\n        gaugeController: '0xBB1CE49b16d55A1f2c6e88102f32144C7334B116',\n        feeDistributor: '',\n      },\n      tokens: {\n        wrappedNativeAsset: '0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1',\n        bal: '',\n        veBal: '',\n        bbaUsd: '',\n      },\n    },\n    urls: {\n      subgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-goerli-v2',\n      gaugesSubgraph:\n        'https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges',\n    },\n    pools: {},\n  },\n  [Network.OPTIMISM]: {\n    chainId: Network.OPTIMISM, //10\n    addresses: {\n      contracts: {\n        vault: '0xBA12222222228d8Ba445958a75a0704d566BF2C8',\n        multicall: '0x2dc0e2aa608532da689e89e237df582b783e552c',\n        gaugeController: '',\n        feeDistributor: '',\n      },\n      tokens: {\n        wrappedNativeAsset: '0x4200000000000000000000000000000000000006',\n        bal: '',\n        veBal: '',\n        bbaUsd: '',\n      },\n    },\n    urls: {\n      subgraph:\n        'https://api.thegraph.com/subgraphs/name/beethovenxfi/beethovenx-optimism',\n      gaugesSubgraph: '',\n    },\n    pools: {},\n  },\n};\n\nexport const networkAddresses = (\n  chainId: number\n): BalancerNetworkConfig['addresses'] =>\n  BALANCER_NETWORK_CONFIG[chainId as Network].addresses;\n","export enum BalancerErrorCode {\n  SWAP_ZERO_RETURN_AMOUNT = 'SWAP_ZERO_RETURN_AMOUNT',\n  UNWRAP_ZERO_AMOUNT = 'UNWRAP_ZERO_AMOUNT',\n  WRAP_ZERO_AMOUNT = 'WRAP_ZERO_AMOUNT',\n  QUERY_BATCH_SWAP = 'QUERY_BATCH_SWAP',\n  POOL_DOESNT_EXIST = 'POOL_DOESNT_EXIST',\n  UNSUPPORTED_POOL_TYPE = 'UNSUPPORTED_POOL_TYPE',\n  UNSUPPORTED_PAIR = 'UNSUPPORTED_PAIR',\n  NO_POOL_DATA = 'NO_POOL_DATA',\n  INPUT_LENGTH_MISMATCH = 'INPUT_LENGTH_MISMATCH',\n  MISSING_DECIMALS = 'MISSING_DECIMALS',\n  MISSING_WEIGHT = 'MISSING_WEIGHT',\n}\n\nexport class BalancerError extends Error {\n  constructor(public code: BalancerErrorCode) {\n    super(BalancerError.getMessage(code));\n    this.name = 'BalancerError';\n  }\n\n  static getMessage(code: BalancerErrorCode): string {\n    switch (code) {\n      case BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT:\n        return 'queryBatchSwapWithSor returned 0 amount';\n      case BalancerErrorCode.UNWRAP_ZERO_AMOUNT:\n        return 'swapUnwrapAaveStaticExactIn unwrapped amount < 0';\n      case BalancerErrorCode.WRAP_ZERO_AMOUNT:\n        return 'swapUnwrapAaveStaticExactOut wrapped amount < 0';\n      case BalancerErrorCode.QUERY_BATCH_SWAP:\n        return 'queryBatchSwap on chain call error';\n      case BalancerErrorCode.POOL_DOESNT_EXIST:\n        return 'balancer pool does not exist';\n      case BalancerErrorCode.UNSUPPORTED_POOL_TYPE:\n        return 'unsupported pool type';\n      case BalancerErrorCode.UNSUPPORTED_PAIR:\n        return 'unsupported token pair';\n      case BalancerErrorCode.NO_POOL_DATA:\n        return 'no pool data';\n      case BalancerErrorCode.INPUT_LENGTH_MISMATCH:\n        return 'input length mismatch';\n      case BalancerErrorCode.MISSING_DECIMALS:\n        return 'missing decimals';\n      case BalancerErrorCode.MISSING_WEIGHT:\n        return 'missing weight';\n      default:\n        return 'Unknown error';\n    }\n  }\n}\n","import { parseUnits } from '@ethersproject/units';\nimport OldBigNumber from 'bignumber.js';\nimport * as SDK from '@georgeroman/balancer-v2-pools';\n\nimport { WeightedPoolEncoder } from '@/pool-weighted';\nimport {\n  JoinConcern,\n  JoinPool,\n  JoinPoolAttributes,\n  JoinPoolParameters,\n} from '../types';\nimport { Pool } from '@/types';\nimport { subSlippage } from '@/lib/utils/slippageHelper';\nimport { AssetHelpers } from '@/lib/utils';\nimport { balancerVault } from '@/lib/constants/config';\nimport { Vault__factory } from '@balancer-labs/typechain';\nimport { BigNumber, parseFixed } from '@ethersproject/bignumber';\nimport { AddressZero } from '@ethersproject/constants';\nimport { BalancerError, BalancerErrorCode } from '@/balancerErrors';\n\nexport class WeightedPoolJoin implements JoinConcern {\n  // Static\n\n  /**\n   * Encode joinPool in an ABI byte string\n   *\n   * [See method for a join pool](https://dev.balancer.fi/references/contracts/apis/the-vault#joinpool).\n   *\n   * _NB: This method doesn't execute a join pool -- it returns an [ABI byte string](https://docs.soliditylang.org/en/latest/abi-spec.html)\n   * containing the data of the function call on a contract, which can then be sent to the network to be executed.\n   * (ex. [sendTransaction](https://web3js.readthedocs.io/en/v1.2.11/web3-eth.html#sendtransaction)).\n   *\n   * @param {JoinPool}          joinPool - join pool information to be encoded\n   * @param {string}            joinPool.poolId - id of pool being joined\n   * @param {string}            joinPool.sender - account address sending tokens to join pool\n   * @param {string}            joinPool.recipient - account address receiving BPT after joining pool\n   * @param {JoinPoolRequest}   joinPool.joinPoolRequest - object containing join pool request information\n   * @returns {string}          encodedJoinPoolData - Returns an ABI byte string containing the data of the function call on a contract\n   */\n  static encodeJoinPool({\n    poolId,\n    sender,\n    recipient,\n    joinPoolRequest,\n  }: JoinPool): string {\n    const vaultInterface = Vault__factory.createInterface();\n\n    return vaultInterface.encodeFunctionData('joinPool', [\n      poolId,\n      sender,\n      recipient,\n      joinPoolRequest,\n    ]);\n  }\n\n  // Join Concern Interface\n\n  /**\n   * Build join pool transaction parameters with exact tokens in and minimum BPT out based on slippage tolerance\n   * @param {JoinPoolParameters} params - parameters used to build exact tokens in for bpt out transaction\n   * @param {string}                          params.joiner - Account address joining pool\n   * @param {SubgraphPoolBase}                params.pool - Subgraph pool object of pool being joined\n   * @param {string[]}                        params.tokensIn - Token addresses provided for joining pool (same length and order as amountsIn)\n   * @param {string[]}                        params.amountsIn -  - Token amounts provided for joining pool in EVM amounts\n   * @param {string}                          params.slippage - Maximum slippage tolerance in bps i.e. 50 = 0.5%\n   * @returns                                 transaction request ready to send with signer.sendTransaction\n   */\n  async buildJoin({\n    joiner,\n    pool,\n    tokensIn,\n    amountsIn,\n    slippage,\n    wrappedNativeAsset,\n  }: JoinPoolParameters): Promise<JoinPoolAttributes> {\n    if (\n      tokensIn.length != amountsIn.length ||\n      tokensIn.length != pool.tokensList.length\n    ) {\n      throw new BalancerError(BalancerErrorCode.INPUT_LENGTH_MISMATCH);\n    }\n\n    const parsedPoolInfo = this.parsePoolInfo(pool); // Parse pool info into EVM amounts in order to match amountsIn scalling\n    const sortedCalcInputs = this.sortCalcInputs(\n      parsedPoolInfo.tokens,\n      parsedPoolInfo.balances,\n      parsedPoolInfo.weights,\n      parsedPoolInfo.decimals,\n      tokensIn,\n      amountsIn,\n      wrappedNativeAsset\n    );\n    const expectedBPTOut = SDK.WeightedMath._calcBptOutGivenExactTokensIn(\n      sortedCalcInputs.balances.map((b) => new OldBigNumber(b)),\n      sortedCalcInputs.weights.map((w) => new OldBigNumber(w)),\n      sortedCalcInputs.amounts.map((a) => new OldBigNumber(a)),\n      new OldBigNumber(parsedPoolInfo.totalShares),\n      new OldBigNumber(parsedPoolInfo.swapFee)\n    ).toString();\n\n    const minBPTOut = subSlippage(\n      BigNumber.from(expectedBPTOut),\n      BigNumber.from(slippage)\n    ).toString();\n\n    const userData = WeightedPoolEncoder.joinExactTokensInForBPTOut(\n      sortedCalcInputs.amounts,\n      minBPTOut\n    );\n\n    const to = balancerVault;\n    const functionName = 'joinPool';\n    const attributes: JoinPool = {\n      poolId: pool.id,\n      sender: joiner,\n      recipient: joiner,\n      joinPoolRequest: {\n        assets: sortedCalcInputs.tokens,\n        maxAmountsIn: sortedCalcInputs.amounts,\n        userData,\n        fromInternalBalance: false,\n      },\n    };\n    const data = WeightedPoolJoin.encodeJoinPool(attributes);\n    const values = amountsIn.filter((amount, i) => tokensIn[i] === AddressZero); // filter native asset (e.g. ETH) amounts\n    const value = values[0] ? BigNumber.from(values[0]) : undefined;\n\n    return { to, functionName, attributes, data, value, minBPTOut };\n  }\n\n  // Helper methods\n\n  /**\n   * Sort BPT calc. inputs alphabetically by token addresses as required by calcBptOutGivenExactTokensIn\n   */\n  private sortCalcInputs = (\n    poolTokens: string[],\n    poolBalances: string[],\n    poolWeights: string[],\n    poolDecimals: number[],\n    tokensIn: string[],\n    amountsIn: string[],\n    wrappedNativeAsset: string\n  ) => {\n    const assetHelpers = new AssetHelpers(wrappedNativeAsset);\n    const [tokens, amounts] = assetHelpers.sortTokens(tokensIn, amountsIn) as [\n      string[],\n      string[]\n    ];\n    const [, balances, weights, decimals] = assetHelpers.sortTokens(\n      poolTokens,\n      poolBalances,\n      poolWeights,\n      poolDecimals\n    ) as [string[], string[], string[], number[]];\n    return {\n      tokens,\n      balances,\n      weights,\n      amounts,\n      decimals,\n    };\n  };\n\n  /**\n   * Parse pool info into EVM amounts\n   * @param {Pool}  pool\n   * @returns       parsed pool info\n   */\n  private parsePoolInfo = (pool: Pool) => {\n    const decimals = pool.tokens.map((token) => {\n      if (!token.decimals)\n        throw new BalancerError(BalancerErrorCode.MISSING_DECIMALS);\n      return token.decimals;\n    });\n    const weights = pool.tokens.map((token) => {\n      if (!token.weight)\n        throw new BalancerError(BalancerErrorCode.MISSING_WEIGHT);\n      return parseUnits(token.weight).toString();\n    });\n    const tokens = pool.tokens.map((token) => token.address);\n    const balances = pool.tokens.map((token) =>\n      parseFixed(token.balance, token.decimals).toString()\n    );\n    const totalShares = parseUnits(pool.totalShares).toString();\n    const swapFee = parseUnits(pool.swapFee).toString();\n    return {\n      tokens,\n      balances,\n      weights,\n      decimals,\n      totalShares,\n      swapFee,\n    };\n  };\n}\n","import { WeightedPoolLiquidity } from './concerns/weighted/liquidity.concern';\nimport { WeightedPoolSpotPrice } from './concerns/weighted/spotPrice.concern';\nimport { WeightedPoolJoin } from './concerns/weighted/join.concern';\nimport { PoolType } from './pool-type.interface';\nimport {\n  JoinConcern,\n  LiquidityConcern,\n  SpotPriceConcern,\n} from './concerns/types';\n\nexport class Weighted implements PoolType {\n  public liquidity: LiquidityConcern;\n  public spotPriceCalculator: SpotPriceConcern;\n  public join: JoinConcern;\n\n  constructor(\n    private liquidityConcern = WeightedPoolLiquidity,\n    private spotPriceCalculatorConcern = WeightedPoolSpotPrice,\n    private joinConcern = WeightedPoolJoin\n  ) {\n    this.liquidity = new this.liquidityConcern();\n    this.spotPriceCalculator = new this.spotPriceCalculatorConcern();\n    this.join = new this.joinConcern();\n  }\n}\n","import { LiquidityConcern } from '../types';\nimport { PoolToken } from '@/types';\nimport { formatFixed } from '@ethersproject/bignumber';\nimport { parseFixed } from '@/lib/utils/math';\nimport { Zero } from '@ethersproject/constants';\n\nconst SCALING_FACTOR = 18;\n\nexport class MetaStablePoolLiquidity implements LiquidityConcern {\n  calcTotal(tokens: PoolToken[]): string {\n    let sumBalance = Zero;\n    let sumValue = Zero;\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      // if a token's price is unknown, ignore it\n      // it will be computed at the next step\n      if (!token.price?.usd) {\n        continue;\n      }\n\n      const price = parseFixed(token.price.usd.toString(), SCALING_FACTOR);\n\n      const balance = parseFixed(token.balance, SCALING_FACTOR);\n\n      const value = balance.mul(price);\n      sumValue = sumValue.add(value);\n      sumBalance = sumBalance.add(balance);\n    }\n\n    // if at least the partial value of the pool is known\n    // then compute the rest of the value of tokens with unknown prices\n    if (sumBalance.gt(0)) {\n      const avgPrice = sumValue.div(sumBalance);\n\n      for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i];\n\n        if (token.price?.usd) {\n          continue;\n        }\n\n        const balance = parseFixed(token.balance, SCALING_FACTOR);\n\n        const value = balance.mul(avgPrice);\n        sumValue = sumValue.add(value);\n        sumBalance = sumBalance.add(balance);\n      }\n    }\n\n    return formatFixed(sumValue, SCALING_FACTOR * 2).toString();\n  }\n}\n","import { SpotPriceConcern } from '../types';\nimport { SubgraphPoolBase, MetaStablePool, ZERO } from '@balancer-labs/sor';\n\nexport class MetaStablePoolSpotPrice implements SpotPriceConcern {\n  calcPoolSpotPrice(\n    tokenIn: string,\n    tokenOut: string,\n    pool: SubgraphPoolBase\n  ): string {\n    const poolClass = MetaStablePool.fromPool(pool);\n    const poolPairData = poolClass.parsePoolPairData(tokenIn, tokenOut);\n    return poolClass\n      ._spotPriceAfterSwapExactTokenInForTokenOut(poolPairData, ZERO)\n      .toString();\n  }\n}\n","import { JoinPoolParameters, JoinConcern, JoinPoolAttributes } from '../types';\n\nexport class MetaStablePoolJoin implements JoinConcern {\n  async buildJoin({\n    joiner,\n    pool,\n    tokensIn,\n    amountsIn,\n    slippage,\n    wrappedNativeAsset,\n  }: JoinPoolParameters): Promise<JoinPoolAttributes> {\n    // TODO implementation\n    console.log(\n      joiner,\n      pool,\n      tokensIn,\n      amountsIn,\n      slippage,\n      wrappedNativeAsset\n    );\n    throw new Error('To be implemented');\n  }\n}\n","import { MetaStablePoolLiquidity } from './concerns/metaStable/liquidity.concern';\nimport { MetaStablePoolSpotPrice } from './concerns/metaStable/spotPrice.concern';\nimport { PoolType } from './pool-type.interface';\nimport {\n  JoinConcern,\n  LiquidityConcern,\n  SpotPriceConcern,\n} from './concerns/types';\nimport { MetaStablePoolJoin } from './concerns/metaStable/join.concern';\n\nexport class MetaStable implements PoolType {\n  public liquidity: LiquidityConcern;\n  public spotPriceCalculator: SpotPriceConcern;\n  public join: JoinConcern;\n\n  constructor(\n    private liquidityConcern = MetaStablePoolLiquidity,\n    private spotPriceCalculatorConcern = MetaStablePoolSpotPrice,\n    private joinConcern = MetaStablePoolJoin\n  ) {\n    this.liquidity = new this.liquidityConcern();\n    this.spotPriceCalculator = new this.spotPriceCalculatorConcern();\n    this.join = new this.joinConcern();\n  }\n}\n","import { LiquidityConcern } from '../types';\nimport { PoolToken } from '@/types';\n\nexport class StablePhantomPoolLiquidity implements LiquidityConcern {\n  calcTotal(tokens: PoolToken[]): string {\n    if (tokens.length > 0) {\n      throw new Error(\n        'Not Implemented - StablePhantom liquidity should all come from sub-pools.'\n      );\n    }\n\n    return '0';\n  }\n}\n","import { SpotPriceConcern } from '../types';\nimport { SubgraphPoolBase, PhantomStablePool, ZERO } from '@balancer-labs/sor';\n\nexport class StablePhantomPoolSpotPrice implements SpotPriceConcern {\n  calcPoolSpotPrice(\n    tokenIn: string,\n    tokenOut: string,\n    pool: SubgraphPoolBase\n  ): string {\n    const poolClass = PhantomStablePool.fromPool(pool);\n    const poolPairData = poolClass.parsePoolPairData(tokenIn, tokenOut);\n    return poolClass\n      ._spotPriceAfterSwapExactTokenInForTokenOut(poolPairData, ZERO)\n      .toString();\n  }\n}\n","import { JoinPoolParameters, JoinConcern, JoinPoolAttributes } from '../types';\n\nexport class StablePhantomPoolJoin implements JoinConcern {\n  async buildJoin({\n    joiner,\n    pool,\n    tokensIn,\n    amountsIn,\n    slippage,\n    wrappedNativeAsset,\n  }: JoinPoolParameters): Promise<JoinPoolAttributes> {\n    // TODO implementation\n    console.log(\n      joiner,\n      pool,\n      tokensIn,\n      amountsIn,\n      slippage,\n      wrappedNativeAsset\n    );\n    throw new Error('To be implemented');\n  }\n}\n","import { StablePhantomPoolLiquidity } from './concerns/stablePhantom/liquidity.concern';\nimport { StablePhantomPoolSpotPrice } from './concerns/stablePhantom/spotPrice.concern';\nimport { StablePhantomPoolJoin } from './concerns/stablePhantom/join.concern';\nimport { PoolType } from './pool-type.interface';\nimport {\n  JoinConcern,\n  LiquidityConcern,\n  SpotPriceConcern,\n} from './concerns/types';\n\nexport class StablePhantom implements PoolType {\n  public liquidity: LiquidityConcern;\n  public spotPriceCalculator: SpotPriceConcern;\n  public join: JoinConcern;\n\n  constructor(\n    private liquidityConcern = StablePhantomPoolLiquidity,\n    private spotPriceCalculatorConcern = StablePhantomPoolSpotPrice,\n    public joinConcern = StablePhantomPoolJoin\n  ) {\n    this.liquidity = new this.liquidityConcern();\n    this.spotPriceCalculator = new this.spotPriceCalculatorConcern();\n    this.join = new this.joinConcern();\n  }\n}\n","import { LiquidityConcern } from '../types';\nimport { PoolToken } from '@/types';\nimport { formatFixed } from '@ethersproject/bignumber';\nimport { parseFixed } from '@/lib/utils/math';\nimport { Zero } from '@ethersproject/constants';\n\nconst SCALING_FACTOR = 18;\nconst ONE = parseFixed('1', SCALING_FACTOR);\n\nexport class LinearPoolLiquidity implements LiquidityConcern {\n  calcTotal(tokens: PoolToken[]): string {\n    let sumBalance = Zero;\n    let sumValue = Zero;\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      // if a token's price is unknown, ignore it\n      // it will be computed at the next step\n      if (!token.price?.usd) {\n        continue;\n      }\n\n      const price = parseFixed(token.price.usd.toString(), SCALING_FACTOR);\n\n      const balance = parseFixed(token.balance, SCALING_FACTOR);\n      const value = balance.mul(price);\n\n      sumValue = sumValue.add(value);\n      sumBalance = sumBalance.add(balance);\n    }\n\n    // if at least the partial value of the pool is known\n    // then compute the rest of the value of tokens with unknown prices\n    if (sumBalance.gt(0)) {\n      const avgPrice = sumValue.div(sumBalance);\n\n      for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i];\n\n        if (token.price?.usd) {\n          continue;\n        }\n\n        const priceRate = parseFixed(token.priceRate || '1', SCALING_FACTOR);\n\n        // Apply priceRate to scale the balance correctly\n        const balance = parseFixed(token.balance, SCALING_FACTOR)\n          .mul(priceRate)\n          .div(ONE);\n\n        const value = balance.mul(avgPrice);\n        sumValue = sumValue.add(value);\n        sumBalance = sumBalance.add(balance);\n      }\n    }\n\n    const totalLiquidity = formatFixed(sumValue, SCALING_FACTOR * 2).toString();\n    return totalLiquidity;\n  }\n}\n","import { SpotPriceConcern } from '../types';\nimport { SubgraphPoolBase, LinearPool, ZERO } from '@balancer-labs/sor';\n\nexport class LinearPoolSpotPrice implements SpotPriceConcern {\n  calcPoolSpotPrice(\n    tokenIn: string,\n    tokenOut: string,\n    pool: SubgraphPoolBase\n  ): string {\n    const poolClass = LinearPool.fromPool(pool);\n    const poolPairData = poolClass.parsePoolPairData(tokenIn, tokenOut);\n    return poolClass\n      ._spotPriceAfterSwapExactTokenInForTokenOut(poolPairData, ZERO)\n      .toString();\n  }\n}\n","import { JoinPoolParameters, JoinConcern, JoinPoolAttributes } from '../types';\n\nexport class LinearPoolJoin implements JoinConcern {\n  async buildJoin({\n    joiner,\n    pool,\n    tokensIn,\n    amountsIn,\n    slippage,\n    wrappedNativeAsset,\n  }: JoinPoolParameters): Promise<JoinPoolAttributes> {\n    // TODO implementation\n    console.log(\n      joiner,\n      pool,\n      tokensIn,\n      amountsIn,\n      slippage,\n      wrappedNativeAsset\n    );\n    throw new Error('To be implemented');\n  }\n}\n","import { LinearPoolLiquidity } from './concerns/linear/liquidity.concern';\nimport { LinearPoolSpotPrice } from './concerns/linear/spotPrice.concern';\nimport { PoolType } from './pool-type.interface';\nimport {\n  JoinConcern,\n  LiquidityConcern,\n  SpotPriceConcern,\n} from './concerns/types';\nimport { LinearPoolJoin } from './concerns/linear/join.concern';\n\nexport class Linear implements PoolType {\n  public liquidity: LiquidityConcern;\n  public spotPriceCalculator: SpotPriceConcern;\n  public join: JoinConcern;\n\n  constructor(\n    private liquidityConcern = LinearPoolLiquidity,\n    private spotPriceCalculatorConcern = LinearPoolSpotPrice,\n    private joinConcern = LinearPoolJoin\n  ) {\n    this.liquidity = new this.liquidityConcern();\n    this.spotPriceCalculator = new this.spotPriceCalculatorConcern();\n    this.join = new this.joinConcern();\n  }\n}\n","import { BalancerSdkConfig, PoolType } from '@/types';\nimport { Stable } from './pool-types/stable.module';\nimport { Weighted } from './pool-types/weighted.module';\nimport { MetaStable } from './pool-types/metaStable.module';\nimport { StablePhantom } from './pool-types/stablePhantom.module';\nimport { Linear } from './pool-types/linear.module';\nimport { BalancerError, BalancerErrorCode } from '@/balancerErrors';\n\n/**\n * Wrapper around pool type specific methods.\n *\n * Returns a class instance of a type specific method handlers.\n */\nexport class PoolTypeConcerns {\n  constructor(\n    config: BalancerSdkConfig,\n    public weighted = new Weighted(),\n    public stable = new Stable(),\n    public metaStable = new MetaStable(),\n    public stablePhantom = new StablePhantom(),\n    public linear = new Linear()\n  ) {}\n\n  static from(\n    poolType: PoolType\n  ): Weighted | Stable | MetaStable | StablePhantom | Linear {\n    // Calculate spot price using pool type\n    switch (poolType) {\n      case 'Weighted':\n      case 'Investment':\n      case 'LiquidityBootstrapping': {\n        return new Weighted();\n      }\n      case 'Stable': {\n        return new Stable();\n      }\n      case 'MetaStable': {\n        return new MetaStable();\n      }\n      case 'StablePhantom': {\n        return new StablePhantom();\n      }\n      case 'AaveLinear':\n      case 'ERC4626Linear': {\n        return new Linear();\n      }\n      default:\n        throw new BalancerError(BalancerErrorCode.UNSUPPORTED_POOL_TYPE);\n    }\n  }\n}\n","import { BigNumber as OldBigNumber } from 'bignumber.js';\nimport { Findable, Pool, PoolToken } from '@/types';\nimport { PoolAttribute } from '../data';\nimport { TokenPriceProvider } from '../data';\nimport { PoolTypeConcerns } from '../pools/pool-type-concerns';\n\nexport interface PoolBPTValue {\n  address: string;\n  liquidity: string;\n}\n\nexport class Liquidity {\n  constructor(\n    private pools: Findable<Pool, PoolAttribute>,\n    private tokenPrices: TokenPriceProvider\n  ) {}\n\n  async getLiquidity(pool: Pool): Promise<string> {\n    // Remove any tokens with same address as pool as they are pre-printed BPT\n    const parsedTokens = pool.tokens.filter((token) => {\n      return token.address !== pool.address;\n    });\n\n    // For all tokens that are pools, recurse into them and fetch their liquidity\n    const subPoolLiquidity: (PoolBPTValue | undefined)[] = await Promise.all(\n      parsedTokens.map(async (token) => {\n        const pool = await this.pools.findBy('address', token.address);\n        if (!pool) return;\n\n        const liquidity = new OldBigNumber(await this.getLiquidity(pool));\n        const totalBPT = new OldBigNumber(pool.totalShares);\n        const bptValue = liquidity.div(totalBPT);\n\n        const bptInParentPool = new OldBigNumber(token.balance);\n        const liquidityInParentPool = bptValue.times(bptInParentPool);\n\n        return {\n          address: pool.address,\n          liquidity: liquidityInParentPool.toString(),\n        };\n      })\n    );\n\n    const totalSubPoolLiquidity = subPoolLiquidity.reduce(\n      (totalLiquidity, subPool) => {\n        if (!subPool) return new OldBigNumber(0);\n        return totalLiquidity.plus(subPool.liquidity);\n      },\n      new OldBigNumber(0)\n    );\n\n    const nonPoolTokens = parsedTokens.filter((token) => {\n      return !subPoolLiquidity.find((pool) => pool?.address === token.address);\n    });\n\n    const tokenBalances: PoolToken[] = await Promise.all(\n      nonPoolTokens.map(async (token) => {\n        const tokenPrice = await this.tokenPrices.find(token.address);\n        const poolToken: PoolToken = {\n          address: token.address,\n          decimals: token.decimals,\n          priceRate: token.priceRate,\n          price: tokenPrice,\n          balance: token.balance,\n          weight: token.weight,\n        };\n        return poolToken;\n      })\n    );\n\n    const tokenLiquidity = PoolTypeConcerns.from(\n      pool.poolType\n    ).liquidity.calcTotal(tokenBalances);\n\n    const totalLiquidity = new OldBigNumber(totalSubPoolLiquidity).plus(\n      tokenLiquidity\n    );\n\n    return totalLiquidity.toString();\n  }\n}\n","import { BigNumberish } from '@ethersproject/bignumber';\nimport { AddressZero, Zero } from '@ethersproject/constants';\nimport { SOR, SwapTypes, SwapInfo } from '@balancer-labs/sor';\nimport { BalancerError, BalancerErrorCode } from '@/balancerErrors';\nimport {\n  SwapType,\n  BatchSwapStep,\n  FundManagement,\n  QueryWithSorInput,\n  QueryWithSorOutput,\n} from './types';\nimport { Vault } from '@balancer-labs/typechain';\n\n/*\n * queryBatchSwap simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n * simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n *\n * Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n * the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n * receives are the same that an equivalent `batchSwap` call would receive.\n */\nexport async function queryBatchSwap(\n  vaultContract: Vault,\n  swapType: SwapType,\n  swaps: BatchSwapStep[],\n  assets: string[]\n): Promise<string[]> {\n  const funds: FundManagement = {\n    sender: AddressZero,\n    recipient: AddressZero,\n    fromInternalBalance: false,\n    toInternalBalance: false,\n  };\n\n  try {\n    const deltas = await vaultContract.callStatic.queryBatchSwap(\n      swapType,\n      swaps,\n      assets,\n      funds\n    );\n    return deltas.map((d: BigNumberish) => d.toString());\n  } catch (err) {\n    throw `queryBatchSwap call error: ${err}`;\n  }\n}\n\n/*\nUses SOR to create a batchSwap which is then queried onChain.\n*/\nexport async function queryBatchSwapWithSor(\n  sor: SOR,\n  vaultContract: Vault,\n  queryWithSor: QueryWithSorInput\n): Promise<QueryWithSorOutput> {\n  if (queryWithSor.fetchPools.fetchPools) await sor.fetchPools();\n\n  const swaps: BatchSwapStep[][] = [];\n  const assetArray: string[][] = [];\n  // get path information for each tokenIn\n  for (let i = 0; i < queryWithSor.tokensIn.length; i++) {\n    const swap = await getSorSwapInfo(\n      queryWithSor.tokensIn[i],\n      queryWithSor.tokensOut[i],\n      queryWithSor.swapType,\n      queryWithSor.amounts[i].toString(),\n      sor\n    );\n    if (!swap.returnAmount.gt(Zero))\n      // Throw here because swaps with 0 amounts has no path and has misleading result for query\n      throw new BalancerError(BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);\n\n    swaps.push(swap.swaps);\n    assetArray.push(swap.tokenAddresses);\n  }\n\n  // Join swaps and assets together correctly\n  const batchedSwaps = batchSwaps(assetArray, swaps);\n\n  const returnTokens =\n    queryWithSor.swapType === SwapType.SwapExactIn\n      ? queryWithSor.tokensOut\n      : queryWithSor.tokensIn;\n  const returnAmounts: string[] = Array(returnTokens.length).fill('0');\n  let deltas: BigNumberish[] = Array(batchedSwaps.assets.length).fill('0');\n  try {\n    // Onchain query\n    deltas = await queryBatchSwap(\n      vaultContract,\n      queryWithSor.swapType,\n      batchedSwaps.swaps,\n      batchedSwaps.assets\n    );\n\n    if (deltas.length > 0) {\n      returnTokens.forEach(\n        (t, i) =>\n          (returnAmounts[i] =\n            deltas[batchedSwaps.assets.indexOf(t.toLowerCase())].toString() ??\n            Zero.toString())\n      );\n    }\n  } catch (err) {\n    throw new BalancerError(BalancerErrorCode.QUERY_BATCH_SWAP);\n  }\n\n  return {\n    returnAmounts,\n    swaps: batchedSwaps.swaps,\n    assets: batchedSwaps.assets,\n    deltas: deltas.map((d) => d.toString()),\n  };\n}\n\n/*\nUse SOR to get swapInfo for tokenIn>tokenOut.\nSwapInfos.swaps has path information.\n*/\nexport async function getSorSwapInfo(\n  tokenIn: string,\n  tokenOut: string,\n  swapType: SwapType,\n  amount: string,\n  sor: SOR\n): Promise<SwapInfo> {\n  const swapTypeSOR: SwapTypes =\n    swapType === SwapType.SwapExactIn\n      ? SwapTypes.SwapExactIn\n      : SwapTypes.SwapExactOut;\n  const swapInfo = await sor.getSwaps(\n    tokenIn.toLowerCase(),\n    tokenOut.toLowerCase(),\n    swapTypeSOR,\n    amount\n  );\n  return swapInfo;\n}\n\n/*\nFormat multiple individual swaps/assets into a single swap/asset.\n*/\nfunction batchSwaps(\n  assetArray: string[][],\n  swaps: BatchSwapStep[][]\n): { swaps: BatchSwapStep[]; assets: string[] } {\n  // asset addresses without duplicates\n  const newAssetArray = [...new Set(assetArray.flat())];\n\n  // Update indices of each swap to use new asset array\n  swaps.forEach((swap, i) => {\n    swap.forEach((poolSwap) => {\n      poolSwap.assetInIndex = newAssetArray.indexOf(\n        assetArray[i][poolSwap.assetInIndex]\n      );\n      poolSwap.assetOutIndex = newAssetArray.indexOf(\n        assetArray[i][poolSwap.assetOutIndex]\n      );\n    });\n  });\n\n  // Join Swaps into a single batchSwap\n  const batchedSwaps = swaps.flat();\n  return { swaps: batchedSwaps, assets: newAssetArray };\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { __assign } from \"tslib\";\nimport { parse } from 'graphql';\nvar docCache = new Map();\nvar fragmentSourceMap = new Map();\nvar printFragmentWarnings = true;\nvar experimentalFragmentVariables = false;\nfunction normalize(string) {\n    return string.replace(/[\\s,]+/g, ' ').trim();\n}\nfunction cacheKeyFromLoc(loc) {\n    return normalize(loc.source.body.substring(loc.start, loc.end));\n}\nfunction processFragments(ast) {\n    var seenKeys = new Set();\n    var definitions = [];\n    ast.definitions.forEach(function (fragmentDefinition) {\n        if (fragmentDefinition.kind === 'FragmentDefinition') {\n            var fragmentName = fragmentDefinition.name.value;\n            var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n            var sourceKeySet = fragmentSourceMap.get(fragmentName);\n            if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n                if (printFragmentWarnings) {\n                    console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n                        + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n                        + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n                }\n            }\n            else if (!sourceKeySet) {\n                fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n            }\n            sourceKeySet.add(sourceKey);\n            if (!seenKeys.has(sourceKey)) {\n                seenKeys.add(sourceKey);\n                definitions.push(fragmentDefinition);\n            }\n        }\n        else {\n            definitions.push(fragmentDefinition);\n        }\n    });\n    return __assign(__assign({}, ast), { definitions: definitions });\n}\nfunction stripLoc(doc) {\n    var workSet = new Set(doc.definitions);\n    workSet.forEach(function (node) {\n        if (node.loc)\n            delete node.loc;\n        Object.keys(node).forEach(function (key) {\n            var value = node[key];\n            if (value && typeof value === 'object') {\n                workSet.add(value);\n            }\n        });\n    });\n    var loc = doc.loc;\n    if (loc) {\n        delete loc.startToken;\n        delete loc.endToken;\n    }\n    return doc;\n}\nfunction parseDocument(source) {\n    var cacheKey = normalize(source);\n    if (!docCache.has(cacheKey)) {\n        var parsed = parse(source, {\n            experimentalFragmentVariables: experimentalFragmentVariables,\n            allowLegacyFragmentVariables: experimentalFragmentVariables\n        });\n        if (!parsed || parsed.kind !== 'Document') {\n            throw new Error('Not a valid GraphQL document.');\n        }\n        docCache.set(cacheKey, stripLoc(processFragments(parsed)));\n    }\n    return docCache.get(cacheKey);\n}\nexport function gql(literals) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (typeof literals === 'string') {\n        literals = [literals];\n    }\n    var result = literals[0];\n    args.forEach(function (arg, i) {\n        if (arg && arg.kind === 'Document') {\n            result += arg.loc.source.body;\n        }\n        else {\n            result += arg;\n        }\n        result += literals[i + 1];\n    });\n    return parseDocument(result);\n}\nexport function resetCaches() {\n    docCache.clear();\n    fragmentSourceMap.clear();\n}\nexport function disableFragmentWarnings() {\n    printFragmentWarnings = false;\n}\nexport function enableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = true;\n}\nexport function disableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = false;\n}\nvar extras = {\n    gql: gql,\n    resetCaches: resetCaches,\n    disableFragmentWarnings: disableFragmentWarnings,\n    enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables: disableExperimentalFragmentVariables\n};\n(function (gql_1) {\n    gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;\n})(gql || (gql = {}));\ngql[\"default\"] = gql;\nexport default gql;\n//# sourceMappingURL=index.js.map","import { GraphQLClient } from 'graphql-request';\nimport * as Dom from 'graphql-request/dist/types.dom';\nimport gql from 'graphql-tag';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  BigDecimal: string;\n  BigInt: string;\n  Bytes: string;\n};\n\nexport type AmpUpdate = {\n  __typename?: 'AmpUpdate';\n  endAmp: Scalars['BigInt'];\n  endTimestamp: Scalars['BigInt'];\n  id: Scalars['ID'];\n  poolId: Pool;\n  scheduledTimestamp: Scalars['Int'];\n  startAmp: Scalars['BigInt'];\n  startTimestamp: Scalars['BigInt'];\n};\n\nexport type AmpUpdate_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  endAmp?: InputMaybe<Scalars['BigInt']>;\n  endAmp_gt?: InputMaybe<Scalars['BigInt']>;\n  endAmp_gte?: InputMaybe<Scalars['BigInt']>;\n  endAmp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  endAmp_lt?: InputMaybe<Scalars['BigInt']>;\n  endAmp_lte?: InputMaybe<Scalars['BigInt']>;\n  endAmp_not?: InputMaybe<Scalars['BigInt']>;\n  endAmp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  endTimestamp?: InputMaybe<Scalars['BigInt']>;\n  endTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  endTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  endTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  endTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  endTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  endTimestamp_not?: InputMaybe<Scalars['BigInt']>;\n  endTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  poolId?: InputMaybe<Scalars['String']>;\n  poolId_?: InputMaybe<Pool_Filter>;\n  poolId_contains?: InputMaybe<Scalars['String']>;\n  poolId_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_gt?: InputMaybe<Scalars['String']>;\n  poolId_gte?: InputMaybe<Scalars['String']>;\n  poolId_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_lt?: InputMaybe<Scalars['String']>;\n  poolId_lte?: InputMaybe<Scalars['String']>;\n  poolId_not?: InputMaybe<Scalars['String']>;\n  poolId_not_contains?: InputMaybe<Scalars['String']>;\n  poolId_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_not_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  scheduledTimestamp?: InputMaybe<Scalars['Int']>;\n  scheduledTimestamp_gt?: InputMaybe<Scalars['Int']>;\n  scheduledTimestamp_gte?: InputMaybe<Scalars['Int']>;\n  scheduledTimestamp_in?: InputMaybe<Array<Scalars['Int']>>;\n  scheduledTimestamp_lt?: InputMaybe<Scalars['Int']>;\n  scheduledTimestamp_lte?: InputMaybe<Scalars['Int']>;\n  scheduledTimestamp_not?: InputMaybe<Scalars['Int']>;\n  scheduledTimestamp_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  startAmp?: InputMaybe<Scalars['BigInt']>;\n  startAmp_gt?: InputMaybe<Scalars['BigInt']>;\n  startAmp_gte?: InputMaybe<Scalars['BigInt']>;\n  startAmp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  startAmp_lt?: InputMaybe<Scalars['BigInt']>;\n  startAmp_lte?: InputMaybe<Scalars['BigInt']>;\n  startAmp_not?: InputMaybe<Scalars['BigInt']>;\n  startAmp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  startTimestamp?: InputMaybe<Scalars['BigInt']>;\n  startTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  startTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  startTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  startTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  startTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  startTimestamp_not?: InputMaybe<Scalars['BigInt']>;\n  startTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum AmpUpdate_OrderBy {\n  EndAmp = 'endAmp',\n  EndTimestamp = 'endTimestamp',\n  Id = 'id',\n  PoolId = 'poolId',\n  ScheduledTimestamp = 'scheduledTimestamp',\n  StartAmp = 'startAmp',\n  StartTimestamp = 'startTimestamp'\n}\n\nexport type Balancer = {\n  __typename?: 'Balancer';\n  id: Scalars['ID'];\n  poolCount: Scalars['Int'];\n  pools?: Maybe<Array<Pool>>;\n  totalLiquidity: Scalars['BigDecimal'];\n  totalSwapCount: Scalars['BigInt'];\n  totalSwapFee: Scalars['BigDecimal'];\n  totalSwapVolume: Scalars['BigDecimal'];\n};\n\n\nexport type BalancerPoolsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Pool_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<Pool_Filter>;\n};\n\nexport type BalancerSnapshot = {\n  __typename?: 'BalancerSnapshot';\n  id: Scalars['ID'];\n  poolCount: Scalars['Int'];\n  timestamp: Scalars['Int'];\n  totalLiquidity: Scalars['BigDecimal'];\n  totalSwapCount: Scalars['BigInt'];\n  totalSwapFee: Scalars['BigDecimal'];\n  totalSwapVolume: Scalars['BigDecimal'];\n  vault: Balancer;\n};\n\nexport type BalancerSnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  poolCount?: InputMaybe<Scalars['Int']>;\n  poolCount_gt?: InputMaybe<Scalars['Int']>;\n  poolCount_gte?: InputMaybe<Scalars['Int']>;\n  poolCount_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolCount_lt?: InputMaybe<Scalars['Int']>;\n  poolCount_lte?: InputMaybe<Scalars['Int']>;\n  poolCount_not?: InputMaybe<Scalars['Int']>;\n  poolCount_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp?: InputMaybe<Scalars['Int']>;\n  timestamp_gt?: InputMaybe<Scalars['Int']>;\n  timestamp_gte?: InputMaybe<Scalars['Int']>;\n  timestamp_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp_lt?: InputMaybe<Scalars['Int']>;\n  timestamp_lte?: InputMaybe<Scalars['Int']>;\n  timestamp_not?: InputMaybe<Scalars['Int']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalLiquidity?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalLiquidity_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapCount?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSwapCount_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_not?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSwapFee?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapFee_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapVolume?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapVolume_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  vault?: InputMaybe<Scalars['String']>;\n  vault_?: InputMaybe<Balancer_Filter>;\n  vault_contains?: InputMaybe<Scalars['String']>;\n  vault_contains_nocase?: InputMaybe<Scalars['String']>;\n  vault_ends_with?: InputMaybe<Scalars['String']>;\n  vault_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  vault_gt?: InputMaybe<Scalars['String']>;\n  vault_gte?: InputMaybe<Scalars['String']>;\n  vault_in?: InputMaybe<Array<Scalars['String']>>;\n  vault_lt?: InputMaybe<Scalars['String']>;\n  vault_lte?: InputMaybe<Scalars['String']>;\n  vault_not?: InputMaybe<Scalars['String']>;\n  vault_not_contains?: InputMaybe<Scalars['String']>;\n  vault_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  vault_not_ends_with?: InputMaybe<Scalars['String']>;\n  vault_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  vault_not_in?: InputMaybe<Array<Scalars['String']>>;\n  vault_not_starts_with?: InputMaybe<Scalars['String']>;\n  vault_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  vault_starts_with?: InputMaybe<Scalars['String']>;\n  vault_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum BalancerSnapshot_OrderBy {\n  Id = 'id',\n  PoolCount = 'poolCount',\n  Timestamp = 'timestamp',\n  TotalLiquidity = 'totalLiquidity',\n  TotalSwapCount = 'totalSwapCount',\n  TotalSwapFee = 'totalSwapFee',\n  TotalSwapVolume = 'totalSwapVolume',\n  Vault = 'vault'\n}\n\nexport type Balancer_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  poolCount?: InputMaybe<Scalars['Int']>;\n  poolCount_gt?: InputMaybe<Scalars['Int']>;\n  poolCount_gte?: InputMaybe<Scalars['Int']>;\n  poolCount_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolCount_lt?: InputMaybe<Scalars['Int']>;\n  poolCount_lte?: InputMaybe<Scalars['Int']>;\n  poolCount_not?: InputMaybe<Scalars['Int']>;\n  poolCount_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  pools_?: InputMaybe<Pool_Filter>;\n  totalLiquidity?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalLiquidity_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapCount?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSwapCount_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_not?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSwapFee?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapFee_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapVolume?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapVolume_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum Balancer_OrderBy {\n  Id = 'id',\n  PoolCount = 'poolCount',\n  Pools = 'pools',\n  TotalLiquidity = 'totalLiquidity',\n  TotalSwapCount = 'totalSwapCount',\n  TotalSwapFee = 'totalSwapFee',\n  TotalSwapVolume = 'totalSwapVolume'\n}\n\nexport type BlockChangedFilter = {\n  number_gte: Scalars['Int'];\n};\n\nexport type Block_Height = {\n  hash?: InputMaybe<Scalars['Bytes']>;\n  number?: InputMaybe<Scalars['Int']>;\n  number_gte?: InputMaybe<Scalars['Int']>;\n};\n\nexport type GradualWeightUpdate = {\n  __typename?: 'GradualWeightUpdate';\n  endTimestamp: Scalars['BigInt'];\n  endWeights: Array<Scalars['BigInt']>;\n  id: Scalars['ID'];\n  poolId: Pool;\n  scheduledTimestamp: Scalars['Int'];\n  startTimestamp: Scalars['BigInt'];\n  startWeights: Array<Scalars['BigInt']>;\n};\n\nexport type GradualWeightUpdate_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  endTimestamp?: InputMaybe<Scalars['BigInt']>;\n  endTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  endTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  endTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  endTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  endTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  endTimestamp_not?: InputMaybe<Scalars['BigInt']>;\n  endTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  endWeights?: InputMaybe<Array<Scalars['BigInt']>>;\n  endWeights_contains?: InputMaybe<Array<Scalars['BigInt']>>;\n  endWeights_contains_nocase?: InputMaybe<Array<Scalars['BigInt']>>;\n  endWeights_not?: InputMaybe<Array<Scalars['BigInt']>>;\n  endWeights_not_contains?: InputMaybe<Array<Scalars['BigInt']>>;\n  endWeights_not_contains_nocase?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  poolId?: InputMaybe<Scalars['String']>;\n  poolId_?: InputMaybe<Pool_Filter>;\n  poolId_contains?: InputMaybe<Scalars['String']>;\n  poolId_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_gt?: InputMaybe<Scalars['String']>;\n  poolId_gte?: InputMaybe<Scalars['String']>;\n  poolId_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_lt?: InputMaybe<Scalars['String']>;\n  poolId_lte?: InputMaybe<Scalars['String']>;\n  poolId_not?: InputMaybe<Scalars['String']>;\n  poolId_not_contains?: InputMaybe<Scalars['String']>;\n  poolId_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_not_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  scheduledTimestamp?: InputMaybe<Scalars['Int']>;\n  scheduledTimestamp_gt?: InputMaybe<Scalars['Int']>;\n  scheduledTimestamp_gte?: InputMaybe<Scalars['Int']>;\n  scheduledTimestamp_in?: InputMaybe<Array<Scalars['Int']>>;\n  scheduledTimestamp_lt?: InputMaybe<Scalars['Int']>;\n  scheduledTimestamp_lte?: InputMaybe<Scalars['Int']>;\n  scheduledTimestamp_not?: InputMaybe<Scalars['Int']>;\n  scheduledTimestamp_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  startTimestamp?: InputMaybe<Scalars['BigInt']>;\n  startTimestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  startTimestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  startTimestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  startTimestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  startTimestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  startTimestamp_not?: InputMaybe<Scalars['BigInt']>;\n  startTimestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  startWeights?: InputMaybe<Array<Scalars['BigInt']>>;\n  startWeights_contains?: InputMaybe<Array<Scalars['BigInt']>>;\n  startWeights_contains_nocase?: InputMaybe<Array<Scalars['BigInt']>>;\n  startWeights_not?: InputMaybe<Array<Scalars['BigInt']>>;\n  startWeights_not_contains?: InputMaybe<Array<Scalars['BigInt']>>;\n  startWeights_not_contains_nocase?: InputMaybe<Array<Scalars['BigInt']>>;\n};\n\nexport enum GradualWeightUpdate_OrderBy {\n  EndTimestamp = 'endTimestamp',\n  EndWeights = 'endWeights',\n  Id = 'id',\n  PoolId = 'poolId',\n  ScheduledTimestamp = 'scheduledTimestamp',\n  StartTimestamp = 'startTimestamp',\n  StartWeights = 'startWeights'\n}\n\nexport enum InvestType {\n  Exit = 'Exit',\n  Join = 'Join'\n}\n\nexport type JoinExit = {\n  __typename?: 'JoinExit';\n  amounts: Array<Scalars['BigDecimal']>;\n  id: Scalars['ID'];\n  pool: Pool;\n  sender: Scalars['Bytes'];\n  timestamp: Scalars['Int'];\n  tx: Scalars['Bytes'];\n  type: InvestType;\n  user: User;\n};\n\nexport type JoinExit_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amounts?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  amounts_contains?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  amounts_contains_nocase?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  amounts_not?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  amounts_not_contains?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  amounts_not_contains_nocase?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  pool?: InputMaybe<Scalars['String']>;\n  pool_?: InputMaybe<Pool_Filter>;\n  pool_contains?: InputMaybe<Scalars['String']>;\n  pool_contains_nocase?: InputMaybe<Scalars['String']>;\n  pool_ends_with?: InputMaybe<Scalars['String']>;\n  pool_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  pool_gt?: InputMaybe<Scalars['String']>;\n  pool_gte?: InputMaybe<Scalars['String']>;\n  pool_in?: InputMaybe<Array<Scalars['String']>>;\n  pool_lt?: InputMaybe<Scalars['String']>;\n  pool_lte?: InputMaybe<Scalars['String']>;\n  pool_not?: InputMaybe<Scalars['String']>;\n  pool_not_contains?: InputMaybe<Scalars['String']>;\n  pool_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  pool_not_ends_with?: InputMaybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  pool_not_in?: InputMaybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: InputMaybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  pool_starts_with?: InputMaybe<Scalars['String']>;\n  pool_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  sender?: InputMaybe<Scalars['Bytes']>;\n  sender_contains?: InputMaybe<Scalars['Bytes']>;\n  sender_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  sender_not?: InputMaybe<Scalars['Bytes']>;\n  sender_not_contains?: InputMaybe<Scalars['Bytes']>;\n  sender_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  timestamp?: InputMaybe<Scalars['Int']>;\n  timestamp_gt?: InputMaybe<Scalars['Int']>;\n  timestamp_gte?: InputMaybe<Scalars['Int']>;\n  timestamp_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp_lt?: InputMaybe<Scalars['Int']>;\n  timestamp_lte?: InputMaybe<Scalars['Int']>;\n  timestamp_not?: InputMaybe<Scalars['Int']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  tx?: InputMaybe<Scalars['Bytes']>;\n  tx_contains?: InputMaybe<Scalars['Bytes']>;\n  tx_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  tx_not?: InputMaybe<Scalars['Bytes']>;\n  tx_not_contains?: InputMaybe<Scalars['Bytes']>;\n  tx_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  type?: InputMaybe<InvestType>;\n  type_in?: InputMaybe<Array<InvestType>>;\n  type_not?: InputMaybe<InvestType>;\n  type_not_in?: InputMaybe<Array<InvestType>>;\n  user?: InputMaybe<Scalars['String']>;\n  user_?: InputMaybe<User_Filter>;\n  user_contains?: InputMaybe<Scalars['String']>;\n  user_contains_nocase?: InputMaybe<Scalars['String']>;\n  user_ends_with?: InputMaybe<Scalars['String']>;\n  user_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  user_gt?: InputMaybe<Scalars['String']>;\n  user_gte?: InputMaybe<Scalars['String']>;\n  user_in?: InputMaybe<Array<Scalars['String']>>;\n  user_lt?: InputMaybe<Scalars['String']>;\n  user_lte?: InputMaybe<Scalars['String']>;\n  user_not?: InputMaybe<Scalars['String']>;\n  user_not_contains?: InputMaybe<Scalars['String']>;\n  user_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  user_not_ends_with?: InputMaybe<Scalars['String']>;\n  user_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  user_not_in?: InputMaybe<Array<Scalars['String']>>;\n  user_not_starts_with?: InputMaybe<Scalars['String']>;\n  user_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  user_starts_with?: InputMaybe<Scalars['String']>;\n  user_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum JoinExit_OrderBy {\n  Amounts = 'amounts',\n  Id = 'id',\n  Pool = 'pool',\n  Sender = 'sender',\n  Timestamp = 'timestamp',\n  Tx = 'tx',\n  Type = 'type',\n  User = 'user'\n}\n\nexport type LatestPrice = {\n  __typename?: 'LatestPrice';\n  asset: Scalars['Bytes'];\n  block: Scalars['BigInt'];\n  id: Scalars['ID'];\n  poolId: Pool;\n  price: Scalars['BigDecimal'];\n  pricingAsset: Scalars['Bytes'];\n};\n\nexport type LatestPrice_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  asset?: InputMaybe<Scalars['Bytes']>;\n  asset_contains?: InputMaybe<Scalars['Bytes']>;\n  asset_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  asset_not?: InputMaybe<Scalars['Bytes']>;\n  asset_not_contains?: InputMaybe<Scalars['Bytes']>;\n  asset_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  block?: InputMaybe<Scalars['BigInt']>;\n  block_gt?: InputMaybe<Scalars['BigInt']>;\n  block_gte?: InputMaybe<Scalars['BigInt']>;\n  block_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  block_lt?: InputMaybe<Scalars['BigInt']>;\n  block_lte?: InputMaybe<Scalars['BigInt']>;\n  block_not?: InputMaybe<Scalars['BigInt']>;\n  block_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  poolId?: InputMaybe<Scalars['String']>;\n  poolId_?: InputMaybe<Pool_Filter>;\n  poolId_contains?: InputMaybe<Scalars['String']>;\n  poolId_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_gt?: InputMaybe<Scalars['String']>;\n  poolId_gte?: InputMaybe<Scalars['String']>;\n  poolId_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_lt?: InputMaybe<Scalars['String']>;\n  poolId_lte?: InputMaybe<Scalars['String']>;\n  poolId_not?: InputMaybe<Scalars['String']>;\n  poolId_not_contains?: InputMaybe<Scalars['String']>;\n  poolId_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_not_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  price?: InputMaybe<Scalars['BigDecimal']>;\n  price_gt?: InputMaybe<Scalars['BigDecimal']>;\n  price_gte?: InputMaybe<Scalars['BigDecimal']>;\n  price_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  price_lt?: InputMaybe<Scalars['BigDecimal']>;\n  price_lte?: InputMaybe<Scalars['BigDecimal']>;\n  price_not?: InputMaybe<Scalars['BigDecimal']>;\n  price_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  pricingAsset?: InputMaybe<Scalars['Bytes']>;\n  pricingAsset_contains?: InputMaybe<Scalars['Bytes']>;\n  pricingAsset_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  pricingAsset_not?: InputMaybe<Scalars['Bytes']>;\n  pricingAsset_not_contains?: InputMaybe<Scalars['Bytes']>;\n  pricingAsset_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n};\n\nexport enum LatestPrice_OrderBy {\n  Asset = 'asset',\n  Block = 'block',\n  Id = 'id',\n  PoolId = 'poolId',\n  Price = 'price',\n  PricingAsset = 'pricingAsset'\n}\n\nexport type ManagementOperation = {\n  __typename?: 'ManagementOperation';\n  cashDelta: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  managedDelta: Scalars['BigDecimal'];\n  poolTokenId: PoolToken;\n  timestamp: Scalars['Int'];\n  type: OperationType;\n};\n\nexport type ManagementOperation_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  cashDelta?: InputMaybe<Scalars['BigDecimal']>;\n  cashDelta_gt?: InputMaybe<Scalars['BigDecimal']>;\n  cashDelta_gte?: InputMaybe<Scalars['BigDecimal']>;\n  cashDelta_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  cashDelta_lt?: InputMaybe<Scalars['BigDecimal']>;\n  cashDelta_lte?: InputMaybe<Scalars['BigDecimal']>;\n  cashDelta_not?: InputMaybe<Scalars['BigDecimal']>;\n  cashDelta_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  managedDelta?: InputMaybe<Scalars['BigDecimal']>;\n  managedDelta_gt?: InputMaybe<Scalars['BigDecimal']>;\n  managedDelta_gte?: InputMaybe<Scalars['BigDecimal']>;\n  managedDelta_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  managedDelta_lt?: InputMaybe<Scalars['BigDecimal']>;\n  managedDelta_lte?: InputMaybe<Scalars['BigDecimal']>;\n  managedDelta_not?: InputMaybe<Scalars['BigDecimal']>;\n  managedDelta_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  poolTokenId?: InputMaybe<Scalars['String']>;\n  poolTokenId_?: InputMaybe<PoolToken_Filter>;\n  poolTokenId_contains?: InputMaybe<Scalars['String']>;\n  poolTokenId_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolTokenId_ends_with?: InputMaybe<Scalars['String']>;\n  poolTokenId_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolTokenId_gt?: InputMaybe<Scalars['String']>;\n  poolTokenId_gte?: InputMaybe<Scalars['String']>;\n  poolTokenId_in?: InputMaybe<Array<Scalars['String']>>;\n  poolTokenId_lt?: InputMaybe<Scalars['String']>;\n  poolTokenId_lte?: InputMaybe<Scalars['String']>;\n  poolTokenId_not?: InputMaybe<Scalars['String']>;\n  poolTokenId_not_contains?: InputMaybe<Scalars['String']>;\n  poolTokenId_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolTokenId_not_ends_with?: InputMaybe<Scalars['String']>;\n  poolTokenId_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolTokenId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolTokenId_not_starts_with?: InputMaybe<Scalars['String']>;\n  poolTokenId_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolTokenId_starts_with?: InputMaybe<Scalars['String']>;\n  poolTokenId_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['Int']>;\n  timestamp_gt?: InputMaybe<Scalars['Int']>;\n  timestamp_gte?: InputMaybe<Scalars['Int']>;\n  timestamp_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp_lt?: InputMaybe<Scalars['Int']>;\n  timestamp_lte?: InputMaybe<Scalars['Int']>;\n  timestamp_not?: InputMaybe<Scalars['Int']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  type?: InputMaybe<OperationType>;\n  type_in?: InputMaybe<Array<OperationType>>;\n  type_not?: InputMaybe<OperationType>;\n  type_not_in?: InputMaybe<Array<OperationType>>;\n};\n\nexport enum ManagementOperation_OrderBy {\n  CashDelta = 'cashDelta',\n  Id = 'id',\n  ManagedDelta = 'managedDelta',\n  PoolTokenId = 'poolTokenId',\n  Timestamp = 'timestamp',\n  Type = 'type'\n}\n\nexport enum OperationType {\n  Deposit = 'Deposit',\n  Update = 'Update',\n  Withdraw = 'Withdraw'\n}\n\n/** Defines the order direction, either ascending or descending */\nexport enum OrderDirection {\n  Asc = 'asc',\n  Desc = 'desc'\n}\n\nexport type Pool = {\n  __typename?: 'Pool';\n  address: Scalars['Bytes'];\n  amp?: Maybe<Scalars['BigInt']>;\n  baseToken?: Maybe<Scalars['Bytes']>;\n  createTime: Scalars['Int'];\n  expiryTime?: Maybe<Scalars['BigInt']>;\n  factory?: Maybe<Scalars['Bytes']>;\n  historicalValues?: Maybe<Array<PoolHistoricalLiquidity>>;\n  holdersCount: Scalars['BigInt'];\n  id: Scalars['ID'];\n  lowerTarget?: Maybe<Scalars['BigDecimal']>;\n  mainIndex?: Maybe<Scalars['Int']>;\n  managementFee?: Maybe<Scalars['BigDecimal']>;\n  name?: Maybe<Scalars['String']>;\n  oracleEnabled: Scalars['Boolean'];\n  owner?: Maybe<Scalars['Bytes']>;\n  poolType?: Maybe<Scalars['String']>;\n  priceRateProviders?: Maybe<Array<PriceRateProvider>>;\n  principalToken?: Maybe<Scalars['Bytes']>;\n  root3Alpha?: Maybe<Scalars['BigDecimal']>;\n  shares?: Maybe<Array<PoolShare>>;\n  snapshots?: Maybe<Array<PoolSnapshot>>;\n  sqrtAlpha?: Maybe<Scalars['BigDecimal']>;\n  sqrtBeta?: Maybe<Scalars['BigDecimal']>;\n  strategyType: Scalars['Int'];\n  swapEnabled: Scalars['Boolean'];\n  swapFee: Scalars['BigDecimal'];\n  swaps?: Maybe<Array<Swap>>;\n  swapsCount: Scalars['BigInt'];\n  symbol?: Maybe<Scalars['String']>;\n  tokens?: Maybe<Array<PoolToken>>;\n  tokensList: Array<Scalars['Bytes']>;\n  totalLiquidity: Scalars['BigDecimal'];\n  totalShares: Scalars['BigDecimal'];\n  totalSwapFee: Scalars['BigDecimal'];\n  totalSwapVolume: Scalars['BigDecimal'];\n  totalWeight?: Maybe<Scalars['BigDecimal']>;\n  tx?: Maybe<Scalars['Bytes']>;\n  unitSeconds?: Maybe<Scalars['BigInt']>;\n  upperTarget?: Maybe<Scalars['BigDecimal']>;\n  vaultID: Balancer;\n  weightUpdates?: Maybe<Array<GradualWeightUpdate>>;\n  wrappedIndex?: Maybe<Scalars['Int']>;\n};\n\n\nexport type PoolHistoricalValuesArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolHistoricalLiquidity_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PoolHistoricalLiquidity_Filter>;\n};\n\n\nexport type PoolPriceRateProvidersArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PriceRateProvider_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PriceRateProvider_Filter>;\n};\n\n\nexport type PoolSharesArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolShare_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PoolShare_Filter>;\n};\n\n\nexport type PoolSnapshotsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolSnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PoolSnapshot_Filter>;\n};\n\n\nexport type PoolSwapsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Swap_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<Swap_Filter>;\n};\n\n\nexport type PoolTokensArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PoolToken_Filter>;\n};\n\n\nexport type PoolWeightUpdatesArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GradualWeightUpdate_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<GradualWeightUpdate_Filter>;\n};\n\nexport type PoolHistoricalLiquidity = {\n  __typename?: 'PoolHistoricalLiquidity';\n  block: Scalars['BigInt'];\n  id: Scalars['ID'];\n  poolId: Pool;\n  poolLiquidity: Scalars['BigDecimal'];\n  poolShareValue: Scalars['BigDecimal'];\n  poolTotalShares: Scalars['BigDecimal'];\n  pricingAsset: Scalars['Bytes'];\n};\n\nexport type PoolHistoricalLiquidity_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  block?: InputMaybe<Scalars['BigInt']>;\n  block_gt?: InputMaybe<Scalars['BigInt']>;\n  block_gte?: InputMaybe<Scalars['BigInt']>;\n  block_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  block_lt?: InputMaybe<Scalars['BigInt']>;\n  block_lte?: InputMaybe<Scalars['BigInt']>;\n  block_not?: InputMaybe<Scalars['BigInt']>;\n  block_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  poolId?: InputMaybe<Scalars['String']>;\n  poolId_?: InputMaybe<Pool_Filter>;\n  poolId_contains?: InputMaybe<Scalars['String']>;\n  poolId_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_gt?: InputMaybe<Scalars['String']>;\n  poolId_gte?: InputMaybe<Scalars['String']>;\n  poolId_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_lt?: InputMaybe<Scalars['String']>;\n  poolId_lte?: InputMaybe<Scalars['String']>;\n  poolId_not?: InputMaybe<Scalars['String']>;\n  poolId_not_contains?: InputMaybe<Scalars['String']>;\n  poolId_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_not_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolLiquidity?: InputMaybe<Scalars['BigDecimal']>;\n  poolLiquidity_gt?: InputMaybe<Scalars['BigDecimal']>;\n  poolLiquidity_gte?: InputMaybe<Scalars['BigDecimal']>;\n  poolLiquidity_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  poolLiquidity_lt?: InputMaybe<Scalars['BigDecimal']>;\n  poolLiquidity_lte?: InputMaybe<Scalars['BigDecimal']>;\n  poolLiquidity_not?: InputMaybe<Scalars['BigDecimal']>;\n  poolLiquidity_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  poolShareValue?: InputMaybe<Scalars['BigDecimal']>;\n  poolShareValue_gt?: InputMaybe<Scalars['BigDecimal']>;\n  poolShareValue_gte?: InputMaybe<Scalars['BigDecimal']>;\n  poolShareValue_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  poolShareValue_lt?: InputMaybe<Scalars['BigDecimal']>;\n  poolShareValue_lte?: InputMaybe<Scalars['BigDecimal']>;\n  poolShareValue_not?: InputMaybe<Scalars['BigDecimal']>;\n  poolShareValue_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  poolTotalShares?: InputMaybe<Scalars['BigDecimal']>;\n  poolTotalShares_gt?: InputMaybe<Scalars['BigDecimal']>;\n  poolTotalShares_gte?: InputMaybe<Scalars['BigDecimal']>;\n  poolTotalShares_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  poolTotalShares_lt?: InputMaybe<Scalars['BigDecimal']>;\n  poolTotalShares_lte?: InputMaybe<Scalars['BigDecimal']>;\n  poolTotalShares_not?: InputMaybe<Scalars['BigDecimal']>;\n  poolTotalShares_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  pricingAsset?: InputMaybe<Scalars['Bytes']>;\n  pricingAsset_contains?: InputMaybe<Scalars['Bytes']>;\n  pricingAsset_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  pricingAsset_not?: InputMaybe<Scalars['Bytes']>;\n  pricingAsset_not_contains?: InputMaybe<Scalars['Bytes']>;\n  pricingAsset_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n};\n\nexport enum PoolHistoricalLiquidity_OrderBy {\n  Block = 'block',\n  Id = 'id',\n  PoolId = 'poolId',\n  PoolLiquidity = 'poolLiquidity',\n  PoolShareValue = 'poolShareValue',\n  PoolTotalShares = 'poolTotalShares',\n  PricingAsset = 'pricingAsset'\n}\n\nexport type PoolShare = {\n  __typename?: 'PoolShare';\n  balance: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  poolId: Pool;\n  userAddress: User;\n};\n\nexport type PoolShare_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  balance?: InputMaybe<Scalars['BigDecimal']>;\n  balance_gt?: InputMaybe<Scalars['BigDecimal']>;\n  balance_gte?: InputMaybe<Scalars['BigDecimal']>;\n  balance_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  balance_lt?: InputMaybe<Scalars['BigDecimal']>;\n  balance_lte?: InputMaybe<Scalars['BigDecimal']>;\n  balance_not?: InputMaybe<Scalars['BigDecimal']>;\n  balance_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  poolId?: InputMaybe<Scalars['String']>;\n  poolId_?: InputMaybe<Pool_Filter>;\n  poolId_contains?: InputMaybe<Scalars['String']>;\n  poolId_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_gt?: InputMaybe<Scalars['String']>;\n  poolId_gte?: InputMaybe<Scalars['String']>;\n  poolId_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_lt?: InputMaybe<Scalars['String']>;\n  poolId_lte?: InputMaybe<Scalars['String']>;\n  poolId_not?: InputMaybe<Scalars['String']>;\n  poolId_not_contains?: InputMaybe<Scalars['String']>;\n  poolId_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_not_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  userAddress?: InputMaybe<Scalars['String']>;\n  userAddress_?: InputMaybe<User_Filter>;\n  userAddress_contains?: InputMaybe<Scalars['String']>;\n  userAddress_contains_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_ends_with?: InputMaybe<Scalars['String']>;\n  userAddress_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_gt?: InputMaybe<Scalars['String']>;\n  userAddress_gte?: InputMaybe<Scalars['String']>;\n  userAddress_in?: InputMaybe<Array<Scalars['String']>>;\n  userAddress_lt?: InputMaybe<Scalars['String']>;\n  userAddress_lte?: InputMaybe<Scalars['String']>;\n  userAddress_not?: InputMaybe<Scalars['String']>;\n  userAddress_not_contains?: InputMaybe<Scalars['String']>;\n  userAddress_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_not_ends_with?: InputMaybe<Scalars['String']>;\n  userAddress_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_not_in?: InputMaybe<Array<Scalars['String']>>;\n  userAddress_not_starts_with?: InputMaybe<Scalars['String']>;\n  userAddress_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_starts_with?: InputMaybe<Scalars['String']>;\n  userAddress_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum PoolShare_OrderBy {\n  Balance = 'balance',\n  Id = 'id',\n  PoolId = 'poolId',\n  UserAddress = 'userAddress'\n}\n\nexport type PoolSnapshot = {\n  __typename?: 'PoolSnapshot';\n  amounts: Array<Scalars['BigDecimal']>;\n  id: Scalars['ID'];\n  liquidity: Scalars['BigDecimal'];\n  pool: Pool;\n  swapFees: Scalars['BigDecimal'];\n  swapVolume: Scalars['BigDecimal'];\n  timestamp: Scalars['Int'];\n  totalShares: Scalars['BigDecimal'];\n};\n\nexport type PoolSnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amounts?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  amounts_contains?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  amounts_contains_nocase?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  amounts_not?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  amounts_not_contains?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  amounts_not_contains_nocase?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  liquidity?: InputMaybe<Scalars['BigDecimal']>;\n  liquidity_gt?: InputMaybe<Scalars['BigDecimal']>;\n  liquidity_gte?: InputMaybe<Scalars['BigDecimal']>;\n  liquidity_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  liquidity_lt?: InputMaybe<Scalars['BigDecimal']>;\n  liquidity_lte?: InputMaybe<Scalars['BigDecimal']>;\n  liquidity_not?: InputMaybe<Scalars['BigDecimal']>;\n  liquidity_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  pool?: InputMaybe<Scalars['String']>;\n  pool_?: InputMaybe<Pool_Filter>;\n  pool_contains?: InputMaybe<Scalars['String']>;\n  pool_contains_nocase?: InputMaybe<Scalars['String']>;\n  pool_ends_with?: InputMaybe<Scalars['String']>;\n  pool_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  pool_gt?: InputMaybe<Scalars['String']>;\n  pool_gte?: InputMaybe<Scalars['String']>;\n  pool_in?: InputMaybe<Array<Scalars['String']>>;\n  pool_lt?: InputMaybe<Scalars['String']>;\n  pool_lte?: InputMaybe<Scalars['String']>;\n  pool_not?: InputMaybe<Scalars['String']>;\n  pool_not_contains?: InputMaybe<Scalars['String']>;\n  pool_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  pool_not_ends_with?: InputMaybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  pool_not_in?: InputMaybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: InputMaybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  pool_starts_with?: InputMaybe<Scalars['String']>;\n  pool_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  swapFees?: InputMaybe<Scalars['BigDecimal']>;\n  swapFees_gt?: InputMaybe<Scalars['BigDecimal']>;\n  swapFees_gte?: InputMaybe<Scalars['BigDecimal']>;\n  swapFees_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  swapFees_lt?: InputMaybe<Scalars['BigDecimal']>;\n  swapFees_lte?: InputMaybe<Scalars['BigDecimal']>;\n  swapFees_not?: InputMaybe<Scalars['BigDecimal']>;\n  swapFees_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  swapVolume?: InputMaybe<Scalars['BigDecimal']>;\n  swapVolume_gt?: InputMaybe<Scalars['BigDecimal']>;\n  swapVolume_gte?: InputMaybe<Scalars['BigDecimal']>;\n  swapVolume_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  swapVolume_lt?: InputMaybe<Scalars['BigDecimal']>;\n  swapVolume_lte?: InputMaybe<Scalars['BigDecimal']>;\n  swapVolume_not?: InputMaybe<Scalars['BigDecimal']>;\n  swapVolume_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  timestamp?: InputMaybe<Scalars['Int']>;\n  timestamp_gt?: InputMaybe<Scalars['Int']>;\n  timestamp_gte?: InputMaybe<Scalars['Int']>;\n  timestamp_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp_lt?: InputMaybe<Scalars['Int']>;\n  timestamp_lte?: InputMaybe<Scalars['Int']>;\n  timestamp_not?: InputMaybe<Scalars['Int']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalShares?: InputMaybe<Scalars['BigDecimal']>;\n  totalShares_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalShares_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalShares_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalShares_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalShares_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalShares_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalShares_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum PoolSnapshot_OrderBy {\n  Amounts = 'amounts',\n  Id = 'id',\n  Liquidity = 'liquidity',\n  Pool = 'pool',\n  SwapFees = 'swapFees',\n  SwapVolume = 'swapVolume',\n  Timestamp = 'timestamp',\n  TotalShares = 'totalShares'\n}\n\nexport type PoolToken = {\n  __typename?: 'PoolToken';\n  address: Scalars['String'];\n  assetManager: Scalars['Bytes'];\n  balance: Scalars['BigDecimal'];\n  cashBalance: Scalars['BigDecimal'];\n  decimals: Scalars['Int'];\n  id: Scalars['ID'];\n  managedBalance: Scalars['BigDecimal'];\n  managements?: Maybe<Array<ManagementOperation>>;\n  name: Scalars['String'];\n  poolId?: Maybe<Pool>;\n  priceRate: Scalars['BigDecimal'];\n  symbol: Scalars['String'];\n  token: Token;\n  weight?: Maybe<Scalars['BigDecimal']>;\n};\n\n\nexport type PoolTokenManagementsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ManagementOperation_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ManagementOperation_Filter>;\n};\n\nexport type PoolToken_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  address?: InputMaybe<Scalars['String']>;\n  address_contains?: InputMaybe<Scalars['String']>;\n  address_contains_nocase?: InputMaybe<Scalars['String']>;\n  address_ends_with?: InputMaybe<Scalars['String']>;\n  address_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  address_gt?: InputMaybe<Scalars['String']>;\n  address_gte?: InputMaybe<Scalars['String']>;\n  address_in?: InputMaybe<Array<Scalars['String']>>;\n  address_lt?: InputMaybe<Scalars['String']>;\n  address_lte?: InputMaybe<Scalars['String']>;\n  address_not?: InputMaybe<Scalars['String']>;\n  address_not_contains?: InputMaybe<Scalars['String']>;\n  address_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  address_not_ends_with?: InputMaybe<Scalars['String']>;\n  address_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  address_not_in?: InputMaybe<Array<Scalars['String']>>;\n  address_not_starts_with?: InputMaybe<Scalars['String']>;\n  address_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  address_starts_with?: InputMaybe<Scalars['String']>;\n  address_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  assetManager?: InputMaybe<Scalars['Bytes']>;\n  assetManager_contains?: InputMaybe<Scalars['Bytes']>;\n  assetManager_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  assetManager_not?: InputMaybe<Scalars['Bytes']>;\n  assetManager_not_contains?: InputMaybe<Scalars['Bytes']>;\n  assetManager_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  balance?: InputMaybe<Scalars['BigDecimal']>;\n  balance_gt?: InputMaybe<Scalars['BigDecimal']>;\n  balance_gte?: InputMaybe<Scalars['BigDecimal']>;\n  balance_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  balance_lt?: InputMaybe<Scalars['BigDecimal']>;\n  balance_lte?: InputMaybe<Scalars['BigDecimal']>;\n  balance_not?: InputMaybe<Scalars['BigDecimal']>;\n  balance_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  cashBalance?: InputMaybe<Scalars['BigDecimal']>;\n  cashBalance_gt?: InputMaybe<Scalars['BigDecimal']>;\n  cashBalance_gte?: InputMaybe<Scalars['BigDecimal']>;\n  cashBalance_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  cashBalance_lt?: InputMaybe<Scalars['BigDecimal']>;\n  cashBalance_lte?: InputMaybe<Scalars['BigDecimal']>;\n  cashBalance_not?: InputMaybe<Scalars['BigDecimal']>;\n  cashBalance_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  decimals?: InputMaybe<Scalars['Int']>;\n  decimals_gt?: InputMaybe<Scalars['Int']>;\n  decimals_gte?: InputMaybe<Scalars['Int']>;\n  decimals_in?: InputMaybe<Array<Scalars['Int']>>;\n  decimals_lt?: InputMaybe<Scalars['Int']>;\n  decimals_lte?: InputMaybe<Scalars['Int']>;\n  decimals_not?: InputMaybe<Scalars['Int']>;\n  decimals_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  managedBalance?: InputMaybe<Scalars['BigDecimal']>;\n  managedBalance_gt?: InputMaybe<Scalars['BigDecimal']>;\n  managedBalance_gte?: InputMaybe<Scalars['BigDecimal']>;\n  managedBalance_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  managedBalance_lt?: InputMaybe<Scalars['BigDecimal']>;\n  managedBalance_lte?: InputMaybe<Scalars['BigDecimal']>;\n  managedBalance_not?: InputMaybe<Scalars['BigDecimal']>;\n  managedBalance_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  managements_?: InputMaybe<ManagementOperation_Filter>;\n  name?: InputMaybe<Scalars['String']>;\n  name_contains?: InputMaybe<Scalars['String']>;\n  name_contains_nocase?: InputMaybe<Scalars['String']>;\n  name_ends_with?: InputMaybe<Scalars['String']>;\n  name_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  name_gt?: InputMaybe<Scalars['String']>;\n  name_gte?: InputMaybe<Scalars['String']>;\n  name_in?: InputMaybe<Array<Scalars['String']>>;\n  name_lt?: InputMaybe<Scalars['String']>;\n  name_lte?: InputMaybe<Scalars['String']>;\n  name_not?: InputMaybe<Scalars['String']>;\n  name_not_contains?: InputMaybe<Scalars['String']>;\n  name_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  name_not_ends_with?: InputMaybe<Scalars['String']>;\n  name_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  name_not_in?: InputMaybe<Array<Scalars['String']>>;\n  name_not_starts_with?: InputMaybe<Scalars['String']>;\n  name_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  name_starts_with?: InputMaybe<Scalars['String']>;\n  name_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId?: InputMaybe<Scalars['String']>;\n  poolId_?: InputMaybe<Pool_Filter>;\n  poolId_contains?: InputMaybe<Scalars['String']>;\n  poolId_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_gt?: InputMaybe<Scalars['String']>;\n  poolId_gte?: InputMaybe<Scalars['String']>;\n  poolId_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_lt?: InputMaybe<Scalars['String']>;\n  poolId_lte?: InputMaybe<Scalars['String']>;\n  poolId_not?: InputMaybe<Scalars['String']>;\n  poolId_not_contains?: InputMaybe<Scalars['String']>;\n  poolId_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_not_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  priceRate?: InputMaybe<Scalars['BigDecimal']>;\n  priceRate_gt?: InputMaybe<Scalars['BigDecimal']>;\n  priceRate_gte?: InputMaybe<Scalars['BigDecimal']>;\n  priceRate_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  priceRate_lt?: InputMaybe<Scalars['BigDecimal']>;\n  priceRate_lte?: InputMaybe<Scalars['BigDecimal']>;\n  priceRate_not?: InputMaybe<Scalars['BigDecimal']>;\n  priceRate_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  symbol?: InputMaybe<Scalars['String']>;\n  symbol_contains?: InputMaybe<Scalars['String']>;\n  symbol_contains_nocase?: InputMaybe<Scalars['String']>;\n  symbol_ends_with?: InputMaybe<Scalars['String']>;\n  symbol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_gt?: InputMaybe<Scalars['String']>;\n  symbol_gte?: InputMaybe<Scalars['String']>;\n  symbol_in?: InputMaybe<Array<Scalars['String']>>;\n  symbol_lt?: InputMaybe<Scalars['String']>;\n  symbol_lte?: InputMaybe<Scalars['String']>;\n  symbol_not?: InputMaybe<Scalars['String']>;\n  symbol_not_contains?: InputMaybe<Scalars['String']>;\n  symbol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  symbol_not_ends_with?: InputMaybe<Scalars['String']>;\n  symbol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  symbol_not_starts_with?: InputMaybe<Scalars['String']>;\n  symbol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_starts_with?: InputMaybe<Scalars['String']>;\n  symbol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token?: InputMaybe<Scalars['String']>;\n  token_?: InputMaybe<Token_Filter>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  weight?: InputMaybe<Scalars['BigDecimal']>;\n  weight_gt?: InputMaybe<Scalars['BigDecimal']>;\n  weight_gte?: InputMaybe<Scalars['BigDecimal']>;\n  weight_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  weight_lt?: InputMaybe<Scalars['BigDecimal']>;\n  weight_lte?: InputMaybe<Scalars['BigDecimal']>;\n  weight_not?: InputMaybe<Scalars['BigDecimal']>;\n  weight_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum PoolToken_OrderBy {\n  Address = 'address',\n  AssetManager = 'assetManager',\n  Balance = 'balance',\n  CashBalance = 'cashBalance',\n  Decimals = 'decimals',\n  Id = 'id',\n  ManagedBalance = 'managedBalance',\n  Managements = 'managements',\n  Name = 'name',\n  PoolId = 'poolId',\n  PriceRate = 'priceRate',\n  Symbol = 'symbol',\n  Token = 'token',\n  Weight = 'weight'\n}\n\nexport type Pool_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  address?: InputMaybe<Scalars['Bytes']>;\n  address_contains?: InputMaybe<Scalars['Bytes']>;\n  address_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  address_not?: InputMaybe<Scalars['Bytes']>;\n  address_not_contains?: InputMaybe<Scalars['Bytes']>;\n  address_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  amp?: InputMaybe<Scalars['BigInt']>;\n  amp_gt?: InputMaybe<Scalars['BigInt']>;\n  amp_gte?: InputMaybe<Scalars['BigInt']>;\n  amp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  amp_lt?: InputMaybe<Scalars['BigInt']>;\n  amp_lte?: InputMaybe<Scalars['BigInt']>;\n  amp_not?: InputMaybe<Scalars['BigInt']>;\n  amp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  baseToken?: InputMaybe<Scalars['Bytes']>;\n  baseToken_contains?: InputMaybe<Scalars['Bytes']>;\n  baseToken_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  baseToken_not?: InputMaybe<Scalars['Bytes']>;\n  baseToken_not_contains?: InputMaybe<Scalars['Bytes']>;\n  baseToken_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  createTime?: InputMaybe<Scalars['Int']>;\n  createTime_gt?: InputMaybe<Scalars['Int']>;\n  createTime_gte?: InputMaybe<Scalars['Int']>;\n  createTime_in?: InputMaybe<Array<Scalars['Int']>>;\n  createTime_lt?: InputMaybe<Scalars['Int']>;\n  createTime_lte?: InputMaybe<Scalars['Int']>;\n  createTime_not?: InputMaybe<Scalars['Int']>;\n  createTime_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  expiryTime?: InputMaybe<Scalars['BigInt']>;\n  expiryTime_gt?: InputMaybe<Scalars['BigInt']>;\n  expiryTime_gte?: InputMaybe<Scalars['BigInt']>;\n  expiryTime_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  expiryTime_lt?: InputMaybe<Scalars['BigInt']>;\n  expiryTime_lte?: InputMaybe<Scalars['BigInt']>;\n  expiryTime_not?: InputMaybe<Scalars['BigInt']>;\n  expiryTime_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  factory?: InputMaybe<Scalars['Bytes']>;\n  factory_contains?: InputMaybe<Scalars['Bytes']>;\n  factory_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  factory_not?: InputMaybe<Scalars['Bytes']>;\n  factory_not_contains?: InputMaybe<Scalars['Bytes']>;\n  factory_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  historicalValues_?: InputMaybe<PoolHistoricalLiquidity_Filter>;\n  holdersCount?: InputMaybe<Scalars['BigInt']>;\n  holdersCount_gt?: InputMaybe<Scalars['BigInt']>;\n  holdersCount_gte?: InputMaybe<Scalars['BigInt']>;\n  holdersCount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  holdersCount_lt?: InputMaybe<Scalars['BigInt']>;\n  holdersCount_lte?: InputMaybe<Scalars['BigInt']>;\n  holdersCount_not?: InputMaybe<Scalars['BigInt']>;\n  holdersCount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  lowerTarget?: InputMaybe<Scalars['BigDecimal']>;\n  lowerTarget_gt?: InputMaybe<Scalars['BigDecimal']>;\n  lowerTarget_gte?: InputMaybe<Scalars['BigDecimal']>;\n  lowerTarget_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  lowerTarget_lt?: InputMaybe<Scalars['BigDecimal']>;\n  lowerTarget_lte?: InputMaybe<Scalars['BigDecimal']>;\n  lowerTarget_not?: InputMaybe<Scalars['BigDecimal']>;\n  lowerTarget_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  mainIndex?: InputMaybe<Scalars['Int']>;\n  mainIndex_gt?: InputMaybe<Scalars['Int']>;\n  mainIndex_gte?: InputMaybe<Scalars['Int']>;\n  mainIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  mainIndex_lt?: InputMaybe<Scalars['Int']>;\n  mainIndex_lte?: InputMaybe<Scalars['Int']>;\n  mainIndex_not?: InputMaybe<Scalars['Int']>;\n  mainIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  managementFee?: InputMaybe<Scalars['BigDecimal']>;\n  managementFee_gt?: InputMaybe<Scalars['BigDecimal']>;\n  managementFee_gte?: InputMaybe<Scalars['BigDecimal']>;\n  managementFee_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  managementFee_lt?: InputMaybe<Scalars['BigDecimal']>;\n  managementFee_lte?: InputMaybe<Scalars['BigDecimal']>;\n  managementFee_not?: InputMaybe<Scalars['BigDecimal']>;\n  managementFee_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  name?: InputMaybe<Scalars['String']>;\n  name_contains?: InputMaybe<Scalars['String']>;\n  name_contains_nocase?: InputMaybe<Scalars['String']>;\n  name_ends_with?: InputMaybe<Scalars['String']>;\n  name_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  name_gt?: InputMaybe<Scalars['String']>;\n  name_gte?: InputMaybe<Scalars['String']>;\n  name_in?: InputMaybe<Array<Scalars['String']>>;\n  name_lt?: InputMaybe<Scalars['String']>;\n  name_lte?: InputMaybe<Scalars['String']>;\n  name_not?: InputMaybe<Scalars['String']>;\n  name_not_contains?: InputMaybe<Scalars['String']>;\n  name_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  name_not_ends_with?: InputMaybe<Scalars['String']>;\n  name_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  name_not_in?: InputMaybe<Array<Scalars['String']>>;\n  name_not_starts_with?: InputMaybe<Scalars['String']>;\n  name_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  name_starts_with?: InputMaybe<Scalars['String']>;\n  name_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  oracleEnabled?: InputMaybe<Scalars['Boolean']>;\n  oracleEnabled_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  oracleEnabled_not?: InputMaybe<Scalars['Boolean']>;\n  oracleEnabled_not_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  owner?: InputMaybe<Scalars['Bytes']>;\n  owner_contains?: InputMaybe<Scalars['Bytes']>;\n  owner_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  owner_not?: InputMaybe<Scalars['Bytes']>;\n  owner_not_contains?: InputMaybe<Scalars['Bytes']>;\n  owner_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  poolType?: InputMaybe<Scalars['String']>;\n  poolType_contains?: InputMaybe<Scalars['String']>;\n  poolType_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolType_ends_with?: InputMaybe<Scalars['String']>;\n  poolType_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolType_gt?: InputMaybe<Scalars['String']>;\n  poolType_gte?: InputMaybe<Scalars['String']>;\n  poolType_in?: InputMaybe<Array<Scalars['String']>>;\n  poolType_lt?: InputMaybe<Scalars['String']>;\n  poolType_lte?: InputMaybe<Scalars['String']>;\n  poolType_not?: InputMaybe<Scalars['String']>;\n  poolType_not_contains?: InputMaybe<Scalars['String']>;\n  poolType_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolType_not_ends_with?: InputMaybe<Scalars['String']>;\n  poolType_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolType_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolType_not_starts_with?: InputMaybe<Scalars['String']>;\n  poolType_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolType_starts_with?: InputMaybe<Scalars['String']>;\n  poolType_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  priceRateProviders_?: InputMaybe<PriceRateProvider_Filter>;\n  principalToken?: InputMaybe<Scalars['Bytes']>;\n  principalToken_contains?: InputMaybe<Scalars['Bytes']>;\n  principalToken_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  principalToken_not?: InputMaybe<Scalars['Bytes']>;\n  principalToken_not_contains?: InputMaybe<Scalars['Bytes']>;\n  principalToken_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  root3Alpha?: InputMaybe<Scalars['BigDecimal']>;\n  root3Alpha_gt?: InputMaybe<Scalars['BigDecimal']>;\n  root3Alpha_gte?: InputMaybe<Scalars['BigDecimal']>;\n  root3Alpha_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  root3Alpha_lt?: InputMaybe<Scalars['BigDecimal']>;\n  root3Alpha_lte?: InputMaybe<Scalars['BigDecimal']>;\n  root3Alpha_not?: InputMaybe<Scalars['BigDecimal']>;\n  root3Alpha_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  shares_?: InputMaybe<PoolShare_Filter>;\n  snapshots_?: InputMaybe<PoolSnapshot_Filter>;\n  sqrtAlpha?: InputMaybe<Scalars['BigDecimal']>;\n  sqrtAlpha_gt?: InputMaybe<Scalars['BigDecimal']>;\n  sqrtAlpha_gte?: InputMaybe<Scalars['BigDecimal']>;\n  sqrtAlpha_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  sqrtAlpha_lt?: InputMaybe<Scalars['BigDecimal']>;\n  sqrtAlpha_lte?: InputMaybe<Scalars['BigDecimal']>;\n  sqrtAlpha_not?: InputMaybe<Scalars['BigDecimal']>;\n  sqrtAlpha_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  sqrtBeta?: InputMaybe<Scalars['BigDecimal']>;\n  sqrtBeta_gt?: InputMaybe<Scalars['BigDecimal']>;\n  sqrtBeta_gte?: InputMaybe<Scalars['BigDecimal']>;\n  sqrtBeta_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  sqrtBeta_lt?: InputMaybe<Scalars['BigDecimal']>;\n  sqrtBeta_lte?: InputMaybe<Scalars['BigDecimal']>;\n  sqrtBeta_not?: InputMaybe<Scalars['BigDecimal']>;\n  sqrtBeta_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  strategyType?: InputMaybe<Scalars['Int']>;\n  strategyType_gt?: InputMaybe<Scalars['Int']>;\n  strategyType_gte?: InputMaybe<Scalars['Int']>;\n  strategyType_in?: InputMaybe<Array<Scalars['Int']>>;\n  strategyType_lt?: InputMaybe<Scalars['Int']>;\n  strategyType_lte?: InputMaybe<Scalars['Int']>;\n  strategyType_not?: InputMaybe<Scalars['Int']>;\n  strategyType_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  swapEnabled?: InputMaybe<Scalars['Boolean']>;\n  swapEnabled_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  swapEnabled_not?: InputMaybe<Scalars['Boolean']>;\n  swapEnabled_not_in?: InputMaybe<Array<Scalars['Boolean']>>;\n  swapFee?: InputMaybe<Scalars['BigDecimal']>;\n  swapFee_gt?: InputMaybe<Scalars['BigDecimal']>;\n  swapFee_gte?: InputMaybe<Scalars['BigDecimal']>;\n  swapFee_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  swapFee_lt?: InputMaybe<Scalars['BigDecimal']>;\n  swapFee_lte?: InputMaybe<Scalars['BigDecimal']>;\n  swapFee_not?: InputMaybe<Scalars['BigDecimal']>;\n  swapFee_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  swapsCount?: InputMaybe<Scalars['BigInt']>;\n  swapsCount_gt?: InputMaybe<Scalars['BigInt']>;\n  swapsCount_gte?: InputMaybe<Scalars['BigInt']>;\n  swapsCount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  swapsCount_lt?: InputMaybe<Scalars['BigInt']>;\n  swapsCount_lte?: InputMaybe<Scalars['BigInt']>;\n  swapsCount_not?: InputMaybe<Scalars['BigInt']>;\n  swapsCount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  swaps_?: InputMaybe<Swap_Filter>;\n  symbol?: InputMaybe<Scalars['String']>;\n  symbol_contains?: InputMaybe<Scalars['String']>;\n  symbol_contains_nocase?: InputMaybe<Scalars['String']>;\n  symbol_ends_with?: InputMaybe<Scalars['String']>;\n  symbol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_gt?: InputMaybe<Scalars['String']>;\n  symbol_gte?: InputMaybe<Scalars['String']>;\n  symbol_in?: InputMaybe<Array<Scalars['String']>>;\n  symbol_lt?: InputMaybe<Scalars['String']>;\n  symbol_lte?: InputMaybe<Scalars['String']>;\n  symbol_not?: InputMaybe<Scalars['String']>;\n  symbol_not_contains?: InputMaybe<Scalars['String']>;\n  symbol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  symbol_not_ends_with?: InputMaybe<Scalars['String']>;\n  symbol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  symbol_not_starts_with?: InputMaybe<Scalars['String']>;\n  symbol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_starts_with?: InputMaybe<Scalars['String']>;\n  symbol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  tokensList?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokensList_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokensList_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokensList_not?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokensList_not_contains?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokensList_not_contains_nocase?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokens_?: InputMaybe<PoolToken_Filter>;\n  totalLiquidity?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalLiquidity_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalLiquidity_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalShares?: InputMaybe<Scalars['BigDecimal']>;\n  totalShares_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalShares_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalShares_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalShares_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalShares_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalShares_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalShares_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapFee?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapFee_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapVolume?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapVolume_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalWeight?: InputMaybe<Scalars['BigDecimal']>;\n  totalWeight_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalWeight_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalWeight_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalWeight_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalWeight_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalWeight_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalWeight_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  tx?: InputMaybe<Scalars['Bytes']>;\n  tx_contains?: InputMaybe<Scalars['Bytes']>;\n  tx_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  tx_not?: InputMaybe<Scalars['Bytes']>;\n  tx_not_contains?: InputMaybe<Scalars['Bytes']>;\n  tx_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  unitSeconds?: InputMaybe<Scalars['BigInt']>;\n  unitSeconds_gt?: InputMaybe<Scalars['BigInt']>;\n  unitSeconds_gte?: InputMaybe<Scalars['BigInt']>;\n  unitSeconds_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  unitSeconds_lt?: InputMaybe<Scalars['BigInt']>;\n  unitSeconds_lte?: InputMaybe<Scalars['BigInt']>;\n  unitSeconds_not?: InputMaybe<Scalars['BigInt']>;\n  unitSeconds_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  upperTarget?: InputMaybe<Scalars['BigDecimal']>;\n  upperTarget_gt?: InputMaybe<Scalars['BigDecimal']>;\n  upperTarget_gte?: InputMaybe<Scalars['BigDecimal']>;\n  upperTarget_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  upperTarget_lt?: InputMaybe<Scalars['BigDecimal']>;\n  upperTarget_lte?: InputMaybe<Scalars['BigDecimal']>;\n  upperTarget_not?: InputMaybe<Scalars['BigDecimal']>;\n  upperTarget_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  vaultID?: InputMaybe<Scalars['String']>;\n  vaultID_?: InputMaybe<Balancer_Filter>;\n  vaultID_contains?: InputMaybe<Scalars['String']>;\n  vaultID_contains_nocase?: InputMaybe<Scalars['String']>;\n  vaultID_ends_with?: InputMaybe<Scalars['String']>;\n  vaultID_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  vaultID_gt?: InputMaybe<Scalars['String']>;\n  vaultID_gte?: InputMaybe<Scalars['String']>;\n  vaultID_in?: InputMaybe<Array<Scalars['String']>>;\n  vaultID_lt?: InputMaybe<Scalars['String']>;\n  vaultID_lte?: InputMaybe<Scalars['String']>;\n  vaultID_not?: InputMaybe<Scalars['String']>;\n  vaultID_not_contains?: InputMaybe<Scalars['String']>;\n  vaultID_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  vaultID_not_ends_with?: InputMaybe<Scalars['String']>;\n  vaultID_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  vaultID_not_in?: InputMaybe<Array<Scalars['String']>>;\n  vaultID_not_starts_with?: InputMaybe<Scalars['String']>;\n  vaultID_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  vaultID_starts_with?: InputMaybe<Scalars['String']>;\n  vaultID_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  weightUpdates_?: InputMaybe<GradualWeightUpdate_Filter>;\n  wrappedIndex?: InputMaybe<Scalars['Int']>;\n  wrappedIndex_gt?: InputMaybe<Scalars['Int']>;\n  wrappedIndex_gte?: InputMaybe<Scalars['Int']>;\n  wrappedIndex_in?: InputMaybe<Array<Scalars['Int']>>;\n  wrappedIndex_lt?: InputMaybe<Scalars['Int']>;\n  wrappedIndex_lte?: InputMaybe<Scalars['Int']>;\n  wrappedIndex_not?: InputMaybe<Scalars['Int']>;\n  wrappedIndex_not_in?: InputMaybe<Array<Scalars['Int']>>;\n};\n\nexport enum Pool_OrderBy {\n  Address = 'address',\n  Amp = 'amp',\n  BaseToken = 'baseToken',\n  CreateTime = 'createTime',\n  ExpiryTime = 'expiryTime',\n  Factory = 'factory',\n  HistoricalValues = 'historicalValues',\n  HoldersCount = 'holdersCount',\n  Id = 'id',\n  LowerTarget = 'lowerTarget',\n  MainIndex = 'mainIndex',\n  ManagementFee = 'managementFee',\n  Name = 'name',\n  OracleEnabled = 'oracleEnabled',\n  Owner = 'owner',\n  PoolType = 'poolType',\n  PriceRateProviders = 'priceRateProviders',\n  PrincipalToken = 'principalToken',\n  Root3Alpha = 'root3Alpha',\n  Shares = 'shares',\n  Snapshots = 'snapshots',\n  SqrtAlpha = 'sqrtAlpha',\n  SqrtBeta = 'sqrtBeta',\n  StrategyType = 'strategyType',\n  SwapEnabled = 'swapEnabled',\n  SwapFee = 'swapFee',\n  Swaps = 'swaps',\n  SwapsCount = 'swapsCount',\n  Symbol = 'symbol',\n  Tokens = 'tokens',\n  TokensList = 'tokensList',\n  TotalLiquidity = 'totalLiquidity',\n  TotalShares = 'totalShares',\n  TotalSwapFee = 'totalSwapFee',\n  TotalSwapVolume = 'totalSwapVolume',\n  TotalWeight = 'totalWeight',\n  Tx = 'tx',\n  UnitSeconds = 'unitSeconds',\n  UpperTarget = 'upperTarget',\n  VaultId = 'vaultID',\n  WeightUpdates = 'weightUpdates',\n  WrappedIndex = 'wrappedIndex'\n}\n\nexport type PriceRateProvider = {\n  __typename?: 'PriceRateProvider';\n  address: Scalars['Bytes'];\n  cacheDuration: Scalars['Int'];\n  cacheExpiry: Scalars['Int'];\n  id: Scalars['ID'];\n  lastCached: Scalars['Int'];\n  poolId: Pool;\n  rate: Scalars['BigDecimal'];\n  token: PoolToken;\n};\n\nexport type PriceRateProvider_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  address?: InputMaybe<Scalars['Bytes']>;\n  address_contains?: InputMaybe<Scalars['Bytes']>;\n  address_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  address_not?: InputMaybe<Scalars['Bytes']>;\n  address_not_contains?: InputMaybe<Scalars['Bytes']>;\n  address_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  cacheDuration?: InputMaybe<Scalars['Int']>;\n  cacheDuration_gt?: InputMaybe<Scalars['Int']>;\n  cacheDuration_gte?: InputMaybe<Scalars['Int']>;\n  cacheDuration_in?: InputMaybe<Array<Scalars['Int']>>;\n  cacheDuration_lt?: InputMaybe<Scalars['Int']>;\n  cacheDuration_lte?: InputMaybe<Scalars['Int']>;\n  cacheDuration_not?: InputMaybe<Scalars['Int']>;\n  cacheDuration_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  cacheExpiry?: InputMaybe<Scalars['Int']>;\n  cacheExpiry_gt?: InputMaybe<Scalars['Int']>;\n  cacheExpiry_gte?: InputMaybe<Scalars['Int']>;\n  cacheExpiry_in?: InputMaybe<Array<Scalars['Int']>>;\n  cacheExpiry_lt?: InputMaybe<Scalars['Int']>;\n  cacheExpiry_lte?: InputMaybe<Scalars['Int']>;\n  cacheExpiry_not?: InputMaybe<Scalars['Int']>;\n  cacheExpiry_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  lastCached?: InputMaybe<Scalars['Int']>;\n  lastCached_gt?: InputMaybe<Scalars['Int']>;\n  lastCached_gte?: InputMaybe<Scalars['Int']>;\n  lastCached_in?: InputMaybe<Array<Scalars['Int']>>;\n  lastCached_lt?: InputMaybe<Scalars['Int']>;\n  lastCached_lte?: InputMaybe<Scalars['Int']>;\n  lastCached_not?: InputMaybe<Scalars['Int']>;\n  lastCached_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  poolId?: InputMaybe<Scalars['String']>;\n  poolId_?: InputMaybe<Pool_Filter>;\n  poolId_contains?: InputMaybe<Scalars['String']>;\n  poolId_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_gt?: InputMaybe<Scalars['String']>;\n  poolId_gte?: InputMaybe<Scalars['String']>;\n  poolId_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_lt?: InputMaybe<Scalars['String']>;\n  poolId_lte?: InputMaybe<Scalars['String']>;\n  poolId_not?: InputMaybe<Scalars['String']>;\n  poolId_not_contains?: InputMaybe<Scalars['String']>;\n  poolId_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_not_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  rate?: InputMaybe<Scalars['BigDecimal']>;\n  rate_gt?: InputMaybe<Scalars['BigDecimal']>;\n  rate_gte?: InputMaybe<Scalars['BigDecimal']>;\n  rate_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  rate_lt?: InputMaybe<Scalars['BigDecimal']>;\n  rate_lte?: InputMaybe<Scalars['BigDecimal']>;\n  rate_not?: InputMaybe<Scalars['BigDecimal']>;\n  rate_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  token?: InputMaybe<Scalars['String']>;\n  token_?: InputMaybe<PoolToken_Filter>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum PriceRateProvider_OrderBy {\n  Address = 'address',\n  CacheDuration = 'cacheDuration',\n  CacheExpiry = 'cacheExpiry',\n  Id = 'id',\n  LastCached = 'lastCached',\n  PoolId = 'poolId',\n  Rate = 'rate',\n  Token = 'token'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Access to subgraph metadata */\n  _meta?: Maybe<_Meta_>;\n  ampUpdate?: Maybe<AmpUpdate>;\n  ampUpdates: Array<AmpUpdate>;\n  balancer?: Maybe<Balancer>;\n  balancerSnapshot?: Maybe<BalancerSnapshot>;\n  balancerSnapshots: Array<BalancerSnapshot>;\n  balancers: Array<Balancer>;\n  gradualWeightUpdate?: Maybe<GradualWeightUpdate>;\n  gradualWeightUpdates: Array<GradualWeightUpdate>;\n  joinExit?: Maybe<JoinExit>;\n  joinExits: Array<JoinExit>;\n  latestPrice?: Maybe<LatestPrice>;\n  latestPrices: Array<LatestPrice>;\n  managementOperation?: Maybe<ManagementOperation>;\n  managementOperations: Array<ManagementOperation>;\n  pool?: Maybe<Pool>;\n  poolHistoricalLiquidities: Array<PoolHistoricalLiquidity>;\n  poolHistoricalLiquidity?: Maybe<PoolHistoricalLiquidity>;\n  poolShare?: Maybe<PoolShare>;\n  poolShares: Array<PoolShare>;\n  poolSnapshot?: Maybe<PoolSnapshot>;\n  poolSnapshots: Array<PoolSnapshot>;\n  poolToken?: Maybe<PoolToken>;\n  poolTokens: Array<PoolToken>;\n  pools: Array<Pool>;\n  priceRateProvider?: Maybe<PriceRateProvider>;\n  priceRateProviders: Array<PriceRateProvider>;\n  swap?: Maybe<Swap>;\n  swaps: Array<Swap>;\n  token?: Maybe<Token>;\n  tokenPrice?: Maybe<TokenPrice>;\n  tokenPrices: Array<TokenPrice>;\n  tokenSnapshot?: Maybe<TokenSnapshot>;\n  tokenSnapshots: Array<TokenSnapshot>;\n  tokens: Array<Token>;\n  tradePair?: Maybe<TradePair>;\n  tradePairSnapshot?: Maybe<TradePairSnapshot>;\n  tradePairSnapshots: Array<TradePairSnapshot>;\n  tradePairs: Array<TradePair>;\n  user?: Maybe<User>;\n  userInternalBalance?: Maybe<UserInternalBalance>;\n  userInternalBalances: Array<UserInternalBalance>;\n  users: Array<User>;\n};\n\n\nexport type Query_MetaArgs = {\n  block?: InputMaybe<Block_Height>;\n};\n\n\nexport type QueryAmpUpdateArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryAmpUpdatesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<AmpUpdate_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<AmpUpdate_Filter>;\n};\n\n\nexport type QueryBalancerArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryBalancerSnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryBalancerSnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<BalancerSnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<BalancerSnapshot_Filter>;\n};\n\n\nexport type QueryBalancersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Balancer_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Balancer_Filter>;\n};\n\n\nexport type QueryGradualWeightUpdateArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryGradualWeightUpdatesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GradualWeightUpdate_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<GradualWeightUpdate_Filter>;\n};\n\n\nexport type QueryJoinExitArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryJoinExitsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<JoinExit_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<JoinExit_Filter>;\n};\n\n\nexport type QueryLatestPriceArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryLatestPricesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LatestPrice_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<LatestPrice_Filter>;\n};\n\n\nexport type QueryManagementOperationArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryManagementOperationsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ManagementOperation_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<ManagementOperation_Filter>;\n};\n\n\nexport type QueryPoolArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPoolHistoricalLiquiditiesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolHistoricalLiquidity_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PoolHistoricalLiquidity_Filter>;\n};\n\n\nexport type QueryPoolHistoricalLiquidityArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPoolShareArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPoolSharesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolShare_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PoolShare_Filter>;\n};\n\n\nexport type QueryPoolSnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPoolSnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolSnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PoolSnapshot_Filter>;\n};\n\n\nexport type QueryPoolTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPoolTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PoolToken_Filter>;\n};\n\n\nexport type QueryPoolsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Pool_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Pool_Filter>;\n};\n\n\nexport type QueryPriceRateProviderArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryPriceRateProvidersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PriceRateProvider_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PriceRateProvider_Filter>;\n};\n\n\nexport type QuerySwapArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QuerySwapsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Swap_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Swap_Filter>;\n};\n\n\nexport type QueryTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTokenPriceArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTokenPricesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TokenPrice_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<TokenPrice_Filter>;\n};\n\n\nexport type QueryTokenSnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTokenSnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TokenSnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<TokenSnapshot_Filter>;\n};\n\n\nexport type QueryTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Token_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Token_Filter>;\n};\n\n\nexport type QueryTradePairArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTradePairSnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryTradePairSnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TradePairSnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<TradePairSnapshot_Filter>;\n};\n\n\nexport type QueryTradePairsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TradePair_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<TradePair_Filter>;\n};\n\n\nexport type QueryUserArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryUserInternalBalanceArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryUserInternalBalancesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<UserInternalBalance_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<UserInternalBalance_Filter>;\n};\n\n\nexport type QueryUsersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<User_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<User_Filter>;\n};\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  /** Access to subgraph metadata */\n  _meta?: Maybe<_Meta_>;\n  ampUpdate?: Maybe<AmpUpdate>;\n  ampUpdates: Array<AmpUpdate>;\n  balancer?: Maybe<Balancer>;\n  balancerSnapshot?: Maybe<BalancerSnapshot>;\n  balancerSnapshots: Array<BalancerSnapshot>;\n  balancers: Array<Balancer>;\n  gradualWeightUpdate?: Maybe<GradualWeightUpdate>;\n  gradualWeightUpdates: Array<GradualWeightUpdate>;\n  joinExit?: Maybe<JoinExit>;\n  joinExits: Array<JoinExit>;\n  latestPrice?: Maybe<LatestPrice>;\n  latestPrices: Array<LatestPrice>;\n  managementOperation?: Maybe<ManagementOperation>;\n  managementOperations: Array<ManagementOperation>;\n  pool?: Maybe<Pool>;\n  poolHistoricalLiquidities: Array<PoolHistoricalLiquidity>;\n  poolHistoricalLiquidity?: Maybe<PoolHistoricalLiquidity>;\n  poolShare?: Maybe<PoolShare>;\n  poolShares: Array<PoolShare>;\n  poolSnapshot?: Maybe<PoolSnapshot>;\n  poolSnapshots: Array<PoolSnapshot>;\n  poolToken?: Maybe<PoolToken>;\n  poolTokens: Array<PoolToken>;\n  pools: Array<Pool>;\n  priceRateProvider?: Maybe<PriceRateProvider>;\n  priceRateProviders: Array<PriceRateProvider>;\n  swap?: Maybe<Swap>;\n  swaps: Array<Swap>;\n  token?: Maybe<Token>;\n  tokenPrice?: Maybe<TokenPrice>;\n  tokenPrices: Array<TokenPrice>;\n  tokenSnapshot?: Maybe<TokenSnapshot>;\n  tokenSnapshots: Array<TokenSnapshot>;\n  tokens: Array<Token>;\n  tradePair?: Maybe<TradePair>;\n  tradePairSnapshot?: Maybe<TradePairSnapshot>;\n  tradePairSnapshots: Array<TradePairSnapshot>;\n  tradePairs: Array<TradePair>;\n  user?: Maybe<User>;\n  userInternalBalance?: Maybe<UserInternalBalance>;\n  userInternalBalances: Array<UserInternalBalance>;\n  users: Array<User>;\n};\n\n\nexport type Subscription_MetaArgs = {\n  block?: InputMaybe<Block_Height>;\n};\n\n\nexport type SubscriptionAmpUpdateArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionAmpUpdatesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<AmpUpdate_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<AmpUpdate_Filter>;\n};\n\n\nexport type SubscriptionBalancerArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionBalancerSnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionBalancerSnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<BalancerSnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<BalancerSnapshot_Filter>;\n};\n\n\nexport type SubscriptionBalancersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Balancer_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Balancer_Filter>;\n};\n\n\nexport type SubscriptionGradualWeightUpdateArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionGradualWeightUpdatesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GradualWeightUpdate_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<GradualWeightUpdate_Filter>;\n};\n\n\nexport type SubscriptionJoinExitArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionJoinExitsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<JoinExit_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<JoinExit_Filter>;\n};\n\n\nexport type SubscriptionLatestPriceArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionLatestPricesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LatestPrice_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<LatestPrice_Filter>;\n};\n\n\nexport type SubscriptionManagementOperationArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionManagementOperationsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<ManagementOperation_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<ManagementOperation_Filter>;\n};\n\n\nexport type SubscriptionPoolArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPoolHistoricalLiquiditiesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolHistoricalLiquidity_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PoolHistoricalLiquidity_Filter>;\n};\n\n\nexport type SubscriptionPoolHistoricalLiquidityArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPoolShareArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPoolSharesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolShare_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PoolShare_Filter>;\n};\n\n\nexport type SubscriptionPoolSnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPoolSnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolSnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PoolSnapshot_Filter>;\n};\n\n\nexport type SubscriptionPoolTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPoolTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PoolToken_Filter>;\n};\n\n\nexport type SubscriptionPoolsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Pool_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Pool_Filter>;\n};\n\n\nexport type SubscriptionPriceRateProviderArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionPriceRateProvidersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PriceRateProvider_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<PriceRateProvider_Filter>;\n};\n\n\nexport type SubscriptionSwapArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionSwapsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Swap_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Swap_Filter>;\n};\n\n\nexport type SubscriptionTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTokenPriceArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTokenPricesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TokenPrice_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<TokenPrice_Filter>;\n};\n\n\nexport type SubscriptionTokenSnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTokenSnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TokenSnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<TokenSnapshot_Filter>;\n};\n\n\nexport type SubscriptionTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Token_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Token_Filter>;\n};\n\n\nexport type SubscriptionTradePairArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTradePairSnapshotArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionTradePairSnapshotsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TradePairSnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<TradePairSnapshot_Filter>;\n};\n\n\nexport type SubscriptionTradePairsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TradePair_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<TradePair_Filter>;\n};\n\n\nexport type SubscriptionUserArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionUserInternalBalanceArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionUserInternalBalancesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<UserInternalBalance_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<UserInternalBalance_Filter>;\n};\n\n\nexport type SubscriptionUsersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<User_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<User_Filter>;\n};\n\nexport type Swap = {\n  __typename?: 'Swap';\n  caller: Scalars['Bytes'];\n  id: Scalars['ID'];\n  poolId: Pool;\n  timestamp: Scalars['Int'];\n  tokenAmountIn: Scalars['BigDecimal'];\n  tokenAmountOut: Scalars['BigDecimal'];\n  tokenIn: Scalars['Bytes'];\n  tokenInSym: Scalars['String'];\n  tokenOut: Scalars['Bytes'];\n  tokenOutSym: Scalars['String'];\n  tx: Scalars['Bytes'];\n  userAddress: User;\n  valueUSD: Scalars['BigDecimal'];\n};\n\nexport type Swap_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  caller?: InputMaybe<Scalars['Bytes']>;\n  caller_contains?: InputMaybe<Scalars['Bytes']>;\n  caller_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  caller_not?: InputMaybe<Scalars['Bytes']>;\n  caller_not_contains?: InputMaybe<Scalars['Bytes']>;\n  caller_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  poolId?: InputMaybe<Scalars['String']>;\n  poolId_?: InputMaybe<Pool_Filter>;\n  poolId_contains?: InputMaybe<Scalars['String']>;\n  poolId_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_gt?: InputMaybe<Scalars['String']>;\n  poolId_gte?: InputMaybe<Scalars['String']>;\n  poolId_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_lt?: InputMaybe<Scalars['String']>;\n  poolId_lte?: InputMaybe<Scalars['String']>;\n  poolId_not?: InputMaybe<Scalars['String']>;\n  poolId_not_contains?: InputMaybe<Scalars['String']>;\n  poolId_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_not_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['Int']>;\n  timestamp_gt?: InputMaybe<Scalars['Int']>;\n  timestamp_gte?: InputMaybe<Scalars['Int']>;\n  timestamp_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp_lt?: InputMaybe<Scalars['Int']>;\n  timestamp_lte?: InputMaybe<Scalars['Int']>;\n  timestamp_not?: InputMaybe<Scalars['Int']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  tokenAmountIn?: InputMaybe<Scalars['BigDecimal']>;\n  tokenAmountIn_gt?: InputMaybe<Scalars['BigDecimal']>;\n  tokenAmountIn_gte?: InputMaybe<Scalars['BigDecimal']>;\n  tokenAmountIn_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  tokenAmountIn_lt?: InputMaybe<Scalars['BigDecimal']>;\n  tokenAmountIn_lte?: InputMaybe<Scalars['BigDecimal']>;\n  tokenAmountIn_not?: InputMaybe<Scalars['BigDecimal']>;\n  tokenAmountIn_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  tokenAmountOut?: InputMaybe<Scalars['BigDecimal']>;\n  tokenAmountOut_gt?: InputMaybe<Scalars['BigDecimal']>;\n  tokenAmountOut_gte?: InputMaybe<Scalars['BigDecimal']>;\n  tokenAmountOut_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  tokenAmountOut_lt?: InputMaybe<Scalars['BigDecimal']>;\n  tokenAmountOut_lte?: InputMaybe<Scalars['BigDecimal']>;\n  tokenAmountOut_not?: InputMaybe<Scalars['BigDecimal']>;\n  tokenAmountOut_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  tokenIn?: InputMaybe<Scalars['Bytes']>;\n  tokenInSym?: InputMaybe<Scalars['String']>;\n  tokenInSym_contains?: InputMaybe<Scalars['String']>;\n  tokenInSym_contains_nocase?: InputMaybe<Scalars['String']>;\n  tokenInSym_ends_with?: InputMaybe<Scalars['String']>;\n  tokenInSym_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  tokenInSym_gt?: InputMaybe<Scalars['String']>;\n  tokenInSym_gte?: InputMaybe<Scalars['String']>;\n  tokenInSym_in?: InputMaybe<Array<Scalars['String']>>;\n  tokenInSym_lt?: InputMaybe<Scalars['String']>;\n  tokenInSym_lte?: InputMaybe<Scalars['String']>;\n  tokenInSym_not?: InputMaybe<Scalars['String']>;\n  tokenInSym_not_contains?: InputMaybe<Scalars['String']>;\n  tokenInSym_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  tokenInSym_not_ends_with?: InputMaybe<Scalars['String']>;\n  tokenInSym_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  tokenInSym_not_in?: InputMaybe<Array<Scalars['String']>>;\n  tokenInSym_not_starts_with?: InputMaybe<Scalars['String']>;\n  tokenInSym_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  tokenInSym_starts_with?: InputMaybe<Scalars['String']>;\n  tokenInSym_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  tokenIn_contains?: InputMaybe<Scalars['Bytes']>;\n  tokenIn_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokenIn_not?: InputMaybe<Scalars['Bytes']>;\n  tokenIn_not_contains?: InputMaybe<Scalars['Bytes']>;\n  tokenIn_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokenOut?: InputMaybe<Scalars['Bytes']>;\n  tokenOutSym?: InputMaybe<Scalars['String']>;\n  tokenOutSym_contains?: InputMaybe<Scalars['String']>;\n  tokenOutSym_contains_nocase?: InputMaybe<Scalars['String']>;\n  tokenOutSym_ends_with?: InputMaybe<Scalars['String']>;\n  tokenOutSym_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  tokenOutSym_gt?: InputMaybe<Scalars['String']>;\n  tokenOutSym_gte?: InputMaybe<Scalars['String']>;\n  tokenOutSym_in?: InputMaybe<Array<Scalars['String']>>;\n  tokenOutSym_lt?: InputMaybe<Scalars['String']>;\n  tokenOutSym_lte?: InputMaybe<Scalars['String']>;\n  tokenOutSym_not?: InputMaybe<Scalars['String']>;\n  tokenOutSym_not_contains?: InputMaybe<Scalars['String']>;\n  tokenOutSym_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  tokenOutSym_not_ends_with?: InputMaybe<Scalars['String']>;\n  tokenOutSym_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  tokenOutSym_not_in?: InputMaybe<Array<Scalars['String']>>;\n  tokenOutSym_not_starts_with?: InputMaybe<Scalars['String']>;\n  tokenOutSym_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  tokenOutSym_starts_with?: InputMaybe<Scalars['String']>;\n  tokenOutSym_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  tokenOut_contains?: InputMaybe<Scalars['Bytes']>;\n  tokenOut_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  tokenOut_not?: InputMaybe<Scalars['Bytes']>;\n  tokenOut_not_contains?: InputMaybe<Scalars['Bytes']>;\n  tokenOut_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  tx?: InputMaybe<Scalars['Bytes']>;\n  tx_contains?: InputMaybe<Scalars['Bytes']>;\n  tx_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  tx_not?: InputMaybe<Scalars['Bytes']>;\n  tx_not_contains?: InputMaybe<Scalars['Bytes']>;\n  tx_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  userAddress?: InputMaybe<Scalars['String']>;\n  userAddress_?: InputMaybe<User_Filter>;\n  userAddress_contains?: InputMaybe<Scalars['String']>;\n  userAddress_contains_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_ends_with?: InputMaybe<Scalars['String']>;\n  userAddress_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_gt?: InputMaybe<Scalars['String']>;\n  userAddress_gte?: InputMaybe<Scalars['String']>;\n  userAddress_in?: InputMaybe<Array<Scalars['String']>>;\n  userAddress_lt?: InputMaybe<Scalars['String']>;\n  userAddress_lte?: InputMaybe<Scalars['String']>;\n  userAddress_not?: InputMaybe<Scalars['String']>;\n  userAddress_not_contains?: InputMaybe<Scalars['String']>;\n  userAddress_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_not_ends_with?: InputMaybe<Scalars['String']>;\n  userAddress_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_not_in?: InputMaybe<Array<Scalars['String']>>;\n  userAddress_not_starts_with?: InputMaybe<Scalars['String']>;\n  userAddress_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_starts_with?: InputMaybe<Scalars['String']>;\n  userAddress_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  valueUSD?: InputMaybe<Scalars['BigDecimal']>;\n  valueUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  valueUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  valueUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  valueUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  valueUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  valueUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  valueUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum Swap_OrderBy {\n  Caller = 'caller',\n  Id = 'id',\n  PoolId = 'poolId',\n  Timestamp = 'timestamp',\n  TokenAmountIn = 'tokenAmountIn',\n  TokenAmountOut = 'tokenAmountOut',\n  TokenIn = 'tokenIn',\n  TokenInSym = 'tokenInSym',\n  TokenOut = 'tokenOut',\n  TokenOutSym = 'tokenOutSym',\n  Tx = 'tx',\n  UserAddress = 'userAddress',\n  ValueUsd = 'valueUSD'\n}\n\nexport type Token = {\n  __typename?: 'Token';\n  address: Scalars['String'];\n  decimals: Scalars['Int'];\n  id: Scalars['ID'];\n  latestPrice?: Maybe<LatestPrice>;\n  latestUSDPrice?: Maybe<Scalars['BigDecimal']>;\n  name?: Maybe<Scalars['String']>;\n  pool?: Maybe<Pool>;\n  symbol?: Maybe<Scalars['String']>;\n  totalBalanceNotional: Scalars['BigDecimal'];\n  totalBalanceUSD: Scalars['BigDecimal'];\n  totalSwapCount: Scalars['BigInt'];\n  totalVolumeNotional: Scalars['BigDecimal'];\n  totalVolumeUSD: Scalars['BigDecimal'];\n};\n\nexport type TokenPrice = {\n  __typename?: 'TokenPrice';\n  amount: Scalars['BigDecimal'];\n  asset: Scalars['Bytes'];\n  block: Scalars['BigInt'];\n  id: Scalars['ID'];\n  poolId: Pool;\n  price: Scalars['BigDecimal'];\n  pricingAsset: Scalars['Bytes'];\n  timestamp: Scalars['Int'];\n};\n\nexport type TokenPrice_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  amount?: InputMaybe<Scalars['BigDecimal']>;\n  amount_gt?: InputMaybe<Scalars['BigDecimal']>;\n  amount_gte?: InputMaybe<Scalars['BigDecimal']>;\n  amount_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  amount_lt?: InputMaybe<Scalars['BigDecimal']>;\n  amount_lte?: InputMaybe<Scalars['BigDecimal']>;\n  amount_not?: InputMaybe<Scalars['BigDecimal']>;\n  amount_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  asset?: InputMaybe<Scalars['Bytes']>;\n  asset_contains?: InputMaybe<Scalars['Bytes']>;\n  asset_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  asset_not?: InputMaybe<Scalars['Bytes']>;\n  asset_not_contains?: InputMaybe<Scalars['Bytes']>;\n  asset_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  block?: InputMaybe<Scalars['BigInt']>;\n  block_gt?: InputMaybe<Scalars['BigInt']>;\n  block_gte?: InputMaybe<Scalars['BigInt']>;\n  block_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  block_lt?: InputMaybe<Scalars['BigInt']>;\n  block_lte?: InputMaybe<Scalars['BigInt']>;\n  block_not?: InputMaybe<Scalars['BigInt']>;\n  block_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  poolId?: InputMaybe<Scalars['String']>;\n  poolId_?: InputMaybe<Pool_Filter>;\n  poolId_contains?: InputMaybe<Scalars['String']>;\n  poolId_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_gt?: InputMaybe<Scalars['String']>;\n  poolId_gte?: InputMaybe<Scalars['String']>;\n  poolId_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_lt?: InputMaybe<Scalars['String']>;\n  poolId_lte?: InputMaybe<Scalars['String']>;\n  poolId_not?: InputMaybe<Scalars['String']>;\n  poolId_not_contains?: InputMaybe<Scalars['String']>;\n  poolId_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with?: InputMaybe<Scalars['String']>;\n  poolId_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['String']>>;\n  poolId_not_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  poolId_starts_with?: InputMaybe<Scalars['String']>;\n  poolId_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  price?: InputMaybe<Scalars['BigDecimal']>;\n  price_gt?: InputMaybe<Scalars['BigDecimal']>;\n  price_gte?: InputMaybe<Scalars['BigDecimal']>;\n  price_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  price_lt?: InputMaybe<Scalars['BigDecimal']>;\n  price_lte?: InputMaybe<Scalars['BigDecimal']>;\n  price_not?: InputMaybe<Scalars['BigDecimal']>;\n  price_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  pricingAsset?: InputMaybe<Scalars['Bytes']>;\n  pricingAsset_contains?: InputMaybe<Scalars['Bytes']>;\n  pricingAsset_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  pricingAsset_not?: InputMaybe<Scalars['Bytes']>;\n  pricingAsset_not_contains?: InputMaybe<Scalars['Bytes']>;\n  pricingAsset_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  timestamp?: InputMaybe<Scalars['Int']>;\n  timestamp_gt?: InputMaybe<Scalars['Int']>;\n  timestamp_gte?: InputMaybe<Scalars['Int']>;\n  timestamp_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp_lt?: InputMaybe<Scalars['Int']>;\n  timestamp_lte?: InputMaybe<Scalars['Int']>;\n  timestamp_not?: InputMaybe<Scalars['Int']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['Int']>>;\n};\n\nexport enum TokenPrice_OrderBy {\n  Amount = 'amount',\n  Asset = 'asset',\n  Block = 'block',\n  Id = 'id',\n  PoolId = 'poolId',\n  Price = 'price',\n  PricingAsset = 'pricingAsset',\n  Timestamp = 'timestamp'\n}\n\nexport type TokenSnapshot = {\n  __typename?: 'TokenSnapshot';\n  id: Scalars['ID'];\n  timestamp: Scalars['Int'];\n  token: Token;\n  totalBalanceNotional: Scalars['BigDecimal'];\n  totalBalanceUSD: Scalars['BigDecimal'];\n  totalSwapCount: Scalars['BigInt'];\n  totalVolumeNotional: Scalars['BigDecimal'];\n  totalVolumeUSD: Scalars['BigDecimal'];\n};\n\nexport type TokenSnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  timestamp?: InputMaybe<Scalars['Int']>;\n  timestamp_gt?: InputMaybe<Scalars['Int']>;\n  timestamp_gte?: InputMaybe<Scalars['Int']>;\n  timestamp_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp_lt?: InputMaybe<Scalars['Int']>;\n  timestamp_lte?: InputMaybe<Scalars['Int']>;\n  timestamp_not?: InputMaybe<Scalars['Int']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  token?: InputMaybe<Scalars['String']>;\n  token_?: InputMaybe<Token_Filter>;\n  token_contains?: InputMaybe<Scalars['String']>;\n  token_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_ends_with?: InputMaybe<Scalars['String']>;\n  token_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_gt?: InputMaybe<Scalars['String']>;\n  token_gte?: InputMaybe<Scalars['String']>;\n  token_in?: InputMaybe<Array<Scalars['String']>>;\n  token_lt?: InputMaybe<Scalars['String']>;\n  token_lte?: InputMaybe<Scalars['String']>;\n  token_not?: InputMaybe<Scalars['String']>;\n  token_not_contains?: InputMaybe<Scalars['String']>;\n  token_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token_not_ends_with?: InputMaybe<Scalars['String']>;\n  token_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token_not_starts_with?: InputMaybe<Scalars['String']>;\n  token_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token_starts_with?: InputMaybe<Scalars['String']>;\n  token_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  totalBalanceNotional?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceNotional_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceNotional_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceNotional_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalBalanceNotional_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceNotional_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceNotional_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceNotional_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalBalanceUSD?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalBalanceUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapCount?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSwapCount_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_not?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalVolumeNotional?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeNotional_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeNotional_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeNotional_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalVolumeNotional_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeNotional_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeNotional_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeNotional_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalVolumeUSD?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalVolumeUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum TokenSnapshot_OrderBy {\n  Id = 'id',\n  Timestamp = 'timestamp',\n  Token = 'token',\n  TotalBalanceNotional = 'totalBalanceNotional',\n  TotalBalanceUsd = 'totalBalanceUSD',\n  TotalSwapCount = 'totalSwapCount',\n  TotalVolumeNotional = 'totalVolumeNotional',\n  TotalVolumeUsd = 'totalVolumeUSD'\n}\n\nexport type Token_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  address?: InputMaybe<Scalars['String']>;\n  address_contains?: InputMaybe<Scalars['String']>;\n  address_contains_nocase?: InputMaybe<Scalars['String']>;\n  address_ends_with?: InputMaybe<Scalars['String']>;\n  address_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  address_gt?: InputMaybe<Scalars['String']>;\n  address_gte?: InputMaybe<Scalars['String']>;\n  address_in?: InputMaybe<Array<Scalars['String']>>;\n  address_lt?: InputMaybe<Scalars['String']>;\n  address_lte?: InputMaybe<Scalars['String']>;\n  address_not?: InputMaybe<Scalars['String']>;\n  address_not_contains?: InputMaybe<Scalars['String']>;\n  address_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  address_not_ends_with?: InputMaybe<Scalars['String']>;\n  address_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  address_not_in?: InputMaybe<Array<Scalars['String']>>;\n  address_not_starts_with?: InputMaybe<Scalars['String']>;\n  address_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  address_starts_with?: InputMaybe<Scalars['String']>;\n  address_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  decimals?: InputMaybe<Scalars['Int']>;\n  decimals_gt?: InputMaybe<Scalars['Int']>;\n  decimals_gte?: InputMaybe<Scalars['Int']>;\n  decimals_in?: InputMaybe<Array<Scalars['Int']>>;\n  decimals_lt?: InputMaybe<Scalars['Int']>;\n  decimals_lte?: InputMaybe<Scalars['Int']>;\n  decimals_not?: InputMaybe<Scalars['Int']>;\n  decimals_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  latestPrice?: InputMaybe<Scalars['String']>;\n  latestPrice_?: InputMaybe<LatestPrice_Filter>;\n  latestPrice_contains?: InputMaybe<Scalars['String']>;\n  latestPrice_contains_nocase?: InputMaybe<Scalars['String']>;\n  latestPrice_ends_with?: InputMaybe<Scalars['String']>;\n  latestPrice_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  latestPrice_gt?: InputMaybe<Scalars['String']>;\n  latestPrice_gte?: InputMaybe<Scalars['String']>;\n  latestPrice_in?: InputMaybe<Array<Scalars['String']>>;\n  latestPrice_lt?: InputMaybe<Scalars['String']>;\n  latestPrice_lte?: InputMaybe<Scalars['String']>;\n  latestPrice_not?: InputMaybe<Scalars['String']>;\n  latestPrice_not_contains?: InputMaybe<Scalars['String']>;\n  latestPrice_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  latestPrice_not_ends_with?: InputMaybe<Scalars['String']>;\n  latestPrice_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  latestPrice_not_in?: InputMaybe<Array<Scalars['String']>>;\n  latestPrice_not_starts_with?: InputMaybe<Scalars['String']>;\n  latestPrice_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  latestPrice_starts_with?: InputMaybe<Scalars['String']>;\n  latestPrice_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  latestUSDPrice?: InputMaybe<Scalars['BigDecimal']>;\n  latestUSDPrice_gt?: InputMaybe<Scalars['BigDecimal']>;\n  latestUSDPrice_gte?: InputMaybe<Scalars['BigDecimal']>;\n  latestUSDPrice_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  latestUSDPrice_lt?: InputMaybe<Scalars['BigDecimal']>;\n  latestUSDPrice_lte?: InputMaybe<Scalars['BigDecimal']>;\n  latestUSDPrice_not?: InputMaybe<Scalars['BigDecimal']>;\n  latestUSDPrice_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  name?: InputMaybe<Scalars['String']>;\n  name_contains?: InputMaybe<Scalars['String']>;\n  name_contains_nocase?: InputMaybe<Scalars['String']>;\n  name_ends_with?: InputMaybe<Scalars['String']>;\n  name_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  name_gt?: InputMaybe<Scalars['String']>;\n  name_gte?: InputMaybe<Scalars['String']>;\n  name_in?: InputMaybe<Array<Scalars['String']>>;\n  name_lt?: InputMaybe<Scalars['String']>;\n  name_lte?: InputMaybe<Scalars['String']>;\n  name_not?: InputMaybe<Scalars['String']>;\n  name_not_contains?: InputMaybe<Scalars['String']>;\n  name_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  name_not_ends_with?: InputMaybe<Scalars['String']>;\n  name_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  name_not_in?: InputMaybe<Array<Scalars['String']>>;\n  name_not_starts_with?: InputMaybe<Scalars['String']>;\n  name_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  name_starts_with?: InputMaybe<Scalars['String']>;\n  name_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  pool?: InputMaybe<Scalars['String']>;\n  pool_?: InputMaybe<Pool_Filter>;\n  pool_contains?: InputMaybe<Scalars['String']>;\n  pool_contains_nocase?: InputMaybe<Scalars['String']>;\n  pool_ends_with?: InputMaybe<Scalars['String']>;\n  pool_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  pool_gt?: InputMaybe<Scalars['String']>;\n  pool_gte?: InputMaybe<Scalars['String']>;\n  pool_in?: InputMaybe<Array<Scalars['String']>>;\n  pool_lt?: InputMaybe<Scalars['String']>;\n  pool_lte?: InputMaybe<Scalars['String']>;\n  pool_not?: InputMaybe<Scalars['String']>;\n  pool_not_contains?: InputMaybe<Scalars['String']>;\n  pool_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  pool_not_ends_with?: InputMaybe<Scalars['String']>;\n  pool_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  pool_not_in?: InputMaybe<Array<Scalars['String']>>;\n  pool_not_starts_with?: InputMaybe<Scalars['String']>;\n  pool_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  pool_starts_with?: InputMaybe<Scalars['String']>;\n  pool_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol?: InputMaybe<Scalars['String']>;\n  symbol_contains?: InputMaybe<Scalars['String']>;\n  symbol_contains_nocase?: InputMaybe<Scalars['String']>;\n  symbol_ends_with?: InputMaybe<Scalars['String']>;\n  symbol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_gt?: InputMaybe<Scalars['String']>;\n  symbol_gte?: InputMaybe<Scalars['String']>;\n  symbol_in?: InputMaybe<Array<Scalars['String']>>;\n  symbol_lt?: InputMaybe<Scalars['String']>;\n  symbol_lte?: InputMaybe<Scalars['String']>;\n  symbol_not?: InputMaybe<Scalars['String']>;\n  symbol_not_contains?: InputMaybe<Scalars['String']>;\n  symbol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  symbol_not_ends_with?: InputMaybe<Scalars['String']>;\n  symbol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  symbol_not_starts_with?: InputMaybe<Scalars['String']>;\n  symbol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_starts_with?: InputMaybe<Scalars['String']>;\n  symbol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  totalBalanceNotional?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceNotional_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceNotional_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceNotional_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalBalanceNotional_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceNotional_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceNotional_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceNotional_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalBalanceUSD?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalBalanceUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalBalanceUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapCount?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_gt?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_gte?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalSwapCount_lt?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_lte?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_not?: InputMaybe<Scalars['BigInt']>;\n  totalSwapCount_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  totalVolumeNotional?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeNotional_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeNotional_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeNotional_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalVolumeNotional_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeNotional_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeNotional_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeNotional_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalVolumeUSD?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalVolumeUSD_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalVolumeUSD_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum Token_OrderBy {\n  Address = 'address',\n  Decimals = 'decimals',\n  Id = 'id',\n  LatestPrice = 'latestPrice',\n  LatestUsdPrice = 'latestUSDPrice',\n  Name = 'name',\n  Pool = 'pool',\n  Symbol = 'symbol',\n  TotalBalanceNotional = 'totalBalanceNotional',\n  TotalBalanceUsd = 'totalBalanceUSD',\n  TotalSwapCount = 'totalSwapCount',\n  TotalVolumeNotional = 'totalVolumeNotional',\n  TotalVolumeUsd = 'totalVolumeUSD'\n}\n\nexport type TradePair = {\n  __typename?: 'TradePair';\n  /** Token Address - Token Address */\n  id: Scalars['ID'];\n  token0: Token;\n  token1: Token;\n  totalSwapFee: Scalars['BigDecimal'];\n  totalSwapVolume: Scalars['BigDecimal'];\n};\n\nexport type TradePairSnapshot = {\n  __typename?: 'TradePairSnapshot';\n  id: Scalars['ID'];\n  pair: TradePair;\n  timestamp: Scalars['Int'];\n  totalSwapFee: Scalars['BigDecimal'];\n  totalSwapVolume: Scalars['BigDecimal'];\n};\n\nexport type TradePairSnapshot_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  pair?: InputMaybe<Scalars['String']>;\n  pair_?: InputMaybe<TradePair_Filter>;\n  pair_contains?: InputMaybe<Scalars['String']>;\n  pair_contains_nocase?: InputMaybe<Scalars['String']>;\n  pair_ends_with?: InputMaybe<Scalars['String']>;\n  pair_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  pair_gt?: InputMaybe<Scalars['String']>;\n  pair_gte?: InputMaybe<Scalars['String']>;\n  pair_in?: InputMaybe<Array<Scalars['String']>>;\n  pair_lt?: InputMaybe<Scalars['String']>;\n  pair_lte?: InputMaybe<Scalars['String']>;\n  pair_not?: InputMaybe<Scalars['String']>;\n  pair_not_contains?: InputMaybe<Scalars['String']>;\n  pair_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  pair_not_ends_with?: InputMaybe<Scalars['String']>;\n  pair_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  pair_not_in?: InputMaybe<Array<Scalars['String']>>;\n  pair_not_starts_with?: InputMaybe<Scalars['String']>;\n  pair_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  pair_starts_with?: InputMaybe<Scalars['String']>;\n  pair_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  timestamp?: InputMaybe<Scalars['Int']>;\n  timestamp_gt?: InputMaybe<Scalars['Int']>;\n  timestamp_gte?: InputMaybe<Scalars['Int']>;\n  timestamp_in?: InputMaybe<Array<Scalars['Int']>>;\n  timestamp_lt?: InputMaybe<Scalars['Int']>;\n  timestamp_lte?: InputMaybe<Scalars['Int']>;\n  timestamp_not?: InputMaybe<Scalars['Int']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  totalSwapFee?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapFee_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapVolume?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapVolume_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum TradePairSnapshot_OrderBy {\n  Id = 'id',\n  Pair = 'pair',\n  Timestamp = 'timestamp',\n  TotalSwapFee = 'totalSwapFee',\n  TotalSwapVolume = 'totalSwapVolume'\n}\n\nexport type TradePair_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  token0?: InputMaybe<Scalars['String']>;\n  token0_?: InputMaybe<Token_Filter>;\n  token0_contains?: InputMaybe<Scalars['String']>;\n  token0_contains_nocase?: InputMaybe<Scalars['String']>;\n  token0_ends_with?: InputMaybe<Scalars['String']>;\n  token0_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token0_gt?: InputMaybe<Scalars['String']>;\n  token0_gte?: InputMaybe<Scalars['String']>;\n  token0_in?: InputMaybe<Array<Scalars['String']>>;\n  token0_lt?: InputMaybe<Scalars['String']>;\n  token0_lte?: InputMaybe<Scalars['String']>;\n  token0_not?: InputMaybe<Scalars['String']>;\n  token0_not_contains?: InputMaybe<Scalars['String']>;\n  token0_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token0_not_ends_with?: InputMaybe<Scalars['String']>;\n  token0_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token0_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token0_not_starts_with?: InputMaybe<Scalars['String']>;\n  token0_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token0_starts_with?: InputMaybe<Scalars['String']>;\n  token0_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token1?: InputMaybe<Scalars['String']>;\n  token1_?: InputMaybe<Token_Filter>;\n  token1_contains?: InputMaybe<Scalars['String']>;\n  token1_contains_nocase?: InputMaybe<Scalars['String']>;\n  token1_ends_with?: InputMaybe<Scalars['String']>;\n  token1_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token1_gt?: InputMaybe<Scalars['String']>;\n  token1_gte?: InputMaybe<Scalars['String']>;\n  token1_in?: InputMaybe<Array<Scalars['String']>>;\n  token1_lt?: InputMaybe<Scalars['String']>;\n  token1_lte?: InputMaybe<Scalars['String']>;\n  token1_not?: InputMaybe<Scalars['String']>;\n  token1_not_contains?: InputMaybe<Scalars['String']>;\n  token1_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  token1_not_ends_with?: InputMaybe<Scalars['String']>;\n  token1_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  token1_not_in?: InputMaybe<Array<Scalars['String']>>;\n  token1_not_starts_with?: InputMaybe<Scalars['String']>;\n  token1_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  token1_starts_with?: InputMaybe<Scalars['String']>;\n  token1_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  totalSwapFee?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapFee_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapFee_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapVolume?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSwapVolume_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalSwapVolume_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum TradePair_OrderBy {\n  Id = 'id',\n  Token0 = 'token0',\n  Token1 = 'token1',\n  TotalSwapFee = 'totalSwapFee',\n  TotalSwapVolume = 'totalSwapVolume'\n}\n\nexport type User = {\n  __typename?: 'User';\n  id: Scalars['ID'];\n  sharesOwned?: Maybe<Array<PoolShare>>;\n  swaps?: Maybe<Array<Swap>>;\n  userInternalBalances?: Maybe<Array<UserInternalBalance>>;\n};\n\n\nexport type UserSharesOwnedArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolShare_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PoolShare_Filter>;\n};\n\n\nexport type UserSwapsArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Swap_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<Swap_Filter>;\n};\n\n\nexport type UserUserInternalBalancesArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<UserInternalBalance_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<UserInternalBalance_Filter>;\n};\n\nexport type UserInternalBalance = {\n  __typename?: 'UserInternalBalance';\n  balance: Scalars['BigDecimal'];\n  id: Scalars['ID'];\n  token: Scalars['Bytes'];\n  userAddress?: Maybe<User>;\n};\n\nexport type UserInternalBalance_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  balance?: InputMaybe<Scalars['BigDecimal']>;\n  balance_gt?: InputMaybe<Scalars['BigDecimal']>;\n  balance_gte?: InputMaybe<Scalars['BigDecimal']>;\n  balance_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  balance_lt?: InputMaybe<Scalars['BigDecimal']>;\n  balance_lte?: InputMaybe<Scalars['BigDecimal']>;\n  balance_not?: InputMaybe<Scalars['BigDecimal']>;\n  balance_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  token?: InputMaybe<Scalars['Bytes']>;\n  token_contains?: InputMaybe<Scalars['Bytes']>;\n  token_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  token_not?: InputMaybe<Scalars['Bytes']>;\n  token_not_contains?: InputMaybe<Scalars['Bytes']>;\n  token_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  userAddress?: InputMaybe<Scalars['String']>;\n  userAddress_?: InputMaybe<User_Filter>;\n  userAddress_contains?: InputMaybe<Scalars['String']>;\n  userAddress_contains_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_ends_with?: InputMaybe<Scalars['String']>;\n  userAddress_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_gt?: InputMaybe<Scalars['String']>;\n  userAddress_gte?: InputMaybe<Scalars['String']>;\n  userAddress_in?: InputMaybe<Array<Scalars['String']>>;\n  userAddress_lt?: InputMaybe<Scalars['String']>;\n  userAddress_lte?: InputMaybe<Scalars['String']>;\n  userAddress_not?: InputMaybe<Scalars['String']>;\n  userAddress_not_contains?: InputMaybe<Scalars['String']>;\n  userAddress_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_not_ends_with?: InputMaybe<Scalars['String']>;\n  userAddress_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_not_in?: InputMaybe<Array<Scalars['String']>>;\n  userAddress_not_starts_with?: InputMaybe<Scalars['String']>;\n  userAddress_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  userAddress_starts_with?: InputMaybe<Scalars['String']>;\n  userAddress_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum UserInternalBalance_OrderBy {\n  Balance = 'balance',\n  Id = 'id',\n  Token = 'token',\n  UserAddress = 'userAddress'\n}\n\nexport type User_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  sharesOwned_?: InputMaybe<PoolShare_Filter>;\n  swaps_?: InputMaybe<Swap_Filter>;\n  userInternalBalances_?: InputMaybe<UserInternalBalance_Filter>;\n};\n\nexport enum User_OrderBy {\n  Id = 'id',\n  SharesOwned = 'sharesOwned',\n  Swaps = 'swaps',\n  UserInternalBalances = 'userInternalBalances'\n}\n\nexport type _Block_ = {\n  __typename?: '_Block_';\n  /** The hash of the block */\n  hash?: Maybe<Scalars['Bytes']>;\n  /** The block number */\n  number: Scalars['Int'];\n};\n\n/** The type for the top-level _meta field */\nexport type _Meta_ = {\n  __typename?: '_Meta_';\n  /**\n   * Information about a specific subgraph block. The hash of the block\n   * will be null if the _meta field has a block constraint that asks for\n   * a block number. It will be filled if the _meta field has no block constraint\n   * and therefore asks for the latest  block\n   *\n   */\n  block: _Block_;\n  /** The deployment ID */\n  deployment: Scalars['String'];\n  /** If `true`, the subgraph encountered indexing errors at some past block */\n  hasIndexingErrors: Scalars['Boolean'];\n};\n\nexport enum _SubgraphErrorPolicy_ {\n  /** Data will be returned even if the subgraph has indexing errors */\n  Allow = 'allow',\n  /** If the subgraph has indexing errors, data will be omitted. The default. */\n  Deny = 'deny'\n}\n\nexport type PoolsQueryVariables = Exact<{\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Pool_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<Pool_Filter>;\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type PoolsQuery = { __typename?: 'Query', pool0: Array<{ __typename?: 'Pool', id: string, address: string, poolType?: string | null, symbol?: string | null, name?: string | null, swapFee: string, totalWeight?: string | null, totalSwapVolume: string, totalSwapFee: string, totalLiquidity: string, totalShares: string, swapsCount: string, holdersCount: string, tokensList: Array<string>, amp?: string | null, expiryTime?: string | null, unitSeconds?: string | null, createTime: number, principalToken?: string | null, baseToken?: string | null, swapEnabled: boolean, wrappedIndex?: number | null, mainIndex?: number | null, lowerTarget?: string | null, upperTarget?: string | null, tokens?: Array<{ __typename?: 'PoolToken', id: string, symbol: string, name: string, decimals: number, address: string, balance: string, managedBalance: string, weight?: string | null, priceRate: string }> | null }>, pool1000: Array<{ __typename?: 'Pool', id: string, address: string, poolType?: string | null, symbol?: string | null, name?: string | null, swapFee: string, totalWeight?: string | null, totalSwapVolume: string, totalSwapFee: string, totalLiquidity: string, totalShares: string, swapsCount: string, holdersCount: string, tokensList: Array<string>, amp?: string | null, expiryTime?: string | null, unitSeconds?: string | null, createTime: number, principalToken?: string | null, baseToken?: string | null, swapEnabled: boolean, wrappedIndex?: number | null, mainIndex?: number | null, lowerTarget?: string | null, upperTarget?: string | null, tokens?: Array<{ __typename?: 'PoolToken', id: string, symbol: string, name: string, decimals: number, address: string, balance: string, managedBalance: string, weight?: string | null, priceRate: string }> | null }> };\n\nexport type PoolQueryVariables = Exact<{\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type PoolQuery = { __typename?: 'Query', pool?: { __typename?: 'Pool', id: string, address: string, poolType?: string | null, symbol?: string | null, name?: string | null, swapFee: string, totalWeight?: string | null, totalSwapVolume: string, totalSwapFee: string, totalLiquidity: string, totalShares: string, swapsCount: string, holdersCount: string, tokensList: Array<string>, amp?: string | null, expiryTime?: string | null, unitSeconds?: string | null, createTime: number, principalToken?: string | null, baseToken?: string | null, swapEnabled: boolean, wrappedIndex?: number | null, mainIndex?: number | null, lowerTarget?: string | null, upperTarget?: string | null, tokens?: Array<{ __typename?: 'PoolToken', id: string, symbol: string, name: string, decimals: number, address: string, balance: string, managedBalance: string, weight?: string | null, priceRate: string }> | null } | null };\n\nexport type PoolsWithoutLinearQueryVariables = Exact<{\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Pool_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<Pool_Filter>;\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type PoolsWithoutLinearQuery = { __typename?: 'Query', pools: Array<{ __typename?: 'Pool', id: string, address: string, poolType?: string | null, symbol?: string | null, name?: string | null, swapFee: string, totalWeight?: string | null, totalSwapVolume: string, totalSwapFee: string, totalLiquidity: string, totalShares: string, swapsCount: string, holdersCount: string, tokensList: Array<string>, amp?: string | null, expiryTime?: string | null, unitSeconds?: string | null, principalToken?: string | null, baseToken?: string | null, swapEnabled: boolean, tokens?: Array<{ __typename?: 'PoolToken', id: string, symbol: string, name: string, decimals: number, address: string, balance: string, managedBalance: string, weight?: string | null, priceRate: string }> | null }> };\n\nexport type PoolWithoutLinearQueryVariables = Exact<{\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type PoolWithoutLinearQuery = { __typename?: 'Query', pool?: { __typename?: 'Pool', id: string, address: string, poolType?: string | null, symbol?: string | null, name?: string | null, swapFee: string, totalWeight?: string | null, totalSwapVolume: string, totalSwapFee: string, totalLiquidity: string, totalShares: string, swapsCount: string, holdersCount: string, tokensList: Array<string>, amp?: string | null, expiryTime?: string | null, unitSeconds?: string | null, principalToken?: string | null, baseToken?: string | null, swapEnabled: boolean, tokens?: Array<{ __typename?: 'PoolToken', id: string, symbol: string, name: string, decimals: number, address: string, balance: string, managedBalance: string, weight?: string | null, priceRate: string }> | null } | null };\n\nexport type SubgraphPoolFragment = { __typename?: 'Pool', id: string, address: string, poolType?: string | null, symbol?: string | null, name?: string | null, swapFee: string, totalWeight?: string | null, totalSwapVolume: string, totalSwapFee: string, totalLiquidity: string, totalShares: string, swapsCount: string, holdersCount: string, tokensList: Array<string>, amp?: string | null, expiryTime?: string | null, unitSeconds?: string | null, createTime: number, principalToken?: string | null, baseToken?: string | null, swapEnabled: boolean, wrappedIndex?: number | null, mainIndex?: number | null, lowerTarget?: string | null, upperTarget?: string | null, tokens?: Array<{ __typename?: 'PoolToken', id: string, symbol: string, name: string, decimals: number, address: string, balance: string, managedBalance: string, weight?: string | null, priceRate: string }> | null };\n\nexport type SubgraphPoolWithoutLinearFragment = { __typename?: 'Pool', id: string, address: string, poolType?: string | null, symbol?: string | null, name?: string | null, swapFee: string, totalWeight?: string | null, totalSwapVolume: string, totalSwapFee: string, totalLiquidity: string, totalShares: string, swapsCount: string, holdersCount: string, tokensList: Array<string>, amp?: string | null, expiryTime?: string | null, unitSeconds?: string | null, principalToken?: string | null, baseToken?: string | null, swapEnabled: boolean, tokens?: Array<{ __typename?: 'PoolToken', id: string, symbol: string, name: string, decimals: number, address: string, balance: string, managedBalance: string, weight?: string | null, priceRate: string }> | null };\n\nexport type SubgraphPoolTokenFragment = { __typename?: 'PoolToken', id: string, symbol: string, name: string, decimals: number, address: string, balance: string, managedBalance: string, weight?: string | null, priceRate: string };\n\nexport type PoolHistoricalLiquiditiesQueryVariables = Exact<{\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolHistoricalLiquidity_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<PoolHistoricalLiquidity_Filter>;\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type PoolHistoricalLiquiditiesQuery = { __typename?: 'Query', poolHistoricalLiquidities: Array<{ __typename?: 'PoolHistoricalLiquidity', id: string, poolTotalShares: string, poolLiquidity: string, poolShareValue: string, pricingAsset: string, block: string, poolId: { __typename?: 'Pool', id: string } }> };\n\nexport type PoolSnapshotsQueryVariables = Exact<{\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<PoolSnapshot_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<PoolSnapshot_Filter>;\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type PoolSnapshotsQuery = { __typename?: 'Query', poolSnapshots: Array<{ __typename?: 'PoolSnapshot', id: string, totalShares: string, swapVolume: string, swapFees: string, timestamp: number, pool: { __typename?: 'Pool', id: string } }> };\n\nexport type SubgraphPoolSnapshotFragment = { __typename?: 'PoolSnapshot', id: string, totalShares: string, swapVolume: string, swapFees: string, timestamp: number, pool: { __typename?: 'Pool', id: string } };\n\nexport type JoinExitsQueryVariables = Exact<{\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<JoinExit_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<JoinExit_Filter>;\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type JoinExitsQuery = { __typename?: 'Query', joinExits: Array<{ __typename?: 'JoinExit', amounts: Array<string>, id: string, sender: string, timestamp: number, tx: string, type: InvestType, user: { __typename?: 'User', id: string }, pool: { __typename?: 'Pool', id: string, tokensList: Array<string> } }> };\n\nexport type SubgraphJoinExitFragment = { __typename?: 'JoinExit', amounts: Array<string>, id: string, sender: string, timestamp: number, tx: string, type: InvestType, user: { __typename?: 'User', id: string }, pool: { __typename?: 'Pool', id: string, tokensList: Array<string> } };\n\nexport type BalancersQueryVariables = Exact<{\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Balancer_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<Balancer_Filter>;\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type BalancersQuery = { __typename?: 'Query', balancers: Array<{ __typename?: 'Balancer', id: string, totalLiquidity: string, totalSwapVolume: string, totalSwapFee: string, totalSwapCount: string, poolCount: number }> };\n\nexport type SubgraphBalancerFragment = { __typename?: 'Balancer', id: string, totalLiquidity: string, totalSwapVolume: string, totalSwapFee: string, totalSwapCount: string, poolCount: number };\n\nexport type TokenPricesQueryVariables = Exact<{\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<TokenPrice_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<TokenPrice_Filter>;\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type TokenPricesQuery = { __typename?: 'Query', tokenPrices: Array<{ __typename?: 'TokenPrice', id: string, asset: string, amount: string, pricingAsset: string, price: string, block: string, timestamp: number, poolId: { __typename?: 'Pool', id: string } }> };\n\nexport type SubgraphTokenPriceFragment = { __typename?: 'TokenPrice', id: string, asset: string, amount: string, pricingAsset: string, price: string, block: string, timestamp: number, poolId: { __typename?: 'Pool', id: string } };\n\nexport type TokenLatestPricesQueryVariables = Exact<{\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LatestPrice_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<LatestPrice_Filter>;\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type TokenLatestPricesQuery = { __typename?: 'Query', latestPrices: Array<{ __typename?: 'LatestPrice', id: string, asset: string, price: string, pricingAsset: string, poolId: { __typename?: 'Pool', id: string } }> };\n\nexport type TokenLatestPriceQueryVariables = Exact<{\n  id: Scalars['ID'];\n}>;\n\n\nexport type TokenLatestPriceQuery = { __typename?: 'Query', latestPrice?: { __typename?: 'LatestPrice', id: string, asset: string, price: string, pricingAsset: string, poolId: { __typename?: 'Pool', id: string } } | null };\n\nexport type SubgraphTokenLatestPriceFragment = { __typename?: 'LatestPrice', id: string, asset: string, price: string, pricingAsset: string, poolId: { __typename?: 'Pool', id: string } };\n\nexport type UserQueryVariables = Exact<{\n  id: Scalars['ID'];\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type UserQuery = { __typename?: 'Query', user?: { __typename?: 'User', id: string, sharesOwned?: Array<{ __typename?: 'PoolShare', balance: string, poolId: { __typename?: 'Pool', id: string } }> | null } | null };\n\nexport type UsersQueryVariables = Exact<{\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<User_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<User_Filter>;\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type UsersQuery = { __typename?: 'Query', users: Array<{ __typename?: 'User', id: string, sharesOwned?: Array<{ __typename?: 'PoolShare', balance: string, poolId: { __typename?: 'Pool', id: string } }> | null }> };\n\nexport type SubgraphUserFragment = { __typename?: 'User', id: string, sharesOwned?: Array<{ __typename?: 'PoolShare', balance: string, poolId: { __typename?: 'Pool', id: string } }> | null };\n\nexport const SubgraphPoolTokenFragmentDoc = gql`\n    fragment SubgraphPoolToken on PoolToken {\n  id\n  symbol\n  name\n  decimals\n  address\n  balance\n  managedBalance\n  weight\n  priceRate\n}\n    `;\nexport const SubgraphPoolFragmentDoc = gql`\n    fragment SubgraphPool on Pool {\n  id\n  address\n  poolType\n  symbol\n  name\n  swapFee\n  totalWeight\n  totalSwapVolume\n  totalSwapFee\n  totalLiquidity\n  totalShares\n  tokens(first: 100) {\n    ...SubgraphPoolToken\n  }\n  swapsCount\n  holdersCount\n  tokensList\n  totalWeight\n  amp\n  expiryTime\n  unitSeconds\n  createTime\n  principalToken\n  baseToken\n  swapEnabled\n  wrappedIndex\n  mainIndex\n  lowerTarget\n  upperTarget\n}\n    ${SubgraphPoolTokenFragmentDoc}`;\nexport const SubgraphPoolWithoutLinearFragmentDoc = gql`\n    fragment SubgraphPoolWithoutLinear on Pool {\n  id\n  address\n  poolType\n  symbol\n  name\n  swapFee\n  totalWeight\n  totalSwapVolume\n  totalSwapFee\n  totalLiquidity\n  totalShares\n  tokens(first: 1000) {\n    ...SubgraphPoolToken\n  }\n  swapsCount\n  holdersCount\n  tokensList\n  totalWeight\n  amp\n  expiryTime\n  unitSeconds\n  principalToken\n  baseToken\n  swapEnabled\n}\n    ${SubgraphPoolTokenFragmentDoc}`;\nexport const SubgraphPoolSnapshotFragmentDoc = gql`\n    fragment SubgraphPoolSnapshot on PoolSnapshot {\n  id\n  pool {\n    id\n  }\n  totalShares\n  swapVolume\n  swapFees\n  timestamp\n}\n    `;\nexport const SubgraphJoinExitFragmentDoc = gql`\n    fragment SubgraphJoinExit on JoinExit {\n  amounts\n  id\n  sender\n  timestamp\n  tx\n  type\n  user {\n    id\n  }\n  pool {\n    id\n    tokensList\n  }\n}\n    `;\nexport const SubgraphBalancerFragmentDoc = gql`\n    fragment SubgraphBalancer on Balancer {\n  id\n  totalLiquidity\n  totalSwapVolume\n  totalSwapFee\n  totalSwapCount\n  poolCount\n}\n    `;\nexport const SubgraphTokenPriceFragmentDoc = gql`\n    fragment SubgraphTokenPrice on TokenPrice {\n  id\n  poolId {\n    id\n  }\n  asset\n  amount\n  pricingAsset\n  price\n  block\n  timestamp\n}\n    `;\nexport const SubgraphTokenLatestPriceFragmentDoc = gql`\n    fragment SubgraphTokenLatestPrice on LatestPrice {\n  id\n  asset\n  price\n  poolId {\n    id\n  }\n  pricingAsset\n}\n    `;\nexport const SubgraphUserFragmentDoc = gql`\n    fragment SubgraphUser on User {\n  id\n  sharesOwned(first: 1000) {\n    balance\n    poolId {\n      id\n    }\n  }\n}\n    `;\nexport const PoolsDocument = gql`\n    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {\n  pool0: pools(\n    first: 1000\n    orderBy: $orderBy\n    orderDirection: $orderDirection\n    where: $where\n    block: $block\n  ) {\n    ...SubgraphPool\n  }\n  pool1000: pools(\n    skip: 1000\n    first: 1000\n    orderBy: $orderBy\n    orderDirection: $orderDirection\n    where: $where\n    block: $block\n  ) {\n    ...SubgraphPool\n  }\n}\n    ${SubgraphPoolFragmentDoc}`;\nexport const PoolDocument = gql`\n    query Pool($id: ID!, $block: Block_height) {\n  pool(id: $id, block: $block) {\n    ...SubgraphPool\n  }\n}\n    ${SubgraphPoolFragmentDoc}`;\nexport const PoolsWithoutLinearDocument = gql`\n    query PoolsWithoutLinear($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {\n  pools(\n    skip: $skip\n    first: $first\n    orderBy: $orderBy\n    orderDirection: $orderDirection\n    where: $where\n    block: $block\n  ) {\n    ...SubgraphPoolWithoutLinear\n  }\n}\n    ${SubgraphPoolWithoutLinearFragmentDoc}`;\nexport const PoolWithoutLinearDocument = gql`\n    query PoolWithoutLinear($id: ID!, $block: Block_height) {\n  pool(id: $id, block: $block) {\n    ...SubgraphPoolWithoutLinear\n  }\n}\n    ${SubgraphPoolWithoutLinearFragmentDoc}`;\nexport const PoolHistoricalLiquiditiesDocument = gql`\n    query PoolHistoricalLiquidities($skip: Int, $first: Int, $orderBy: PoolHistoricalLiquidity_orderBy, $orderDirection: OrderDirection, $where: PoolHistoricalLiquidity_filter, $block: Block_height) {\n  poolHistoricalLiquidities(\n    skip: $skip\n    first: $first\n    orderBy: $orderBy\n    orderDirection: $orderDirection\n    where: $where\n    block: $block\n  ) {\n    id\n    poolId {\n      id\n    }\n    poolTotalShares\n    poolLiquidity\n    poolShareValue\n    pricingAsset\n    block\n  }\n}\n    `;\nexport const PoolSnapshotsDocument = gql`\n    query PoolSnapshots($skip: Int, $first: Int, $orderBy: PoolSnapshot_orderBy, $orderDirection: OrderDirection, $where: PoolSnapshot_filter, $block: Block_height) {\n  poolSnapshots(\n    skip: $skip\n    first: $first\n    orderBy: $orderBy\n    orderDirection: $orderDirection\n    where: $where\n    block: $block\n  ) {\n    ...SubgraphPoolSnapshot\n  }\n}\n    ${SubgraphPoolSnapshotFragmentDoc}`;\nexport const JoinExitsDocument = gql`\n    query JoinExits($skip: Int, $first: Int, $orderBy: JoinExit_orderBy, $orderDirection: OrderDirection, $where: JoinExit_filter, $block: Block_height) {\n  joinExits(\n    skip: $skip\n    first: $first\n    orderBy: $orderBy\n    orderDirection: $orderDirection\n    where: $where\n    block: $block\n  ) {\n    ...SubgraphJoinExit\n  }\n}\n    ${SubgraphJoinExitFragmentDoc}`;\nexport const BalancersDocument = gql`\n    query Balancers($skip: Int, $first: Int, $orderBy: Balancer_orderBy, $orderDirection: OrderDirection, $where: Balancer_filter, $block: Block_height) {\n  balancers(\n    skip: $skip\n    first: $first\n    orderBy: $orderBy\n    orderDirection: $orderDirection\n    where: $where\n    block: $block\n  ) {\n    ...SubgraphBalancer\n  }\n}\n    ${SubgraphBalancerFragmentDoc}`;\nexport const TokenPricesDocument = gql`\n    query TokenPrices($skip: Int, $first: Int, $orderBy: TokenPrice_orderBy, $orderDirection: OrderDirection, $where: TokenPrice_filter, $block: Block_height) {\n  tokenPrices(\n    skip: $skip\n    first: $first\n    orderBy: $orderBy\n    orderDirection: $orderDirection\n    where: $where\n    block: $block\n  ) {\n    ...SubgraphTokenPrice\n  }\n}\n    ${SubgraphTokenPriceFragmentDoc}`;\nexport const TokenLatestPricesDocument = gql`\n    query TokenLatestPrices($skip: Int, $first: Int, $orderBy: LatestPrice_orderBy, $orderDirection: OrderDirection, $where: LatestPrice_filter, $block: Block_height) {\n  latestPrices(\n    skip: $skip\n    first: $first\n    orderBy: $orderBy\n    orderDirection: $orderDirection\n    where: $where\n    block: $block\n  ) {\n    ...SubgraphTokenLatestPrice\n  }\n}\n    ${SubgraphTokenLatestPriceFragmentDoc}`;\nexport const TokenLatestPriceDocument = gql`\n    query TokenLatestPrice($id: ID!) {\n  latestPrice(id: $id) {\n    ...SubgraphTokenLatestPrice\n  }\n}\n    ${SubgraphTokenLatestPriceFragmentDoc}`;\nexport const UserDocument = gql`\n    query User($id: ID!, $block: Block_height) {\n  user(id: $id, block: $block) {\n    ...SubgraphUser\n  }\n}\n    ${SubgraphUserFragmentDoc}`;\nexport const UsersDocument = gql`\n    query Users($skip: Int, $first: Int, $orderBy: User_orderBy, $orderDirection: OrderDirection, $where: User_filter, $block: Block_height) {\n  users(\n    skip: $skip\n    first: $first\n    orderBy: $orderBy\n    orderDirection: $orderDirection\n    where: $where\n    block: $block\n  ) {\n    ...SubgraphUser\n  }\n}\n    ${SubgraphUserFragmentDoc}`;\n\nexport type SdkFunctionWrapper = <T>(action: (requestHeaders?:Record<string, string>) => Promise<T>, operationName: string, operationType?: string) => Promise<T>;\n\n\nconst defaultWrapper: SdkFunctionWrapper = (action, _operationName, _operationType) => action();\n\nexport function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {\n  return {\n    Pools(variables?: PoolsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<PoolsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<PoolsQuery>(PoolsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'Pools', 'query');\n    },\n    Pool(variables: PoolQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<PoolQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<PoolQuery>(PoolDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'Pool', 'query');\n    },\n    PoolsWithoutLinear(variables?: PoolsWithoutLinearQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<PoolsWithoutLinearQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<PoolsWithoutLinearQuery>(PoolsWithoutLinearDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'PoolsWithoutLinear', 'query');\n    },\n    PoolWithoutLinear(variables: PoolWithoutLinearQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<PoolWithoutLinearQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<PoolWithoutLinearQuery>(PoolWithoutLinearDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'PoolWithoutLinear', 'query');\n    },\n    PoolHistoricalLiquidities(variables?: PoolHistoricalLiquiditiesQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<PoolHistoricalLiquiditiesQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<PoolHistoricalLiquiditiesQuery>(PoolHistoricalLiquiditiesDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'PoolHistoricalLiquidities', 'query');\n    },\n    PoolSnapshots(variables?: PoolSnapshotsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<PoolSnapshotsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<PoolSnapshotsQuery>(PoolSnapshotsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'PoolSnapshots', 'query');\n    },\n    JoinExits(variables?: JoinExitsQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<JoinExitsQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<JoinExitsQuery>(JoinExitsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'JoinExits', 'query');\n    },\n    Balancers(variables?: BalancersQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<BalancersQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<BalancersQuery>(BalancersDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'Balancers', 'query');\n    },\n    TokenPrices(variables?: TokenPricesQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<TokenPricesQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<TokenPricesQuery>(TokenPricesDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'TokenPrices', 'query');\n    },\n    TokenLatestPrices(variables?: TokenLatestPricesQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<TokenLatestPricesQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<TokenLatestPricesQuery>(TokenLatestPricesDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'TokenLatestPrices', 'query');\n    },\n    TokenLatestPrice(variables: TokenLatestPriceQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<TokenLatestPriceQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<TokenLatestPriceQuery>(TokenLatestPriceDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'TokenLatestPrice', 'query');\n    },\n    User(variables: UserQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<UserQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<UserQuery>(UserDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'User', 'query');\n    },\n    Users(variables?: UsersQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<UsersQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<UsersQuery>(UsersDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'Users', 'query');\n    }\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;","import { GraphQLClient } from 'graphql-request';\nimport * as Dom from 'graphql-request/dist/types.dom';\nimport gql from 'graphql-tag';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  BigDecimal: string;\n  BigInt: string;\n  Bytes: string;\n};\n\nexport type BlockChangedFilter = {\n  number_gte: Scalars['Int'];\n};\n\nexport type Block_Height = {\n  hash?: InputMaybe<Scalars['Bytes']>;\n  number?: InputMaybe<Scalars['Int']>;\n  number_gte?: InputMaybe<Scalars['Int']>;\n};\n\nexport enum Chain {\n  Arbitrum = 'Arbitrum',\n  Optimism = 'Optimism',\n  Polygon = 'Polygon'\n}\n\nexport type Gauge = {\n  __typename?: 'Gauge';\n  address: Scalars['Bytes'];\n  id: Scalars['ID'];\n  type: GaugeType;\n};\n\nexport type GaugeFactory = {\n  __typename?: 'GaugeFactory';\n  gauges?: Maybe<Array<LiquidityGauge>>;\n  id: Scalars['ID'];\n  numGauges: Scalars['Int'];\n};\n\n\nexport type GaugeFactoryGaugesArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LiquidityGauge_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<LiquidityGauge_Filter>;\n};\n\nexport type GaugeFactory_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  gauges_?: InputMaybe<LiquidityGauge_Filter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  numGauges?: InputMaybe<Scalars['Int']>;\n  numGauges_gt?: InputMaybe<Scalars['Int']>;\n  numGauges_gte?: InputMaybe<Scalars['Int']>;\n  numGauges_in?: InputMaybe<Array<Scalars['Int']>>;\n  numGauges_lt?: InputMaybe<Scalars['Int']>;\n  numGauges_lte?: InputMaybe<Scalars['Int']>;\n  numGauges_not?: InputMaybe<Scalars['Int']>;\n  numGauges_not_in?: InputMaybe<Array<Scalars['Int']>>;\n};\n\nexport enum GaugeFactory_OrderBy {\n  Gauges = 'gauges',\n  Id = 'id',\n  NumGauges = 'numGauges'\n}\n\nexport type GaugeShare = {\n  __typename?: 'GaugeShare';\n  balance: Scalars['BigDecimal'];\n  gauge: LiquidityGauge;\n  id: Scalars['ID'];\n  user: User;\n};\n\nexport type GaugeShare_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  balance?: InputMaybe<Scalars['BigDecimal']>;\n  balance_gt?: InputMaybe<Scalars['BigDecimal']>;\n  balance_gte?: InputMaybe<Scalars['BigDecimal']>;\n  balance_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  balance_lt?: InputMaybe<Scalars['BigDecimal']>;\n  balance_lte?: InputMaybe<Scalars['BigDecimal']>;\n  balance_not?: InputMaybe<Scalars['BigDecimal']>;\n  balance_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  gauge?: InputMaybe<Scalars['String']>;\n  gauge_?: InputMaybe<LiquidityGauge_Filter>;\n  gauge_contains?: InputMaybe<Scalars['String']>;\n  gauge_contains_nocase?: InputMaybe<Scalars['String']>;\n  gauge_ends_with?: InputMaybe<Scalars['String']>;\n  gauge_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  gauge_gt?: InputMaybe<Scalars['String']>;\n  gauge_gte?: InputMaybe<Scalars['String']>;\n  gauge_in?: InputMaybe<Array<Scalars['String']>>;\n  gauge_lt?: InputMaybe<Scalars['String']>;\n  gauge_lte?: InputMaybe<Scalars['String']>;\n  gauge_not?: InputMaybe<Scalars['String']>;\n  gauge_not_contains?: InputMaybe<Scalars['String']>;\n  gauge_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  gauge_not_ends_with?: InputMaybe<Scalars['String']>;\n  gauge_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  gauge_not_in?: InputMaybe<Array<Scalars['String']>>;\n  gauge_not_starts_with?: InputMaybe<Scalars['String']>;\n  gauge_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  gauge_starts_with?: InputMaybe<Scalars['String']>;\n  gauge_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  user?: InputMaybe<Scalars['String']>;\n  user_?: InputMaybe<User_Filter>;\n  user_contains?: InputMaybe<Scalars['String']>;\n  user_contains_nocase?: InputMaybe<Scalars['String']>;\n  user_ends_with?: InputMaybe<Scalars['String']>;\n  user_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  user_gt?: InputMaybe<Scalars['String']>;\n  user_gte?: InputMaybe<Scalars['String']>;\n  user_in?: InputMaybe<Array<Scalars['String']>>;\n  user_lt?: InputMaybe<Scalars['String']>;\n  user_lte?: InputMaybe<Scalars['String']>;\n  user_not?: InputMaybe<Scalars['String']>;\n  user_not_contains?: InputMaybe<Scalars['String']>;\n  user_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  user_not_ends_with?: InputMaybe<Scalars['String']>;\n  user_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  user_not_in?: InputMaybe<Array<Scalars['String']>>;\n  user_not_starts_with?: InputMaybe<Scalars['String']>;\n  user_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  user_starts_with?: InputMaybe<Scalars['String']>;\n  user_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum GaugeShare_OrderBy {\n  Balance = 'balance',\n  Gauge = 'gauge',\n  Id = 'id',\n  User = 'user'\n}\n\nexport type GaugeType = {\n  __typename?: 'GaugeType';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n};\n\nexport type GaugeType_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  name?: InputMaybe<Scalars['String']>;\n  name_contains?: InputMaybe<Scalars['String']>;\n  name_contains_nocase?: InputMaybe<Scalars['String']>;\n  name_ends_with?: InputMaybe<Scalars['String']>;\n  name_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  name_gt?: InputMaybe<Scalars['String']>;\n  name_gte?: InputMaybe<Scalars['String']>;\n  name_in?: InputMaybe<Array<Scalars['String']>>;\n  name_lt?: InputMaybe<Scalars['String']>;\n  name_lte?: InputMaybe<Scalars['String']>;\n  name_not?: InputMaybe<Scalars['String']>;\n  name_not_contains?: InputMaybe<Scalars['String']>;\n  name_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  name_not_ends_with?: InputMaybe<Scalars['String']>;\n  name_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  name_not_in?: InputMaybe<Array<Scalars['String']>>;\n  name_not_starts_with?: InputMaybe<Scalars['String']>;\n  name_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  name_starts_with?: InputMaybe<Scalars['String']>;\n  name_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum GaugeType_OrderBy {\n  Id = 'id',\n  Name = 'name'\n}\n\nexport type GaugeVote = {\n  __typename?: 'GaugeVote';\n  gauge: LiquidityGauge;\n  id: Scalars['ID'];\n  timestamp?: Maybe<Scalars['BigInt']>;\n  user: User;\n  weight?: Maybe<Scalars['BigDecimal']>;\n};\n\nexport type GaugeVote_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  gauge?: InputMaybe<Scalars['String']>;\n  gauge_?: InputMaybe<LiquidityGauge_Filter>;\n  gauge_contains?: InputMaybe<Scalars['String']>;\n  gauge_contains_nocase?: InputMaybe<Scalars['String']>;\n  gauge_ends_with?: InputMaybe<Scalars['String']>;\n  gauge_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  gauge_gt?: InputMaybe<Scalars['String']>;\n  gauge_gte?: InputMaybe<Scalars['String']>;\n  gauge_in?: InputMaybe<Array<Scalars['String']>>;\n  gauge_lt?: InputMaybe<Scalars['String']>;\n  gauge_lte?: InputMaybe<Scalars['String']>;\n  gauge_not?: InputMaybe<Scalars['String']>;\n  gauge_not_contains?: InputMaybe<Scalars['String']>;\n  gauge_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  gauge_not_ends_with?: InputMaybe<Scalars['String']>;\n  gauge_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  gauge_not_in?: InputMaybe<Array<Scalars['String']>>;\n  gauge_not_starts_with?: InputMaybe<Scalars['String']>;\n  gauge_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  gauge_starts_with?: InputMaybe<Scalars['String']>;\n  gauge_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  timestamp?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_gte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  timestamp_lt?: InputMaybe<Scalars['BigInt']>;\n  timestamp_lte?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not?: InputMaybe<Scalars['BigInt']>;\n  timestamp_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  user?: InputMaybe<Scalars['String']>;\n  user_?: InputMaybe<User_Filter>;\n  user_contains?: InputMaybe<Scalars['String']>;\n  user_contains_nocase?: InputMaybe<Scalars['String']>;\n  user_ends_with?: InputMaybe<Scalars['String']>;\n  user_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  user_gt?: InputMaybe<Scalars['String']>;\n  user_gte?: InputMaybe<Scalars['String']>;\n  user_in?: InputMaybe<Array<Scalars['String']>>;\n  user_lt?: InputMaybe<Scalars['String']>;\n  user_lte?: InputMaybe<Scalars['String']>;\n  user_not?: InputMaybe<Scalars['String']>;\n  user_not_contains?: InputMaybe<Scalars['String']>;\n  user_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  user_not_ends_with?: InputMaybe<Scalars['String']>;\n  user_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  user_not_in?: InputMaybe<Array<Scalars['String']>>;\n  user_not_starts_with?: InputMaybe<Scalars['String']>;\n  user_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  user_starts_with?: InputMaybe<Scalars['String']>;\n  user_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  weight?: InputMaybe<Scalars['BigDecimal']>;\n  weight_gt?: InputMaybe<Scalars['BigDecimal']>;\n  weight_gte?: InputMaybe<Scalars['BigDecimal']>;\n  weight_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  weight_lt?: InputMaybe<Scalars['BigDecimal']>;\n  weight_lte?: InputMaybe<Scalars['BigDecimal']>;\n  weight_not?: InputMaybe<Scalars['BigDecimal']>;\n  weight_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum GaugeVote_OrderBy {\n  Gauge = 'gauge',\n  Id = 'id',\n  Timestamp = 'timestamp',\n  User = 'user',\n  Weight = 'weight'\n}\n\nexport type Gauge_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  address?: InputMaybe<Scalars['Bytes']>;\n  address_contains?: InputMaybe<Scalars['Bytes']>;\n  address_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  address_not?: InputMaybe<Scalars['Bytes']>;\n  address_not_contains?: InputMaybe<Scalars['Bytes']>;\n  address_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  type?: InputMaybe<Scalars['String']>;\n  type_?: InputMaybe<GaugeType_Filter>;\n  type_contains?: InputMaybe<Scalars['String']>;\n  type_contains_nocase?: InputMaybe<Scalars['String']>;\n  type_ends_with?: InputMaybe<Scalars['String']>;\n  type_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  type_gt?: InputMaybe<Scalars['String']>;\n  type_gte?: InputMaybe<Scalars['String']>;\n  type_in?: InputMaybe<Array<Scalars['String']>>;\n  type_lt?: InputMaybe<Scalars['String']>;\n  type_lte?: InputMaybe<Scalars['String']>;\n  type_not?: InputMaybe<Scalars['String']>;\n  type_not_contains?: InputMaybe<Scalars['String']>;\n  type_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  type_not_ends_with?: InputMaybe<Scalars['String']>;\n  type_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  type_not_in?: InputMaybe<Array<Scalars['String']>>;\n  type_not_starts_with?: InputMaybe<Scalars['String']>;\n  type_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  type_starts_with?: InputMaybe<Scalars['String']>;\n  type_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum Gauge_OrderBy {\n  Address = 'address',\n  Id = 'id',\n  Type = 'type'\n}\n\nexport type LiquidityGauge = {\n  __typename?: 'LiquidityGauge';\n  factory: GaugeFactory;\n  id: Scalars['ID'];\n  poolAddress: Scalars['Bytes'];\n  poolId?: Maybe<Scalars['Bytes']>;\n  shares?: Maybe<Array<GaugeShare>>;\n  streamer?: Maybe<Scalars['Bytes']>;\n  symbol: Scalars['String'];\n  tokens?: Maybe<Array<RewardToken>>;\n  totalSupply: Scalars['BigDecimal'];\n};\n\n\nexport type LiquidityGaugeSharesArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GaugeShare_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<GaugeShare_Filter>;\n};\n\n\nexport type LiquidityGaugeTokensArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RewardToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<RewardToken_Filter>;\n};\n\nexport type LiquidityGauge_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  factory?: InputMaybe<Scalars['String']>;\n  factory_?: InputMaybe<GaugeFactory_Filter>;\n  factory_contains?: InputMaybe<Scalars['String']>;\n  factory_contains_nocase?: InputMaybe<Scalars['String']>;\n  factory_ends_with?: InputMaybe<Scalars['String']>;\n  factory_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  factory_gt?: InputMaybe<Scalars['String']>;\n  factory_gte?: InputMaybe<Scalars['String']>;\n  factory_in?: InputMaybe<Array<Scalars['String']>>;\n  factory_lt?: InputMaybe<Scalars['String']>;\n  factory_lte?: InputMaybe<Scalars['String']>;\n  factory_not?: InputMaybe<Scalars['String']>;\n  factory_not_contains?: InputMaybe<Scalars['String']>;\n  factory_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  factory_not_ends_with?: InputMaybe<Scalars['String']>;\n  factory_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  factory_not_in?: InputMaybe<Array<Scalars['String']>>;\n  factory_not_starts_with?: InputMaybe<Scalars['String']>;\n  factory_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  factory_starts_with?: InputMaybe<Scalars['String']>;\n  factory_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  poolAddress?: InputMaybe<Scalars['Bytes']>;\n  poolAddress_contains?: InputMaybe<Scalars['Bytes']>;\n  poolAddress_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  poolAddress_not?: InputMaybe<Scalars['Bytes']>;\n  poolAddress_not_contains?: InputMaybe<Scalars['Bytes']>;\n  poolAddress_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  poolId?: InputMaybe<Scalars['Bytes']>;\n  poolId_contains?: InputMaybe<Scalars['Bytes']>;\n  poolId_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  poolId_not?: InputMaybe<Scalars['Bytes']>;\n  poolId_not_contains?: InputMaybe<Scalars['Bytes']>;\n  poolId_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  shares_?: InputMaybe<GaugeShare_Filter>;\n  streamer?: InputMaybe<Scalars['Bytes']>;\n  streamer_contains?: InputMaybe<Scalars['Bytes']>;\n  streamer_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  streamer_not?: InputMaybe<Scalars['Bytes']>;\n  streamer_not_contains?: InputMaybe<Scalars['Bytes']>;\n  streamer_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  symbol?: InputMaybe<Scalars['String']>;\n  symbol_contains?: InputMaybe<Scalars['String']>;\n  symbol_contains_nocase?: InputMaybe<Scalars['String']>;\n  symbol_ends_with?: InputMaybe<Scalars['String']>;\n  symbol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_gt?: InputMaybe<Scalars['String']>;\n  symbol_gte?: InputMaybe<Scalars['String']>;\n  symbol_in?: InputMaybe<Array<Scalars['String']>>;\n  symbol_lt?: InputMaybe<Scalars['String']>;\n  symbol_lte?: InputMaybe<Scalars['String']>;\n  symbol_not?: InputMaybe<Scalars['String']>;\n  symbol_not_contains?: InputMaybe<Scalars['String']>;\n  symbol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  symbol_not_ends_with?: InputMaybe<Scalars['String']>;\n  symbol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  symbol_not_starts_with?: InputMaybe<Scalars['String']>;\n  symbol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_starts_with?: InputMaybe<Scalars['String']>;\n  symbol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  tokens_?: InputMaybe<RewardToken_Filter>;\n  totalSupply?: InputMaybe<Scalars['BigDecimal']>;\n  totalSupply_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSupply_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSupply_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalSupply_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalSupply_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalSupply_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalSupply_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum LiquidityGauge_OrderBy {\n  Factory = 'factory',\n  Id = 'id',\n  PoolAddress = 'poolAddress',\n  PoolId = 'poolId',\n  Shares = 'shares',\n  Streamer = 'streamer',\n  Symbol = 'symbol',\n  Tokens = 'tokens',\n  TotalSupply = 'totalSupply'\n}\n\n/** Defines the order direction, either ascending or descending */\nexport enum OrderDirection {\n  Asc = 'asc',\n  Desc = 'desc'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Access to subgraph metadata */\n  _meta?: Maybe<_Meta_>;\n  gauge?: Maybe<Gauge>;\n  gaugeFactories: Array<GaugeFactory>;\n  gaugeFactory?: Maybe<GaugeFactory>;\n  gaugeShare?: Maybe<GaugeShare>;\n  gaugeShares: Array<GaugeShare>;\n  gaugeType?: Maybe<GaugeType>;\n  gaugeTypes: Array<GaugeType>;\n  gaugeVote?: Maybe<GaugeVote>;\n  gaugeVotes: Array<GaugeVote>;\n  gauges: Array<Gauge>;\n  liquidityGauge?: Maybe<LiquidityGauge>;\n  liquidityGauges: Array<LiquidityGauge>;\n  rewardToken?: Maybe<RewardToken>;\n  rewardTokens: Array<RewardToken>;\n  rootGauge?: Maybe<RootGauge>;\n  rootGauges: Array<RootGauge>;\n  user?: Maybe<User>;\n  users: Array<User>;\n  votingEscrow?: Maybe<VotingEscrow>;\n  votingEscrowLock?: Maybe<VotingEscrowLock>;\n  votingEscrowLocks: Array<VotingEscrowLock>;\n  votingEscrows: Array<VotingEscrow>;\n};\n\n\nexport type Query_MetaArgs = {\n  block?: InputMaybe<Block_Height>;\n};\n\n\nexport type QueryGaugeArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryGaugeFactoriesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GaugeFactory_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<GaugeFactory_Filter>;\n};\n\n\nexport type QueryGaugeFactoryArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryGaugeShareArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryGaugeSharesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GaugeShare_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<GaugeShare_Filter>;\n};\n\n\nexport type QueryGaugeTypeArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryGaugeTypesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GaugeType_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<GaugeType_Filter>;\n};\n\n\nexport type QueryGaugeVoteArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryGaugeVotesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GaugeVote_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<GaugeVote_Filter>;\n};\n\n\nexport type QueryGaugesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Gauge_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Gauge_Filter>;\n};\n\n\nexport type QueryLiquidityGaugeArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryLiquidityGaugesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LiquidityGauge_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<LiquidityGauge_Filter>;\n};\n\n\nexport type QueryRewardTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryRewardTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RewardToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<RewardToken_Filter>;\n};\n\n\nexport type QueryRootGaugeArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryRootGaugesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RootGauge_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<RootGauge_Filter>;\n};\n\n\nexport type QueryUserArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryUsersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<User_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<User_Filter>;\n};\n\n\nexport type QueryVotingEscrowArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryVotingEscrowLockArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type QueryVotingEscrowLocksArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<VotingEscrowLock_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<VotingEscrowLock_Filter>;\n};\n\n\nexport type QueryVotingEscrowsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<VotingEscrow_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<VotingEscrow_Filter>;\n};\n\nexport type RewardToken = {\n  __typename?: 'RewardToken';\n  decimals: Scalars['Int'];\n  gauge: LiquidityGauge;\n  id: Scalars['ID'];\n  symbol: Scalars['String'];\n  totalDeposited: Scalars['BigDecimal'];\n};\n\nexport type RewardToken_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  decimals?: InputMaybe<Scalars['Int']>;\n  decimals_gt?: InputMaybe<Scalars['Int']>;\n  decimals_gte?: InputMaybe<Scalars['Int']>;\n  decimals_in?: InputMaybe<Array<Scalars['Int']>>;\n  decimals_lt?: InputMaybe<Scalars['Int']>;\n  decimals_lte?: InputMaybe<Scalars['Int']>;\n  decimals_not?: InputMaybe<Scalars['Int']>;\n  decimals_not_in?: InputMaybe<Array<Scalars['Int']>>;\n  gauge?: InputMaybe<Scalars['String']>;\n  gauge_?: InputMaybe<LiquidityGauge_Filter>;\n  gauge_contains?: InputMaybe<Scalars['String']>;\n  gauge_contains_nocase?: InputMaybe<Scalars['String']>;\n  gauge_ends_with?: InputMaybe<Scalars['String']>;\n  gauge_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  gauge_gt?: InputMaybe<Scalars['String']>;\n  gauge_gte?: InputMaybe<Scalars['String']>;\n  gauge_in?: InputMaybe<Array<Scalars['String']>>;\n  gauge_lt?: InputMaybe<Scalars['String']>;\n  gauge_lte?: InputMaybe<Scalars['String']>;\n  gauge_not?: InputMaybe<Scalars['String']>;\n  gauge_not_contains?: InputMaybe<Scalars['String']>;\n  gauge_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  gauge_not_ends_with?: InputMaybe<Scalars['String']>;\n  gauge_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  gauge_not_in?: InputMaybe<Array<Scalars['String']>>;\n  gauge_not_starts_with?: InputMaybe<Scalars['String']>;\n  gauge_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  gauge_starts_with?: InputMaybe<Scalars['String']>;\n  gauge_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  symbol?: InputMaybe<Scalars['String']>;\n  symbol_contains?: InputMaybe<Scalars['String']>;\n  symbol_contains_nocase?: InputMaybe<Scalars['String']>;\n  symbol_ends_with?: InputMaybe<Scalars['String']>;\n  symbol_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_gt?: InputMaybe<Scalars['String']>;\n  symbol_gte?: InputMaybe<Scalars['String']>;\n  symbol_in?: InputMaybe<Array<Scalars['String']>>;\n  symbol_lt?: InputMaybe<Scalars['String']>;\n  symbol_lte?: InputMaybe<Scalars['String']>;\n  symbol_not?: InputMaybe<Scalars['String']>;\n  symbol_not_contains?: InputMaybe<Scalars['String']>;\n  symbol_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  symbol_not_ends_with?: InputMaybe<Scalars['String']>;\n  symbol_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_not_in?: InputMaybe<Array<Scalars['String']>>;\n  symbol_not_starts_with?: InputMaybe<Scalars['String']>;\n  symbol_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  symbol_starts_with?: InputMaybe<Scalars['String']>;\n  symbol_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  totalDeposited?: InputMaybe<Scalars['BigDecimal']>;\n  totalDeposited_gt?: InputMaybe<Scalars['BigDecimal']>;\n  totalDeposited_gte?: InputMaybe<Scalars['BigDecimal']>;\n  totalDeposited_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  totalDeposited_lt?: InputMaybe<Scalars['BigDecimal']>;\n  totalDeposited_lte?: InputMaybe<Scalars['BigDecimal']>;\n  totalDeposited_not?: InputMaybe<Scalars['BigDecimal']>;\n  totalDeposited_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum RewardToken_OrderBy {\n  Decimals = 'decimals',\n  Gauge = 'gauge',\n  Id = 'id',\n  Symbol = 'symbol',\n  TotalDeposited = 'totalDeposited'\n}\n\nexport type RootGauge = {\n  __typename?: 'RootGauge';\n  chain: Chain;\n  id: Scalars['ID'];\n  recipient: Scalars['Bytes'];\n};\n\nexport type RootGauge_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  chain?: InputMaybe<Chain>;\n  chain_in?: InputMaybe<Array<Chain>>;\n  chain_not?: InputMaybe<Chain>;\n  chain_not_in?: InputMaybe<Array<Chain>>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  recipient?: InputMaybe<Scalars['Bytes']>;\n  recipient_contains?: InputMaybe<Scalars['Bytes']>;\n  recipient_in?: InputMaybe<Array<Scalars['Bytes']>>;\n  recipient_not?: InputMaybe<Scalars['Bytes']>;\n  recipient_not_contains?: InputMaybe<Scalars['Bytes']>;\n  recipient_not_in?: InputMaybe<Array<Scalars['Bytes']>>;\n};\n\nexport enum RootGauge_OrderBy {\n  Chain = 'chain',\n  Id = 'id',\n  Recipient = 'recipient'\n}\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  /** Access to subgraph metadata */\n  _meta?: Maybe<_Meta_>;\n  gauge?: Maybe<Gauge>;\n  gaugeFactories: Array<GaugeFactory>;\n  gaugeFactory?: Maybe<GaugeFactory>;\n  gaugeShare?: Maybe<GaugeShare>;\n  gaugeShares: Array<GaugeShare>;\n  gaugeType?: Maybe<GaugeType>;\n  gaugeTypes: Array<GaugeType>;\n  gaugeVote?: Maybe<GaugeVote>;\n  gaugeVotes: Array<GaugeVote>;\n  gauges: Array<Gauge>;\n  liquidityGauge?: Maybe<LiquidityGauge>;\n  liquidityGauges: Array<LiquidityGauge>;\n  rewardToken?: Maybe<RewardToken>;\n  rewardTokens: Array<RewardToken>;\n  rootGauge?: Maybe<RootGauge>;\n  rootGauges: Array<RootGauge>;\n  user?: Maybe<User>;\n  users: Array<User>;\n  votingEscrow?: Maybe<VotingEscrow>;\n  votingEscrowLock?: Maybe<VotingEscrowLock>;\n  votingEscrowLocks: Array<VotingEscrowLock>;\n  votingEscrows: Array<VotingEscrow>;\n};\n\n\nexport type Subscription_MetaArgs = {\n  block?: InputMaybe<Block_Height>;\n};\n\n\nexport type SubscriptionGaugeArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionGaugeFactoriesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GaugeFactory_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<GaugeFactory_Filter>;\n};\n\n\nexport type SubscriptionGaugeFactoryArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionGaugeShareArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionGaugeSharesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GaugeShare_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<GaugeShare_Filter>;\n};\n\n\nexport type SubscriptionGaugeTypeArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionGaugeTypesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GaugeType_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<GaugeType_Filter>;\n};\n\n\nexport type SubscriptionGaugeVoteArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionGaugeVotesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GaugeVote_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<GaugeVote_Filter>;\n};\n\n\nexport type SubscriptionGaugesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Gauge_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<Gauge_Filter>;\n};\n\n\nexport type SubscriptionLiquidityGaugeArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionLiquidityGaugesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LiquidityGauge_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<LiquidityGauge_Filter>;\n};\n\n\nexport type SubscriptionRewardTokenArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionRewardTokensArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RewardToken_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<RewardToken_Filter>;\n};\n\n\nexport type SubscriptionRootGaugeArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionRootGaugesArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<RootGauge_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<RootGauge_Filter>;\n};\n\n\nexport type SubscriptionUserArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionUsersArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<User_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<User_Filter>;\n};\n\n\nexport type SubscriptionVotingEscrowArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionVotingEscrowLockArgs = {\n  block?: InputMaybe<Block_Height>;\n  id: Scalars['ID'];\n  subgraphError?: _SubgraphErrorPolicy_;\n};\n\n\nexport type SubscriptionVotingEscrowLocksArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<VotingEscrowLock_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<VotingEscrowLock_Filter>;\n};\n\n\nexport type SubscriptionVotingEscrowsArgs = {\n  block?: InputMaybe<Block_Height>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<VotingEscrow_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  subgraphError?: _SubgraphErrorPolicy_;\n  where?: InputMaybe<VotingEscrow_Filter>;\n};\n\nexport type User = {\n  __typename?: 'User';\n  gaugeShares?: Maybe<Array<GaugeShare>>;\n  gaugeVotes?: Maybe<Array<GaugeVote>>;\n  id: Scalars['ID'];\n  votingLocks?: Maybe<Array<VotingEscrowLock>>;\n};\n\n\nexport type UserGaugeSharesArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GaugeShare_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<GaugeShare_Filter>;\n};\n\n\nexport type UserGaugeVotesArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<GaugeVote_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<GaugeVote_Filter>;\n};\n\n\nexport type UserVotingLocksArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<VotingEscrowLock_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<VotingEscrowLock_Filter>;\n};\n\nexport type User_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  gaugeShares_?: InputMaybe<GaugeShare_Filter>;\n  gaugeVotes_?: InputMaybe<GaugeVote_Filter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  votingLocks_?: InputMaybe<VotingEscrowLock_Filter>;\n};\n\nexport enum User_OrderBy {\n  GaugeShares = 'gaugeShares',\n  GaugeVotes = 'gaugeVotes',\n  Id = 'id',\n  VotingLocks = 'votingLocks'\n}\n\nexport type VotingEscrow = {\n  __typename?: 'VotingEscrow';\n  id: Scalars['ID'];\n  locks?: Maybe<Array<VotingEscrowLock>>;\n  stakedSupply: Scalars['BigDecimal'];\n};\n\n\nexport type VotingEscrowLocksArgs = {\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<VotingEscrowLock_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<VotingEscrowLock_Filter>;\n};\n\nexport type VotingEscrowLock = {\n  __typename?: 'VotingEscrowLock';\n  id: Scalars['ID'];\n  lockedBalance: Scalars['BigDecimal'];\n  unlockTime?: Maybe<Scalars['BigInt']>;\n  user: User;\n  votingEscrowID: VotingEscrow;\n};\n\nexport type VotingEscrowLock_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  lockedBalance?: InputMaybe<Scalars['BigDecimal']>;\n  lockedBalance_gt?: InputMaybe<Scalars['BigDecimal']>;\n  lockedBalance_gte?: InputMaybe<Scalars['BigDecimal']>;\n  lockedBalance_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  lockedBalance_lt?: InputMaybe<Scalars['BigDecimal']>;\n  lockedBalance_lte?: InputMaybe<Scalars['BigDecimal']>;\n  lockedBalance_not?: InputMaybe<Scalars['BigDecimal']>;\n  lockedBalance_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  unlockTime?: InputMaybe<Scalars['BigInt']>;\n  unlockTime_gt?: InputMaybe<Scalars['BigInt']>;\n  unlockTime_gte?: InputMaybe<Scalars['BigInt']>;\n  unlockTime_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  unlockTime_lt?: InputMaybe<Scalars['BigInt']>;\n  unlockTime_lte?: InputMaybe<Scalars['BigInt']>;\n  unlockTime_not?: InputMaybe<Scalars['BigInt']>;\n  unlockTime_not_in?: InputMaybe<Array<Scalars['BigInt']>>;\n  user?: InputMaybe<Scalars['String']>;\n  user_?: InputMaybe<User_Filter>;\n  user_contains?: InputMaybe<Scalars['String']>;\n  user_contains_nocase?: InputMaybe<Scalars['String']>;\n  user_ends_with?: InputMaybe<Scalars['String']>;\n  user_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  user_gt?: InputMaybe<Scalars['String']>;\n  user_gte?: InputMaybe<Scalars['String']>;\n  user_in?: InputMaybe<Array<Scalars['String']>>;\n  user_lt?: InputMaybe<Scalars['String']>;\n  user_lte?: InputMaybe<Scalars['String']>;\n  user_not?: InputMaybe<Scalars['String']>;\n  user_not_contains?: InputMaybe<Scalars['String']>;\n  user_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  user_not_ends_with?: InputMaybe<Scalars['String']>;\n  user_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  user_not_in?: InputMaybe<Array<Scalars['String']>>;\n  user_not_starts_with?: InputMaybe<Scalars['String']>;\n  user_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  user_starts_with?: InputMaybe<Scalars['String']>;\n  user_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  votingEscrowID?: InputMaybe<Scalars['String']>;\n  votingEscrowID_?: InputMaybe<VotingEscrow_Filter>;\n  votingEscrowID_contains?: InputMaybe<Scalars['String']>;\n  votingEscrowID_contains_nocase?: InputMaybe<Scalars['String']>;\n  votingEscrowID_ends_with?: InputMaybe<Scalars['String']>;\n  votingEscrowID_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  votingEscrowID_gt?: InputMaybe<Scalars['String']>;\n  votingEscrowID_gte?: InputMaybe<Scalars['String']>;\n  votingEscrowID_in?: InputMaybe<Array<Scalars['String']>>;\n  votingEscrowID_lt?: InputMaybe<Scalars['String']>;\n  votingEscrowID_lte?: InputMaybe<Scalars['String']>;\n  votingEscrowID_not?: InputMaybe<Scalars['String']>;\n  votingEscrowID_not_contains?: InputMaybe<Scalars['String']>;\n  votingEscrowID_not_contains_nocase?: InputMaybe<Scalars['String']>;\n  votingEscrowID_not_ends_with?: InputMaybe<Scalars['String']>;\n  votingEscrowID_not_ends_with_nocase?: InputMaybe<Scalars['String']>;\n  votingEscrowID_not_in?: InputMaybe<Array<Scalars['String']>>;\n  votingEscrowID_not_starts_with?: InputMaybe<Scalars['String']>;\n  votingEscrowID_not_starts_with_nocase?: InputMaybe<Scalars['String']>;\n  votingEscrowID_starts_with?: InputMaybe<Scalars['String']>;\n  votingEscrowID_starts_with_nocase?: InputMaybe<Scalars['String']>;\n};\n\nexport enum VotingEscrowLock_OrderBy {\n  Id = 'id',\n  LockedBalance = 'lockedBalance',\n  UnlockTime = 'unlockTime',\n  User = 'user',\n  VotingEscrowId = 'votingEscrowID'\n}\n\nexport type VotingEscrow_Filter = {\n  /** Filter for the block changed event. */\n  _change_block?: InputMaybe<BlockChangedFilter>;\n  id?: InputMaybe<Scalars['ID']>;\n  id_gt?: InputMaybe<Scalars['ID']>;\n  id_gte?: InputMaybe<Scalars['ID']>;\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  id_lt?: InputMaybe<Scalars['ID']>;\n  id_lte?: InputMaybe<Scalars['ID']>;\n  id_not?: InputMaybe<Scalars['ID']>;\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  locks_?: InputMaybe<VotingEscrowLock_Filter>;\n  stakedSupply?: InputMaybe<Scalars['BigDecimal']>;\n  stakedSupply_gt?: InputMaybe<Scalars['BigDecimal']>;\n  stakedSupply_gte?: InputMaybe<Scalars['BigDecimal']>;\n  stakedSupply_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n  stakedSupply_lt?: InputMaybe<Scalars['BigDecimal']>;\n  stakedSupply_lte?: InputMaybe<Scalars['BigDecimal']>;\n  stakedSupply_not?: InputMaybe<Scalars['BigDecimal']>;\n  stakedSupply_not_in?: InputMaybe<Array<Scalars['BigDecimal']>>;\n};\n\nexport enum VotingEscrow_OrderBy {\n  Id = 'id',\n  Locks = 'locks',\n  StakedSupply = 'stakedSupply'\n}\n\nexport type _Block_ = {\n  __typename?: '_Block_';\n  /** The hash of the block */\n  hash?: Maybe<Scalars['Bytes']>;\n  /** The block number */\n  number: Scalars['Int'];\n};\n\n/** The type for the top-level _meta field */\nexport type _Meta_ = {\n  __typename?: '_Meta_';\n  /**\n   * Information about a specific subgraph block. The hash of the block\n   * will be null if the _meta field has a block constraint that asks for\n   * a block number. It will be filled if the _meta field has no block constraint\n   * and therefore asks for the latest  block\n   *\n   */\n  block: _Block_;\n  /** The deployment ID */\n  deployment: Scalars['String'];\n  /** If `true`, the subgraph encountered indexing errors at some past block */\n  hasIndexingErrors: Scalars['Boolean'];\n};\n\nexport enum _SubgraphErrorPolicy_ {\n  /** Data will be returned even if the subgraph has indexing errors */\n  Allow = 'allow',\n  /** If the subgraph has indexing errors, data will be omitted. The default. */\n  Deny = 'deny'\n}\n\nexport type LiquidityGaugesQueryVariables = Exact<{\n  skip?: InputMaybe<Scalars['Int']>;\n  first?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<LiquidityGauge_OrderBy>;\n  orderDirection?: InputMaybe<OrderDirection>;\n  where?: InputMaybe<LiquidityGauge_Filter>;\n  block?: InputMaybe<Block_Height>;\n}>;\n\n\nexport type LiquidityGaugesQuery = { __typename?: 'Query', liquidityGauges: Array<{ __typename?: 'LiquidityGauge', id: string, symbol: string, poolAddress: string, poolId?: string | null, streamer?: string | null, totalSupply: string, factory: { __typename?: 'GaugeFactory', id: string, numGauges: number }, tokens?: Array<{ __typename?: 'RewardToken', id: string, symbol: string, decimals: number, totalDeposited: string }> | null }> };\n\nexport type SubgraphLiquidityGaugeFragment = { __typename?: 'LiquidityGauge', id: string, symbol: string, poolAddress: string, poolId?: string | null, streamer?: string | null, totalSupply: string, factory: { __typename?: 'GaugeFactory', id: string, numGauges: number }, tokens?: Array<{ __typename?: 'RewardToken', id: string, symbol: string, decimals: number, totalDeposited: string }> | null };\n\nexport const SubgraphLiquidityGaugeFragmentDoc = gql`\n    fragment SubgraphLiquidityGauge on LiquidityGauge {\n  id\n  symbol\n  poolAddress\n  poolId\n  streamer\n  factory {\n    id\n    numGauges\n  }\n  totalSupply\n  tokens {\n    id\n    symbol\n    decimals\n    totalDeposited\n  }\n}\n    `;\nexport const LiquidityGaugesDocument = gql`\n    query LiquidityGauges($skip: Int, $first: Int, $orderBy: LiquidityGauge_orderBy, $orderDirection: OrderDirection, $where: LiquidityGauge_filter, $block: Block_height) {\n  liquidityGauges(\n    skip: $skip\n    first: $first\n    orderBy: $orderBy\n    orderDirection: $orderDirection\n    where: $where\n    block: $block\n  ) {\n    ...SubgraphLiquidityGauge\n  }\n}\n    ${SubgraphLiquidityGaugeFragmentDoc}`;\n\nexport type SdkFunctionWrapper = <T>(action: (requestHeaders?:Record<string, string>) => Promise<T>, operationName: string, operationType?: string) => Promise<T>;\n\n\nconst defaultWrapper: SdkFunctionWrapper = (action, _operationName, _operationType) => action();\n\nexport function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {\n  return {\n    LiquidityGauges(variables?: LiquidityGaugesQueryVariables, requestHeaders?: Dom.RequestInit[\"headers\"]): Promise<LiquidityGaugesQuery> {\n      return withWrapper((wrappedRequestHeaders) => client.request<LiquidityGaugesQuery>(LiquidityGaugesDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'LiquidityGauges', 'query');\n    }\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;","import { GraphQLClient } from 'graphql-request';\nimport { getSdk, Sdk } from './generated/balancer-subgraph-types';\nimport * as Gauges from './generated/balancer-gauges';\nimport * as V2 from './generated/balancer-subgraph-types';\n\nexport * from './generated/balancer-subgraph-types';\n\nexport type SubgraphClient = Sdk;\nexport type GaugesClient = Gauges.Sdk;\nexport type SubgraphLiquidityGauge = Gauges.LiquidityGauge;\nexport type SubgraphPool = V2.SubgraphPoolFragment;\n\nexport function createSubgraphClient(subgraphUrl: string): SubgraphClient {\n  const client = new GraphQLClient(subgraphUrl);\n\n  return getSdk(client);\n}\n\nexport function createGaugesClient(url: string): GaugesClient {\n  const client = new GraphQLClient(url);\n\n  return Gauges.getSdk(client);\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { Provider } from '@ethersproject/providers';\n\nconst multicallAbi = [\n  'function aggregate(tuple[](address target, bytes callData) memory calls) public view returns (uint256 blockNumber, bytes[] memory returnData)',\n];\n\nexport const Multicall = (address: string, provider: Provider): Contract =>\n  new Contract(address, multicallAbi, provider);\n","import { set } from 'lodash';\nimport { Fragment, JsonFragment, Interface, Result } from '@ethersproject/abi';\nimport { CallOverrides } from '@ethersproject/contracts';\nimport { Provider } from '@ethersproject/providers';\nimport { BytesLike } from '@ethersproject/bytes';\nimport { Multicall } from '../../modules/contracts/multicall';\nexport class Multicaller {\n  private multiAddress: string;\n  private provider: Provider;\n  private interface: Interface;\n  public options: CallOverrides = {};\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private calls: [string, string, any][] = [];\n  private paths: string[] = [];\n\n  constructor(\n    multiAddress: string,\n    provider: Provider,\n    abi: string | Array<Fragment | JsonFragment | string>,\n    options = {}\n  ) {\n    this.multiAddress = multiAddress;\n    this.provider = provider;\n    this.interface = new Interface(abi);\n    this.options = options;\n  }\n\n  call(\n    path: string,\n    address: string,\n    functionName: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    params?: any[]\n  ): Multicaller {\n    this.calls.push([address, functionName, params]);\n    this.paths.push(path);\n    return this;\n  }\n\n  async execute(\n    from: Record<string, unknown> = {}\n  ): Promise<Record<string, unknown>> {\n    const obj = from;\n    const results = await this.executeMulticall();\n    results.forEach((result, i) =>\n      set(obj, this.paths[i], result.length > 1 ? result : result[0])\n    );\n    this.calls = [];\n    this.paths = [];\n    return obj;\n  }\n\n  private async executeMulticall(): Promise<Result[]> {\n    const multi = Multicall(this.multiAddress, this.provider);\n\n    const [, res] = await multi.aggregate(\n      this.calls.map(([address, functionName, params]) => [\n        address,\n        this.interface.encodeFunctionData(functionName, params),\n      ]),\n      this.options\n    );\n\n    return res.map((result: BytesLike, i: number) =>\n      this.interface.decodeFunctionResult(this.calls[i][1], result)\n    );\n  }\n}\n","import { formatFixed } from '@ethersproject/bignumber';\nimport { Provider } from '@ethersproject/providers';\nimport { PoolFilter, SubgraphPoolBase } from '@balancer-labs/sor';\nimport { Multicaller } from '@/lib/utils/multiCaller';\nimport { isSameAddress } from '@/lib/utils';\nimport { Vault__factory } from '@balancer-labs/typechain';\n\n// TODO: decide whether we want to trim these ABIs down to the relevant functions\nimport aTokenRateProvider from '@/lib/abi/StaticATokenRateProvider.json';\nimport weightedPoolAbi from '@/lib/abi/WeightedPool.json';\nimport stablePoolAbi from '@/lib/abi/StablePool.json';\nimport elementPoolAbi from '@/lib/abi/ConvergentCurvePool.json';\nimport linearPoolAbi from '@/lib/abi/LinearPool.json';\n\nexport async function getOnChainBalances(\n  subgraphPoolsOriginal: SubgraphPoolBase[],\n  multiAddress: string,\n  vaultAddress: string,\n  provider: Provider\n): Promise<SubgraphPoolBase[]> {\n  if (subgraphPoolsOriginal.length === 0) return subgraphPoolsOriginal;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const abis: any = Object.values(\n    // Remove duplicate entries using their names\n    Object.fromEntries(\n      [\n        ...Vault__factory.abi,\n        ...aTokenRateProvider,\n        ...weightedPoolAbi,\n        ...stablePoolAbi,\n        ...elementPoolAbi,\n        ...linearPoolAbi,\n      ].map((row) => [row.name, row])\n    )\n  );\n\n  const multiPool = new Multicaller(multiAddress, provider, abis);\n\n  const supportedPoolTypes: string[] = Object.values(PoolFilter);\n  const subgraphPools: SubgraphPoolBase[] = [];\n  subgraphPoolsOriginal.forEach((pool) => {\n    if (!supportedPoolTypes.includes(pool.poolType)) {\n      console.error(`Unknown pool type: ${pool.poolType} ${pool.id}`);\n      return;\n    }\n\n    subgraphPools.push(pool);\n\n    multiPool.call(`${pool.id}.poolTokens`, vaultAddress, 'getPoolTokens', [\n      pool.id,\n    ]);\n    multiPool.call(`${pool.id}.totalSupply`, pool.address, 'totalSupply');\n\n    // Pools with pre minted BPT\n    if (pool.poolType.includes('Linear') || pool.poolType === 'StablePhantom') {\n      multiPool.call(\n        `${pool.id}.virtualSupply`,\n        pool.address,\n        'getVirtualSupply'\n      );\n    }\n\n    // TO DO - Make this part of class to make more flexible?\n    if (\n      pool.poolType === 'Weighted' ||\n      pool.poolType === 'LiquidityBootstrapping' ||\n      pool.poolType === 'Investment'\n    ) {\n      multiPool.call(\n        `${pool.id}.weights`,\n        pool.address,\n        'getNormalizedWeights'\n      );\n      multiPool.call(\n        `${pool.id}.swapFee`,\n        pool.address,\n        'getSwapFeePercentage'\n      );\n    } else if (\n      pool.poolType === 'Stable' ||\n      pool.poolType === 'MetaStable' ||\n      pool.poolType === 'StablePhantom'\n    ) {\n      // MetaStable & StablePhantom is the same as Stable for multicall purposes\n      multiPool.call(\n        `${pool.id}.amp`,\n        pool.address,\n        'getAmplificationParameter'\n      );\n      multiPool.call(\n        `${pool.id}.swapFee`,\n        pool.address,\n        'getSwapFeePercentage'\n      );\n    } else if (pool.poolType === 'Element') {\n      multiPool.call(`${pool.id}.swapFee`, pool.address, 'percentFee');\n    } else if (pool.poolType.toString().includes('Linear')) {\n      multiPool.call(\n        `${pool.id}.swapFee`,\n        pool.address,\n        'getSwapFeePercentage'\n      );\n\n      multiPool.call(`${pool.id}.targets`, pool.address, 'getTargets');\n      multiPool.call(`${pool.id}.rate`, pool.address, 'getWrappedTokenRate');\n    }\n  });\n\n  let pools = {} as Record<\n    string,\n    {\n      amp?: string[];\n      swapFee: string;\n      weights?: string[];\n      targets?: string[];\n      poolTokens: {\n        tokens: string[];\n        balances: string[];\n      };\n      totalSupply: string;\n      virtualSupply?: string;\n      rate?: string;\n    }\n  >;\n\n  try {\n    pools = (await multiPool.execute()) as Record<\n      string,\n      {\n        amp?: string[];\n        swapFee: string;\n        weights?: string[];\n        poolTokens: {\n          tokens: string[];\n          balances: string[];\n        };\n        totalSupply: string;\n        virtualSupply?: string;\n        rate?: string;\n      }\n    >;\n  } catch (err) {\n    throw `Issue with multicall execution.`;\n  }\n\n  const onChainPools: SubgraphPoolBase[] = [];\n\n  Object.entries(pools).forEach(([poolId, onchainData], index) => {\n    try {\n      const { poolTokens, swapFee, weights, totalSupply, virtualSupply } =\n        onchainData;\n\n      if (\n        subgraphPools[index].poolType === 'Stable' ||\n        subgraphPools[index].poolType === 'MetaStable' ||\n        subgraphPools[index].poolType === 'StablePhantom'\n      ) {\n        if (!onchainData.amp) {\n          console.error(`Stable Pool Missing Amp: ${poolId}`);\n          return;\n        } else {\n          // Need to scale amp by precision to match expected Subgraph scale\n          // amp is stored with 3 decimals of precision\n          subgraphPools[index].amp = formatFixed(onchainData.amp[0], 3);\n        }\n      }\n\n      if (subgraphPools[index].poolType.includes('Linear')) {\n        if (!onchainData.targets) {\n          console.error(`Linear Pool Missing Targets: ${poolId}`);\n          return;\n        } else {\n          subgraphPools[index].lowerTarget = formatFixed(\n            onchainData.targets[0],\n            18\n          );\n          subgraphPools[index].upperTarget = formatFixed(\n            onchainData.targets[1],\n            18\n          );\n        }\n\n        const wrappedIndex = subgraphPools[index].wrappedIndex;\n        if (wrappedIndex === undefined || onchainData.rate === undefined) {\n          console.error(\n            `Linear Pool Missing WrappedIndex or PriceRate: ${poolId}`\n          );\n          return;\n        }\n        // Update priceRate of wrappedToken\n        subgraphPools[index].tokens[wrappedIndex].priceRate = formatFixed(\n          onchainData.rate,\n          18\n        );\n      }\n\n      subgraphPools[index].swapFee = formatFixed(swapFee, 18);\n\n      poolTokens.tokens.forEach((token, i) => {\n        const T = subgraphPools[index].tokens.find((t) =>\n          isSameAddress(t.address, token)\n        );\n        if (!T) throw `Pool Missing Expected Token: ${poolId} ${token}`;\n        T.balance = formatFixed(poolTokens.balances[i], T.decimals);\n        if (weights) {\n          // Only expected for WeightedPools\n          T.weight = formatFixed(weights[i], 18);\n        }\n      });\n\n      // Pools with pre minted BPT\n      if (\n        subgraphPools[index].poolType.includes('Linear') ||\n        subgraphPools[index].poolType === 'StablePhantom'\n      ) {\n        if (virtualSupply === undefined) {\n          console.error(\n            `Pool with pre-minted BPT missing Virtual Supply: ${poolId}`\n          );\n          return;\n        }\n        subgraphPools[index].totalShares = formatFixed(virtualSupply, 18);\n      } else {\n        subgraphPools[index].totalShares = formatFixed(totalSupply, 18);\n      }\n\n      onChainPools.push(subgraphPools[index]);\n    } catch (err) {\n      throw `Issue with pool onchain data: ${err}`;\n    }\n  });\n\n  return onChainPools;\n}\n","import { PoolDataService, SubgraphPoolBase } from '@balancer-labs/sor';\nimport {\n  OrderDirection,\n  Pool_OrderBy,\n  SubgraphClient,\n} from '@/modules/subgraph/subgraph';\nimport { parseInt } from 'lodash';\nimport { getOnChainBalances } from './onChainData';\nimport { Provider } from '@ethersproject/providers';\nimport { Network } from '@/lib/constants/network';\nimport { BalancerNetworkConfig, BalancerSdkSorConfig } from '@/types';\n\nconst NETWORKS_WITH_LINEAR_POOLS = [\n  Network.MAINNET,\n  Network.POLYGON,\n  Network.ROPSTEN,\n  Network.RINKEBY,\n  Network.GOERLI,\n  Network.KOVAN,\n];\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function mapPools(pools: any[]): SubgraphPoolBase[] {\n  return pools.map((pool) => ({\n    ...pool,\n    poolType: pool.poolType || '',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    tokens: (pool.tokens || []).map((token: any) => ({\n      ...token,\n      weight: token.weight || null,\n    })),\n    totalWeight: pool.totalWeight || undefined,\n    amp: pool.amp || undefined,\n    expiryTime: pool.expiryTime ? parseInt(pool.expiryTime) : undefined,\n    unitSeconds: pool.unitSeconds ? parseInt(pool.unitSeconds) : undefined,\n    principalToken: pool.principalToken || undefined,\n    baseToken: pool.baseToken || undefined,\n  }));\n}\n\nexport class SubgraphPoolDataService implements PoolDataService {\n  constructor(\n    private readonly client: SubgraphClient,\n    private readonly provider: Provider,\n    private readonly network: BalancerNetworkConfig,\n    private readonly sorConfig: BalancerSdkSorConfig\n  ) {}\n\n  public async getPools(): Promise<SubgraphPoolBase[]> {\n    const pools = this.supportsLinearPools\n      ? await this.getLinearPools()\n      : await this.getNonLinearPools();\n\n    const mapped = mapPools(pools);\n\n    if (this.sorConfig.fetchOnChainBalances === false) {\n      return mapped;\n    }\n\n    return getOnChainBalances(\n      mapped,\n      this.network.addresses.contracts.multicall,\n      this.network.addresses.contracts.vault,\n      this.provider\n    );\n  }\n\n  private get supportsLinearPools() {\n    return NETWORKS_WITH_LINEAR_POOLS.includes(this.network.chainId);\n  }\n\n  private async getLinearPools() {\n    const { pool0, pool1000 } = await this.client.Pools({\n      where: { swapEnabled: true, totalShares_gt: '0' },\n      orderBy: Pool_OrderBy.TotalLiquidity,\n      orderDirection: OrderDirection.Desc,\n    });\n\n    const pools = [...pool0, ...pool1000];\n\n    return pools;\n  }\n\n  private async getNonLinearPools() {\n    const { pools } = await this.client.PoolsWithoutLinear({\n      where: { swapEnabled: true, totalShares_gt: '0' },\n      orderBy: Pool_OrderBy.TotalLiquidity,\n      orderDirection: OrderDirection.Desc,\n      first: 1000,\n    });\n\n    return pools;\n  }\n}\n","import { TokenPriceService } from '@balancer-labs/sor';\nimport axios from 'axios';\n\nexport class CoingeckoTokenPriceService implements TokenPriceService {\n  constructor(private readonly chainId: number) {}\n\n  public async getNativeAssetPriceInToken(\n    tokenAddress: string\n  ): Promise<string> {\n    const ethPerToken = await this.getTokenPriceInNativeAsset(tokenAddress);\n\n    // We get the price of token in terms of ETH\n    // We want the price of 1 ETH in terms of the token base units\n    return `${1 / parseFloat(ethPerToken)}`;\n  }\n\n  /**\n   * @dev Assumes that the native asset has 18 decimals\n   * @param tokenAddress - the address of the token contract\n   * @returns the price of 1 ETH in terms of the token base units\n   */\n  async getTokenPriceInNativeAsset(tokenAddress: string): Promise<string> {\n    const endpoint = `https://api.coingecko.com/api/v3/simple/token_price/${this.platformId}?contract_addresses=${tokenAddress}&vs_currencies=${this.nativeAssetId}`;\n\n    const { data } = await axios.get(endpoint, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (data[tokenAddress.toLowerCase()][this.nativeAssetId] === undefined) {\n      throw Error('No price returned from Coingecko');\n    }\n\n    return data[tokenAddress.toLowerCase()][this.nativeAssetId];\n  }\n\n  private get platformId(): string {\n    switch (this.chainId) {\n      case 1:\n        return 'ethereum';\n      case 42:\n        return 'ethereum';\n      case 137:\n        return 'polygon-pos';\n      case 42161:\n        return 'arbitrum-one';\n    }\n\n    return '2';\n  }\n\n  private get nativeAssetId(): string {\n    switch (this.chainId) {\n      case 1:\n        return 'eth';\n      case 42:\n        return 'eth';\n      case 137:\n        return '';\n      case 42161:\n        return 'eth';\n    }\n\n    return '';\n  }\n}\n","import { TokenPriceService } from '@balancer-labs/sor';\nimport { SubgraphClient } from '@/modules/subgraph/subgraph';\nimport { keyBy } from 'lodash';\n\nexport class SubgraphTokenPriceService implements TokenPriceService {\n  private readonly weth: string;\n\n  constructor(private readonly client: SubgraphClient, weth: string) {\n    //the subgraph addresses are all toLowerCase\n    this.weth = weth.toLowerCase();\n  }\n\n  public async getNativeAssetPriceInToken(\n    tokenAddress: string\n  ): Promise<string> {\n    const ethPerToken = await this.getLatestPriceInEthFromSubgraph(\n      tokenAddress\n    );\n\n    if (!ethPerToken) {\n      throw Error('No price found in the subgraph');\n    }\n\n    // We want the price of 1 ETH in terms of the token base units\n    return `${1 / ethPerToken}`;\n  }\n\n  public async getLatestPriceInEthFromSubgraph(\n    tokenAddress: string\n  ): Promise<number | null> {\n    tokenAddress = tokenAddress.toLowerCase();\n\n    const { latestPrices } = await this.client.TokenLatestPrices({\n      where: { asset_in: [tokenAddress, this.weth] },\n    });\n    const pricesKeyedOnId = keyBy(latestPrices, 'id');\n\n    //the ids are set as ${asset}-${pricingAsset}\n    //first try to find an exact match\n    if (pricesKeyedOnId[`${tokenAddress}-${this.weth}`]) {\n      return parseFloat(pricesKeyedOnId[`${tokenAddress}-${this.weth}`].price);\n    }\n\n    //no exact match, try to traverse the path\n    const matchingLatestPrices = latestPrices.filter(\n      (price) => price.asset === tokenAddress\n    );\n\n    //pick the first one we match on.\n    //There is no timestamp on latestPrice, should get introduced to allow for sorting by latest\n    for (const tokenPrice of matchingLatestPrices) {\n      const pricingAssetPricedInEth =\n        pricesKeyedOnId[`${tokenPrice.pricingAsset}-${this.weth}`];\n\n      //1 BAL = 20 USDC, 1 USDC = 0.00025 ETH, 1 BAL = 20 * 0.00025\n      if (pricingAssetPricedInEth) {\n        return (\n          parseFloat(tokenPrice.price) *\n          parseFloat(pricingAssetPricedInEth.price)\n        );\n      }\n    }\n\n    return null;\n  }\n}\n","/**\n * Weekly Bal emissions are fixed / year according to:\n * https://docs.google.com/spreadsheets/d/1FY0gi596YWBOTeu_mrxhWcdF74SwKMNhmu0qJVgs0KI/edit#gid=0\n *\n * Using regular numbers for simplicity assuming frontend use only.\n *\n * Calculation source\n * https://github.com/balancer-labs/balancer-v2-monorepo/blob/master/pkg/liquidity-mining/contracts/BalancerTokenAdmin.sol\n */\n\nconst INITIAL_RATE = 145000;\nconst START_EPOCH_TIME = 1648465251;\nconst RATE_REDUCTION_TIME = 365 * 86400;\nconst RATE_REDUCTION_COEFFICIENT = 2 ** (1 / 4);\n\n/**\n * Weekly BAL emissions\n *\n * @param currentTimestamp used to get the epoch\n * @returns BAL emitted in a week\n */\nexport const weekly = (\n  currentTimestamp: number = Math.round(new Date().getTime() / 1000)\n): number => {\n  const miningEpoch = Math.floor(\n    (currentTimestamp - START_EPOCH_TIME) / RATE_REDUCTION_TIME\n  );\n\n  const rate = INITIAL_RATE * RATE_REDUCTION_COEFFICIENT ** -miningEpoch;\n\n  return rate;\n};\n\n/**\n * Total BAL emitted in epoch (1 year)\n *\n * @param epoch starting from 0 for the first year of emissions\n * @returns BAL emitted in epoch\n */\nexport const total = (epoch: number): number => {\n  const weeklyRate = INITIAL_RATE * RATE_REDUCTION_COEFFICIENT ** -epoch;\n  const dailyRate = weeklyRate / 7;\n\n  return dailyRate * 365;\n};\n\n/**\n * Total BAL emitted between two timestamps\n *\n * @param start starting timestamp\n * @param end ending timestamp\n * @returns BAL emitted in period\n */\nexport const between = (start: number, end: number): number => {\n  if (start < START_EPOCH_TIME) {\n    throw 'start timestamp before emission schedule deployment';\n  }\n  if (end < start) {\n    throw 'cannot finish before starting';\n  }\n\n  let totalEmissions = 0;\n\n  const startingEpoch = Math.floor(\n    (start - START_EPOCH_TIME) / RATE_REDUCTION_TIME\n  );\n  const endingEpoch = Math.floor(\n    (end - START_EPOCH_TIME) / RATE_REDUCTION_TIME\n  );\n\n  for (\n    let currentEpoch = startingEpoch;\n    currentEpoch <= endingEpoch;\n    currentEpoch++\n  ) {\n    totalEmissions += total(currentEpoch);\n  }\n\n  // Subtract what isn't emmited within the time range\n  const startingEpochEnd =\n    START_EPOCH_TIME + RATE_REDUCTION_TIME * (startingEpoch + 1);\n  const endingEpochStart = START_EPOCH_TIME + RATE_REDUCTION_TIME * endingEpoch;\n\n  const secondsInStartingEpoch = startingEpochEnd - start;\n  const secondsInEndingEpoch = end - endingEpochStart;\n\n  totalEmissions -=\n    (total(startingEpoch) * (RATE_REDUCTION_TIME - secondsInStartingEpoch)) /\n    RATE_REDUCTION_TIME;\n  totalEmissions -=\n    (total(endingEpoch) * (RATE_REDUCTION_TIME - secondsInEndingEpoch)) /\n    RATE_REDUCTION_TIME;\n\n  return totalEmissions;\n};\n","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function decode(textData) {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\nexport function encode(data) {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map","export const version = \"properties/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n// Crawl up the constructor chain to find a static method\nexport function getStatic(ctor, key) {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof (ctor.prototype) !== \"object\") {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\nexport function resolveProperties(object) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const promises = Object.keys(object).map((key) => {\n            const value = object[key];\n            return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n        });\n        const results = yield Promise.all(promises);\n        return results.reduce((accum, result) => {\n            accum[(result.key)] = result.value;\n            return accum;\n        }, {});\n    });\n}\nexport function checkProperties(object, properties) {\n    if (!object || typeof (object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\nexport function shallowCopy(object) {\n    const result = {};\n    for (const key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nconst opaque = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\nfunction _isFrozen(object) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return true;\n    }\n    if (Array.isArray(object) || typeof (object) === \"object\") {\n        if (!Object.isFrozen(object)) {\n            return false;\n        }\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value = null;\n            try {\n                value = object[keys[i]];\n            }\n            catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n            if (!_isFrozen(value)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object) {\n    if (_isFrozen(object)) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n    if (typeof (object) === \"object\") {\n        const result = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n        return result;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\nexport function deepCopy(object) {\n    return _deepCopy(object);\n}\nexport class Description {\n    constructor(info) {\n        for (const key in info) {\n            this[key] = deepCopy(info[key]);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nexport class BaseX {\n    constructor(alphabet) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n        defineReadOnly(this, \"_alphabetMap\", {});\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    encode(value) {\n        let source = arrayify(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        let digits = [0];\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        let string = \"\";\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    }\n    decode(value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        let bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return arrayify(new Uint8Array(bytes.reverse()));\n    }\n}\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nexport { Base32, Base58 };\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","\"use strict\";\nimport sha3 from \"js-sha3\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function keccak256(data) {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n//# sourceMappingURL=index.js.map","export const version = \"strings/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nexport var UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n;\nexport var Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n;\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n// Common error handing strategies\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    bytes = arrayify(bytes);\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return arrayify(result);\n}\n;\nfunction escapeChar(value) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nexport function _toEscapedUtf8String(bytes, onError) {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nexport function _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nexport function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport function id(text) {\n    return keccak256(toUtf8Bytes(text));\n}\n//# sourceMappingURL=id.js.map","export const version = \"hash/5.6.1\";\n//# sourceMappingURL=_version.js.map","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nexport function isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    let current = name;\n    let result = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        current = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\nexport function dnsEncode(name) {\n    return hexlify(concat(name.split(\".\").map((comp) => {\n        // We jam in an _ prefix to fill in with the length later\n        // Note: Nameprep throws if the component is over 63 bytes\n        const bytes = toUtf8Bytes(\"_\" + nameprep(comp));\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    }))) + \"00\";\n}\n//# sourceMappingURL=namehash.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { id } from \"./id\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","export var SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map","export const version = \"sha2/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import BN from 'bn.js';\nimport hash from 'hash.js';\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction getDefaultExportFromNamespaceIfPresent (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n}\n\nfunction getDefaultExportFromNamespaceIfNotNamed (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n}\n\nfunction getAugmentedNamespace(n) {\n\tif (n.__esModule) return n;\n\tvar a = Object.defineProperty({}, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\nvar utils_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n});\n\nvar utils_1$1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar utils = exports;\n\n\n\n\nutils.assert = minimalisticAssert;\nutils.toArray = utils_1.toArray;\nutils.zero2 = utils_1.zero2;\nutils.toHex = utils_1.toHex;\nutils.encode = utils_1.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n});\n\n'use strict';\n\n\n\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert$1(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert$1(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert$1(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}\n});\n\n'use strict';\n\n\n\n\n\n\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits_browser(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits_browser(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits_browser(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar curve = exports;\n\ncurve.base = base;\ncurve.short = short_1;\ncurve.mont = /*RicMoo:ethers:require(./mont)*/(null);\ncurve.edwards = /*RicMoo:ethers:require(./edwards)*/(null);\n});\n\nvar curves_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar curves = exports;\n\n\n\n\n\nvar assert = utils_1$1.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve_1.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve_1.edwards(options);\n  else\n    this.curve = new curve_1.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/(null).crash();\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n});\n\n'use strict';\n\n\n\n\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n\n  minimalisticAssert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\n'use strict';\n\n\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n'use strict';\n\n\n\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\n'use strict';\n\n\n\n\n\nvar rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nvar assert$5 = utils_1$1.assert;\n\n\n\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options),\n      'Unknown curve ' + options);\n\n    options = curves_1[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves_1.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex');\n\n  // Perform primitive values validation\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature$1.r;\n  var s = signature$1.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null)\n    return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\nvar elliptic_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = /*RicMoo:ethers*/{ version: \"6.5.4\" }.version;\nelliptic.utils = utils_1$1;\nelliptic.rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nelliptic.curve = curve_1;\nelliptic.curves = curves_1;\n\n// Protocols\nelliptic.ec = ec;\nelliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/(null);\n});\n\nvar EC$1 = elliptic_1.ec;\n\nexport { EC$1 as EC };\n//# sourceMappingURL=elliptic.js.map\n","export const version = \"signing-key/5.6.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { EC } from \"./elliptic\";\nimport { arrayify, hexDataLength, hexlify, hexZeroPad, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nlet _curve = null;\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\nexport class SigningKey {\n    constructor(privateKey) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n    _addPoint(other) {\n        const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 = getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n    signDigest(digest) {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        });\n    }\n    computeSharedSecret(otherKey) {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n    static isSigningKey(value) {\n        return !!(value && value._isSigningKey);\n    }\n}\nexport function recoverPublicKey(digest, signature) {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\nexport function computePublicKey(key, compressed) {\n    const bytes = arrayify(key);\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n    }\n    else if (bytes.length === 33) {\n        if (compressed) {\n            return hexlify(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n    }\n    else if (bytes.length === 65) {\n        if (!compressed) {\n            return hexlify(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n//# sourceMappingURL=index.js.map","export const version = \"rlp/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { arrayify, hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n    const data = Array.prototype.slice.call(arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nexport function encode(object) {\n    return hexlify(_encode(object));\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\nexport function decode(data) {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n//# sourceMappingURL=index.js.map","export const version = \"transactions/5.6.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport var TransactionTypes;\n(function (TransactionTypes) {\n    TransactionTypes[TransactionTypes[\"legacy\"] = 0] = \"legacy\";\n    TransactionTypes[TransactionTypes[\"eip2930\"] = 1] = \"eip2930\";\n    TransactionTypes[TransactionTypes[\"eip1559\"] = 2] = \"eip1559\";\n})(TransactionTypes || (TransactionTypes = {}));\n;\n///////////////////////////////\nfunction handleAddress(value) {\n    if (value === \"0x\") {\n        return null;\n    }\n    return getAddress(value);\n}\nfunction handleNumber(value) {\n    if (value === \"0x\") {\n        return Zero;\n    }\n    return BigNumber.from(value);\n}\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\", maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\", length: 20 },\n    { name: \"value\", maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, type: true, value: true\n};\nexport function computeAddress(key) {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\nexport function recoverAddress(digest, signature) {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\nfunction formatNumber(value, name) {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\nfunction accessSetify(addr, storageKeys) {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${addr}:${index}]`, storageKey);\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\nexport function accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${index}]`, set);\n                }\n                return accessSetify(set[0], set[1]);\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    const result = Object.keys(value).map((addr) => {\n        const storageKeys = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\nfunction formatAccessList(value) {\n    return accessListify(value).map((set) => [set.address, set.storageKeys]);\n}\nfunction _serializeEip1559(transaction, signature) {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n    const fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n    return hexConcat([\"0x02\", RLP.encode(fields)]);\n}\nfunction _serializeEip2930(transaction, signature) {\n    const fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n    return hexConcat([\"0x01\", RLP.encode(fields)]);\n}\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction, signature) {\n    checkProperties(transaction, allowedTransactionKeys);\n    const raw = [];\n    transactionFields.forEach(function (fieldInfo) {\n        let value = transaction[fieldInfo.name] || ([]);\n        const options = {};\n        if (fieldInfo.numeric) {\n            options.hexPad = \"left\";\n        }\n        value = arrayify(hexlify(value, options));\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n            }\n        }\n        raw.push(hexlify(value));\n    });\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n        if (typeof (chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n    }\n    else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam;\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n            logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    }\n    else if (sig.v !== v) {\n        logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n    return RLP.encode(raw);\n}\nexport function serialize(transaction, signature) {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n    return logger.throwError(`unsupported transaction type: ${transaction.type}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\nfunction _parseEipSignature(tx, fields, serialize) {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) {\n            throw new Error(\"bad recid\");\n        }\n        tx.v = recid;\n    }\n    catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    }\n    catch (error) { }\n}\nfunction _parseEip1559(payload) {\n    const transaction = RLP.decode(payload.slice(1));\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx = {\n        type: 2,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        maxFeePerGas: maxFeePerGas,\n        gasPrice: null,\n        gasLimit: handleNumber(transaction[4]),\n        to: handleAddress(transaction[5]),\n        value: handleNumber(transaction[6]),\n        data: transaction[7],\n        accessList: accessListify(transaction[8]),\n    };\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) {\n        return tx;\n    }\n    tx.hash = keccak256(payload);\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n    return tx;\n}\nfunction _parseEip2930(payload) {\n    const transaction = RLP.decode(payload.slice(1));\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n    const tx = {\n        type: 1,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        gasPrice: handleNumber(transaction[2]),\n        gasLimit: handleNumber(transaction[3]),\n        to: handleAddress(transaction[4]),\n        value: handleNumber(transaction[5]),\n        data: transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) {\n        return tx;\n    }\n    tx.hash = keccak256(payload);\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n    return tx;\n}\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction) {\n    const transaction = RLP.decode(rawTransaction);\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n    const tx = {\n        nonce: handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to: handleAddress(transaction[3]),\n        value: handleNumber(transaction[4]),\n        data: transaction[5],\n        chainId: 0\n    };\n    // Legacy unsigned transaction\n    if (transaction.length === 6) {\n        return tx;\n    }\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n    }\n    catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n    }\n    else {\n        // Signed Transaction\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) {\n            tx.chainId = 0;\n        }\n        let recoveryParam = tx.v - 27;\n        const raw = transaction.slice(0, 6);\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        }\n        catch (error) { }\n        tx.hash = keccak256(rawTransaction);\n    }\n    tx.type = null;\n    return tx;\n}\nexport function parse(rawTransaction) {\n    const payload = arrayify(rawTransaction);\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) {\n        return _parse(payload);\n    }\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n    return logger.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n//# sourceMappingURL=index.js.map","export const version = \"wordlists/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n//# sourceMappingURL=wordlists.js.map","export const version = \"hdnode/5.6.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","export const version = \"json-wallets/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n","export const version = \"random/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst anyGlobal = getGlobal();\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map","\"use strict\";\nexport function shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n//# sourceMappingURL=index.js.map","export const version = \"solidity/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map","export const version = \"abstract-provider/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nexport class ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\nexport class BlockForkEvent extends ForkEvent {\n    constructor(blockHash, expiry) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\nexport class TransactionForkEvent extends ForkEvent {\n    constructor(hash, expiry) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\nexport class TransactionOrderForkEvent extends ForkEvent {\n    constructor(beforeHash, afterHash, expiry) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nexport class Provider {\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { block, gasPrice } = yield resolveProperties({\n                block: this.getBlock(\"latest\"),\n                gasPrice: this.getGasPrice().catch((error) => {\n                    // @TODO: Why is this now failing on Calaveras?\n                    //console.log(error);\n                    return null;\n                })\n            });\n            let maxFeePerGas = null, maxPriorityFeePerGas = null;\n            if (block && block.baseFeePerGas) {\n                // We may want to compute this more accurately in the future,\n                // using the formula \"check if the base fee is correct\".\n                // See: https://eips.ethereum.org/EIPS/eip-1559\n                maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n            }\n            return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n        });\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"wallet/5.6.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map","export const version = \"web/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n        };\n        if (options.skipFetchSetup !== true) {\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\n            request.redirect = \"follow\"; // manual, *follow, error\n            request.referrer = \"client\"; // no-referrer, *client\n        }\n        ;\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getUrl } from \"./geturl\";\nfunction staller(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nfunction bodyify(value, type) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value) === \"string\") {\n        return value;\n    }\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            }\n            catch (error) { }\n            ;\n        }\n        return hexlify(value);\n    }\n    return value;\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData(connection, body, processFunc) {\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof (connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit : 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n    const throttleCallback = ((typeof (connection) === \"object\") ? connection.throttleCallback : null);\n    const throttleSlotInterval = ((typeof (connection) === \"object\" && typeof (connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval : 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n    const errorPassThrough = ((typeof (connection) === \"object\") ? !!(connection.errorPassThrough) : false);\n    const headers = {};\n    let url = null;\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options = {\n        method: \"GET\",\n    };\n    let allow304 = false;\n    let timeout = 2 * 60 * 1000;\n    if (typeof (connection) === \"string\") {\n        url = connection;\n    }\n    else if (typeof (connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n        options.allowGzip = !!connection.allowGzip;\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n    }\n    const reData = new RegExp(\"^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData) : null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": dataMatch[1] },\n                body: base64Decode(dataMatch[2])\n            };\n            let result = response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(result);\n        }\n        catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n    const flatHeaders = {};\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n    const runningTimeout = (function () {\n        let timer = null;\n        const promise = new Promise(function (resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n        const cancel = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        return { promise, cancel };\n    })();\n    const runningFetch = (function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < attemptLimit; attempt++) {\n                let response = null;\n                try {\n                    response = yield getUrl(url, options);\n                    if (attempt < attemptLimit) {\n                        if (response.statusCode === 301 || response.statusCode === 302) {\n                            // Redirection; for now we only support absolute locataions\n                            const location = response.headers.location || \"\";\n                            if (options.method === \"GET\" && location.match(/^https:/)) {\n                                url = response.headers.location;\n                                continue;\n                            }\n                        }\n                        else if (response.statusCode === 429) {\n                            // Exponential back-off throttling\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                let stall = 0;\n                                const retryAfter = response.headers[\"retry-after\"];\n                                if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                    stall = parseInt(retryAfter) * 1000;\n                                }\n                                else {\n                                    stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                }\n                                //console.log(\"Stalling 429\");\n                                yield staller(stall);\n                                continue;\n                            }\n                        }\n                    }\n                }\n                catch (error) {\n                    response = error.response;\n                    if (response == null) {\n                        runningTimeout.cancel();\n                        logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            serverError: error,\n                            url: url\n                        });\n                    }\n                }\n                let body = response.body;\n                if (allow304 && response.statusCode === 304) {\n                    body = null;\n                }\n                else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n                if (processFunc) {\n                    try {\n                        const result = yield processFunc(body, response);\n                        runningTimeout.cancel();\n                        return result;\n                    }\n                    catch (error) {\n                        // Allow the processFunc to trigger a throttle\n                        if (error.throttleRetry && attempt < attemptLimit) {\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                //console.log(\"Stalling callback\");\n                                yield staller(timeout);\n                                continue;\n                            }\n                        }\n                        runningTimeout.cancel();\n                        logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                            body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                            error: error,\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            url: url\n                        });\n                    }\n                }\n                runningTimeout.cancel();\n                // If we had a processFunc, it either returned a T or threw above.\n                // The \"body\" is now a Uint8Array.\n                return body;\n            }\n            return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n            });\n        });\n    })();\n    return Promise.race([runningTimeout.promise, runningFetch]);\n}\nexport function fetchJson(connection, json, processFunc) {\n    let processJsonFunc = (value, response) => {\n        let result = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            }\n            catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n        return result;\n    };\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n        // Create a connection with the content-type set for JSON\n        const updated = (typeof (connection) === \"string\") ? ({ url: connection }) : shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        }\n        else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n    return _fetchData(connection, body, processJsonFunc);\n}\nexport function poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = shallowCopy(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        let timer = null;\n        let done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = () => {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) {\n                    reject(new Error(\"timeout\"));\n                }\n            }, options.timeout);\n        }\n        const retryLimit = options.retryLimit;\n        let attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) {\n                            reject(new Error(\"retry limit reached\"));\n                        }\n                        return;\n                    }\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatBytes32String = exports.Utf8ErrorFuncs = exports.toUtf8String = exports.toUtf8CodePoints = exports.toUtf8Bytes = exports._toEscapedUtf8String = exports.nameprep = exports.hexDataSlice = exports.hexDataLength = exports.hexZeroPad = exports.hexValue = exports.hexStripZeros = exports.hexConcat = exports.isHexString = exports.hexlify = exports.base64 = exports.base58 = exports.TransactionDescription = exports.LogDescription = exports.Interface = exports.SigningKey = exports.HDNode = exports.defaultPath = exports.isBytesLike = exports.isBytes = exports.zeroPad = exports.stripZeros = exports.concat = exports.arrayify = exports.shallowCopy = exports.resolveProperties = exports.getStatic = exports.defineReadOnly = exports.deepCopy = exports.checkProperties = exports.poll = exports.fetchJson = exports._fetchData = exports.RLP = exports.Logger = exports.checkResultErrors = exports.FormatTypes = exports.ParamType = exports.FunctionFragment = exports.EventFragment = exports.ErrorFragment = exports.ConstructorFragment = exports.Fragment = exports.defaultAbiCoder = exports.AbiCoder = void 0;\nexports.Indexed = exports.Utf8ErrorReason = exports.UnicodeNormalizationForm = exports.SupportedAlgorithm = exports.mnemonicToSeed = exports.isValidMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.getAccountPath = exports.verifyTypedData = exports.verifyMessage = exports.recoverPublicKey = exports.computePublicKey = exports.recoverAddress = exports.computeAddress = exports.getJsonWalletAddress = exports.TransactionTypes = exports.serializeTransaction = exports.parseTransaction = exports.accessListify = exports.joinSignature = exports.splitSignature = exports.soliditySha256 = exports.solidityKeccak256 = exports.solidityPack = exports.shuffled = exports.randomBytes = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.computeHmac = exports.commify = exports.parseUnits = exports.formatUnits = exports.parseEther = exports.formatEther = exports.isAddress = exports.getCreate2Address = exports.getContractAddress = exports.getIcapAddress = exports.getAddress = exports._TypedDataEncoder = exports.id = exports.isValidName = exports.namehash = exports.hashMessage = exports.dnsEncode = exports.parseBytes32String = void 0;\nvar abi_1 = require(\"@ethersproject/abi\");\nObject.defineProperty(exports, \"AbiCoder\", { enumerable: true, get: function () { return abi_1.AbiCoder; } });\nObject.defineProperty(exports, \"checkResultErrors\", { enumerable: true, get: function () { return abi_1.checkResultErrors; } });\nObject.defineProperty(exports, \"ConstructorFragment\", { enumerable: true, get: function () { return abi_1.ConstructorFragment; } });\nObject.defineProperty(exports, \"defaultAbiCoder\", { enumerable: true, get: function () { return abi_1.defaultAbiCoder; } });\nObject.defineProperty(exports, \"ErrorFragment\", { enumerable: true, get: function () { return abi_1.ErrorFragment; } });\nObject.defineProperty(exports, \"EventFragment\", { enumerable: true, get: function () { return abi_1.EventFragment; } });\nObject.defineProperty(exports, \"FormatTypes\", { enumerable: true, get: function () { return abi_1.FormatTypes; } });\nObject.defineProperty(exports, \"Fragment\", { enumerable: true, get: function () { return abi_1.Fragment; } });\nObject.defineProperty(exports, \"FunctionFragment\", { enumerable: true, get: function () { return abi_1.FunctionFragment; } });\nObject.defineProperty(exports, \"Indexed\", { enumerable: true, get: function () { return abi_1.Indexed; } });\nObject.defineProperty(exports, \"Interface\", { enumerable: true, get: function () { return abi_1.Interface; } });\nObject.defineProperty(exports, \"LogDescription\", { enumerable: true, get: function () { return abi_1.LogDescription; } });\nObject.defineProperty(exports, \"ParamType\", { enumerable: true, get: function () { return abi_1.ParamType; } });\nObject.defineProperty(exports, \"TransactionDescription\", { enumerable: true, get: function () { return abi_1.TransactionDescription; } });\nvar address_1 = require(\"@ethersproject/address\");\nObject.defineProperty(exports, \"getAddress\", { enumerable: true, get: function () { return address_1.getAddress; } });\nObject.defineProperty(exports, \"getCreate2Address\", { enumerable: true, get: function () { return address_1.getCreate2Address; } });\nObject.defineProperty(exports, \"getContractAddress\", { enumerable: true, get: function () { return address_1.getContractAddress; } });\nObject.defineProperty(exports, \"getIcapAddress\", { enumerable: true, get: function () { return address_1.getIcapAddress; } });\nObject.defineProperty(exports, \"isAddress\", { enumerable: true, get: function () { return address_1.isAddress; } });\nvar base64 = __importStar(require(\"@ethersproject/base64\"));\nexports.base64 = base64;\nvar basex_1 = require(\"@ethersproject/basex\");\nObject.defineProperty(exports, \"base58\", { enumerable: true, get: function () { return basex_1.Base58; } });\nvar bytes_1 = require(\"@ethersproject/bytes\");\nObject.defineProperty(exports, \"arrayify\", { enumerable: true, get: function () { return bytes_1.arrayify; } });\nObject.defineProperty(exports, \"concat\", { enumerable: true, get: function () { return bytes_1.concat; } });\nObject.defineProperty(exports, \"hexConcat\", { enumerable: true, get: function () { return bytes_1.hexConcat; } });\nObject.defineProperty(exports, \"hexDataSlice\", { enumerable: true, get: function () { return bytes_1.hexDataSlice; } });\nObject.defineProperty(exports, \"hexDataLength\", { enumerable: true, get: function () { return bytes_1.hexDataLength; } });\nObject.defineProperty(exports, \"hexlify\", { enumerable: true, get: function () { return bytes_1.hexlify; } });\nObject.defineProperty(exports, \"hexStripZeros\", { enumerable: true, get: function () { return bytes_1.hexStripZeros; } });\nObject.defineProperty(exports, \"hexValue\", { enumerable: true, get: function () { return bytes_1.hexValue; } });\nObject.defineProperty(exports, \"hexZeroPad\", { enumerable: true, get: function () { return bytes_1.hexZeroPad; } });\nObject.defineProperty(exports, \"isBytes\", { enumerable: true, get: function () { return bytes_1.isBytes; } });\nObject.defineProperty(exports, \"isBytesLike\", { enumerable: true, get: function () { return bytes_1.isBytesLike; } });\nObject.defineProperty(exports, \"isHexString\", { enumerable: true, get: function () { return bytes_1.isHexString; } });\nObject.defineProperty(exports, \"joinSignature\", { enumerable: true, get: function () { return bytes_1.joinSignature; } });\nObject.defineProperty(exports, \"zeroPad\", { enumerable: true, get: function () { return bytes_1.zeroPad; } });\nObject.defineProperty(exports, \"splitSignature\", { enumerable: true, get: function () { return bytes_1.splitSignature; } });\nObject.defineProperty(exports, \"stripZeros\", { enumerable: true, get: function () { return bytes_1.stripZeros; } });\nvar hash_1 = require(\"@ethersproject/hash\");\nObject.defineProperty(exports, \"_TypedDataEncoder\", { enumerable: true, get: function () { return hash_1._TypedDataEncoder; } });\nObject.defineProperty(exports, \"dnsEncode\", { enumerable: true, get: function () { return hash_1.dnsEncode; } });\nObject.defineProperty(exports, \"hashMessage\", { enumerable: true, get: function () { return hash_1.hashMessage; } });\nObject.defineProperty(exports, \"id\", { enumerable: true, get: function () { return hash_1.id; } });\nObject.defineProperty(exports, \"isValidName\", { enumerable: true, get: function () { return hash_1.isValidName; } });\nObject.defineProperty(exports, \"namehash\", { enumerable: true, get: function () { return hash_1.namehash; } });\nvar hdnode_1 = require(\"@ethersproject/hdnode\");\nObject.defineProperty(exports, \"defaultPath\", { enumerable: true, get: function () { return hdnode_1.defaultPath; } });\nObject.defineProperty(exports, \"entropyToMnemonic\", { enumerable: true, get: function () { return hdnode_1.entropyToMnemonic; } });\nObject.defineProperty(exports, \"getAccountPath\", { enumerable: true, get: function () { return hdnode_1.getAccountPath; } });\nObject.defineProperty(exports, \"HDNode\", { enumerable: true, get: function () { return hdnode_1.HDNode; } });\nObject.defineProperty(exports, \"isValidMnemonic\", { enumerable: true, get: function () { return hdnode_1.isValidMnemonic; } });\nObject.defineProperty(exports, \"mnemonicToEntropy\", { enumerable: true, get: function () { return hdnode_1.mnemonicToEntropy; } });\nObject.defineProperty(exports, \"mnemonicToSeed\", { enumerable: true, get: function () { return hdnode_1.mnemonicToSeed; } });\nvar json_wallets_1 = require(\"@ethersproject/json-wallets\");\nObject.defineProperty(exports, \"getJsonWalletAddress\", { enumerable: true, get: function () { return json_wallets_1.getJsonWalletAddress; } });\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nObject.defineProperty(exports, \"keccak256\", { enumerable: true, get: function () { return keccak256_1.keccak256; } });\nvar logger_1 = require(\"@ethersproject/logger\");\nObject.defineProperty(exports, \"Logger\", { enumerable: true, get: function () { return logger_1.Logger; } });\nvar sha2_1 = require(\"@ethersproject/sha2\");\nObject.defineProperty(exports, \"computeHmac\", { enumerable: true, get: function () { return sha2_1.computeHmac; } });\nObject.defineProperty(exports, \"ripemd160\", { enumerable: true, get: function () { return sha2_1.ripemd160; } });\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha2_1.sha256; } });\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha2_1.sha512; } });\nvar solidity_1 = require(\"@ethersproject/solidity\");\nObject.defineProperty(exports, \"solidityKeccak256\", { enumerable: true, get: function () { return solidity_1.keccak256; } });\nObject.defineProperty(exports, \"solidityPack\", { enumerable: true, get: function () { return solidity_1.pack; } });\nObject.defineProperty(exports, \"soliditySha256\", { enumerable: true, get: function () { return solidity_1.sha256; } });\nvar random_1 = require(\"@ethersproject/random\");\nObject.defineProperty(exports, \"randomBytes\", { enumerable: true, get: function () { return random_1.randomBytes; } });\nObject.defineProperty(exports, \"shuffled\", { enumerable: true, get: function () { return random_1.shuffled; } });\nvar properties_1 = require(\"@ethersproject/properties\");\nObject.defineProperty(exports, \"checkProperties\", { enumerable: true, get: function () { return properties_1.checkProperties; } });\nObject.defineProperty(exports, \"deepCopy\", { enumerable: true, get: function () { return properties_1.deepCopy; } });\nObject.defineProperty(exports, \"defineReadOnly\", { enumerable: true, get: function () { return properties_1.defineReadOnly; } });\nObject.defineProperty(exports, \"getStatic\", { enumerable: true, get: function () { return properties_1.getStatic; } });\nObject.defineProperty(exports, \"resolveProperties\", { enumerable: true, get: function () { return properties_1.resolveProperties; } });\nObject.defineProperty(exports, \"shallowCopy\", { enumerable: true, get: function () { return properties_1.shallowCopy; } });\nvar RLP = __importStar(require(\"@ethersproject/rlp\"));\nexports.RLP = RLP;\nvar signing_key_1 = require(\"@ethersproject/signing-key\");\nObject.defineProperty(exports, \"computePublicKey\", { enumerable: true, get: function () { return signing_key_1.computePublicKey; } });\nObject.defineProperty(exports, \"recoverPublicKey\", { enumerable: true, get: function () { return signing_key_1.recoverPublicKey; } });\nObject.defineProperty(exports, \"SigningKey\", { enumerable: true, get: function () { return signing_key_1.SigningKey; } });\nvar strings_1 = require(\"@ethersproject/strings\");\nObject.defineProperty(exports, \"formatBytes32String\", { enumerable: true, get: function () { return strings_1.formatBytes32String; } });\nObject.defineProperty(exports, \"nameprep\", { enumerable: true, get: function () { return strings_1.nameprep; } });\nObject.defineProperty(exports, \"parseBytes32String\", { enumerable: true, get: function () { return strings_1.parseBytes32String; } });\nObject.defineProperty(exports, \"_toEscapedUtf8String\", { enumerable: true, get: function () { return strings_1._toEscapedUtf8String; } });\nObject.defineProperty(exports, \"toUtf8Bytes\", { enumerable: true, get: function () { return strings_1.toUtf8Bytes; } });\nObject.defineProperty(exports, \"toUtf8CodePoints\", { enumerable: true, get: function () { return strings_1.toUtf8CodePoints; } });\nObject.defineProperty(exports, \"toUtf8String\", { enumerable: true, get: function () { return strings_1.toUtf8String; } });\nObject.defineProperty(exports, \"Utf8ErrorFuncs\", { enumerable: true, get: function () { return strings_1.Utf8ErrorFuncs; } });\nvar transactions_1 = require(\"@ethersproject/transactions\");\nObject.defineProperty(exports, \"accessListify\", { enumerable: true, get: function () { return transactions_1.accessListify; } });\nObject.defineProperty(exports, \"computeAddress\", { enumerable: true, get: function () { return transactions_1.computeAddress; } });\nObject.defineProperty(exports, \"parseTransaction\", { enumerable: true, get: function () { return transactions_1.parse; } });\nObject.defineProperty(exports, \"recoverAddress\", { enumerable: true, get: function () { return transactions_1.recoverAddress; } });\nObject.defineProperty(exports, \"serializeTransaction\", { enumerable: true, get: function () { return transactions_1.serialize; } });\nObject.defineProperty(exports, \"TransactionTypes\", { enumerable: true, get: function () { return transactions_1.TransactionTypes; } });\nvar units_1 = require(\"@ethersproject/units\");\nObject.defineProperty(exports, \"commify\", { enumerable: true, get: function () { return units_1.commify; } });\nObject.defineProperty(exports, \"formatEther\", { enumerable: true, get: function () { return units_1.formatEther; } });\nObject.defineProperty(exports, \"parseEther\", { enumerable: true, get: function () { return units_1.parseEther; } });\nObject.defineProperty(exports, \"formatUnits\", { enumerable: true, get: function () { return units_1.formatUnits; } });\nObject.defineProperty(exports, \"parseUnits\", { enumerable: true, get: function () { return units_1.parseUnits; } });\nvar wallet_1 = require(\"@ethersproject/wallet\");\nObject.defineProperty(exports, \"verifyMessage\", { enumerable: true, get: function () { return wallet_1.verifyMessage; } });\nObject.defineProperty(exports, \"verifyTypedData\", { enumerable: true, get: function () { return wallet_1.verifyTypedData; } });\nvar web_1 = require(\"@ethersproject/web\");\nObject.defineProperty(exports, \"_fetchData\", { enumerable: true, get: function () { return web_1._fetchData; } });\nObject.defineProperty(exports, \"fetchJson\", { enumerable: true, get: function () { return web_1.fetchJson; } });\nObject.defineProperty(exports, \"poll\", { enumerable: true, get: function () { return web_1.poll; } });\n////////////////////////\n// Enums\nvar sha2_2 = require(\"@ethersproject/sha2\");\nObject.defineProperty(exports, \"SupportedAlgorithm\", { enumerable: true, get: function () { return sha2_2.SupportedAlgorithm; } });\nvar strings_2 = require(\"@ethersproject/strings\");\nObject.defineProperty(exports, \"UnicodeNormalizationForm\", { enumerable: true, get: function () { return strings_2.UnicodeNormalizationForm; } });\nObject.defineProperty(exports, \"Utf8ErrorReason\", { enumerable: true, get: function () { return strings_2.Utf8ErrorReason; } });\n//# sourceMappingURL=utils.js.map","import { Interface } from '@ethersproject/abi';\nimport { Provider } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\nimport { formatUnits, getAddress } from 'ethers/lib/utils';\nimport { Multicall } from '@/modules/contracts/multicall';\n\nconst gaugeControllerInterface = new Interface([\n  'function gauge_relative_weight(address gauge, uint timestamp) view returns (uint)',\n]);\n\nexport class GaugeControllerMulticallRepository {\n  multicall: Contract;\n\n  constructor(\n    multicallAddress: string,\n    private gaugeControllerAddress: string,\n    provider: Provider\n  ) {\n    this.multicall = Multicall(multicallAddress, provider);\n  }\n\n  async getRelativeWeights(\n    gaugeAddresses: string[],\n    timestamp?: number\n  ): Promise<{ [gaugeAddress: string]: number }> {\n    const payload = gaugeAddresses.map((gaugeAddress) => [\n      this.gaugeControllerAddress,\n      gaugeControllerInterface.encodeFunctionData('gauge_relative_weight', [\n        getAddress(gaugeAddress),\n        timestamp || Math.floor(Date.now() / 1000),\n      ]),\n    ]);\n    const [, res] = await this.multicall.aggregate(payload);\n\n    const weights = gaugeAddresses.reduce(\n      (p: { [key: string]: number }, a, i) => {\n        p[a] ||= parseFloat(formatUnits(res[i], 18));\n        return p;\n      },\n      {}\n    );\n\n    return weights;\n  }\n}\n","import { Multicall } from '@/modules/contracts/multicall';\nimport { Provider } from '@ethersproject/providers';\nimport { Interface } from '@ethersproject/abi';\nimport { Contract } from '@ethersproject/contracts';\nimport { formatUnits } from 'ethers/lib/utils';\nimport { BigNumber } from '@ethersproject/bignumber';\n\nconst liquidityGaugeV5Interface = new Interface([\n  'function totalSupply() view returns (uint)',\n  'function working_supply() view returns (uint)',\n  'function reward_count() view returns (uint)',\n  'function reward_tokens(uint rewardIndex) view returns (address)',\n  'function reward_data(address rewardToken) view returns (tuple(address token, address distributor, uint period_finish, uint rate, uint last_update, uint integral) data)',\n]);\n\nexport interface RewardData {\n  token: string; // Always 0x0\n  distributor: string;\n  period_finish: BigNumber;\n  rate: BigNumber; // per second\n  last_update: BigNumber;\n  integral: BigNumber; // sum accrued to date\n}\n\n/**\n * A lot of code to get liquidity gauge state via RPC multicall.\n * TODO: reseach helper contracts or extend subgraph\n */\nexport class LiquidityGaugesMulticallRepository {\n  multicall: Contract;\n\n  constructor(multicallAddress: string, provider: Provider) {\n    this.multicall = Multicall(multicallAddress, provider);\n  }\n\n  async getTotalSupplies(\n    gaugeAddresses: string[]\n  ): Promise<{ [gaugeAddress: string]: number }> {\n    const payload = gaugeAddresses.map((gaugeAddress) => [\n      gaugeAddress,\n      liquidityGaugeV5Interface.encodeFunctionData('totalSupply', []),\n    ]);\n    const [, res] = await this.multicall.aggregate(payload);\n    // Handle 0x\n    const res0x = res.map((r: string) => (r == '0x' ? '0x0' : r));\n\n    const totalSupplies = gaugeAddresses.reduce(\n      (p: { [key: string]: number }, a, i) => {\n        p[a] ||= parseFloat(formatUnits(res0x[i], 18));\n        return p;\n      },\n      {}\n    );\n\n    return totalSupplies;\n  }\n\n  async getWorkingSupplies(\n    gaugeAddresses: string[]\n  ): Promise<{ [gaugeAddress: string]: number }> {\n    const payload = gaugeAddresses.map((gaugeAddress) => [\n      gaugeAddress,\n      liquidityGaugeV5Interface.encodeFunctionData('working_supply', []),\n    ]);\n    const [, res] = await this.multicall.aggregate(payload);\n    // Handle 0x\n    const res0x = res.map((r: string) => (r == '0x' ? '0x0' : r));\n\n    const workingSupplies = gaugeAddresses.reduce(\n      (p: { [key: string]: number }, a, i) => {\n        p[a] ||= parseFloat(formatUnits(res0x[i], 18));\n        return p;\n      },\n      {}\n    );\n\n    return workingSupplies;\n  }\n\n  async getRewardCounts(\n    gaugeAddresses: string[]\n  ): Promise<{ [gaugeAddress: string]: number }> {\n    const payload = gaugeAddresses.map((gaugeAddress) => [\n      gaugeAddress,\n      liquidityGaugeV5Interface.encodeFunctionData('reward_count', []),\n    ]);\n    const [, res] = await this.multicall.aggregate(payload);\n    // Handle 0x return values\n    const res0x = res.map((r: string) => (r == '0x' ? '0x0' : r));\n\n    const rewardCounts = gaugeAddresses.reduce(\n      (p: { [key: string]: number }, a, i) => {\n        p[a] ||= parseInt(res0x[i]);\n        return p;\n      },\n      {}\n    );\n\n    return rewardCounts;\n  }\n\n  async getRewardTokens(\n    gaugeAddresses: string[],\n    passingRewardCounts?: { [gaugeAddress: string]: number }\n  ): Promise<{ [gaugeAddress: string]: string[] }> {\n    const rewardCounts =\n      passingRewardCounts || (await this.getRewardCounts(gaugeAddresses));\n    const gaugesWithRewards = gaugeAddresses.filter(\n      (gaugeAddress) => rewardCounts[gaugeAddress] > 0\n    );\n    const startIndexes = [0];\n    const payload = gaugesWithRewards\n      .map((gaugeAddress, gaugeIndex) => {\n        const calls = [];\n        for (let i = 0; i < rewardCounts[gaugeAddress]; i++) {\n          calls.push([\n            gaugeAddress,\n            liquidityGaugeV5Interface.encodeFunctionData('reward_tokens', [i]),\n          ]);\n        }\n        startIndexes[gaugeIndex + 1] =\n          startIndexes[gaugeIndex] + rewardCounts[gaugeAddress];\n        return calls;\n      })\n      .flat();\n    const [, res] = await this.multicall.aggregate(payload);\n\n    const rewardTokens = gaugesWithRewards.reduce(\n      (p: { [key: string]: string[] }, a, i) => {\n        const start = startIndexes[i];\n        const end = startIndexes[i + 1];\n        const tokens: string[] = [];\n        for (let i = start; i < end; i++) {\n          tokens.push(\n            liquidityGaugeV5Interface.decodeFunctionResult(\n              'reward_tokens',\n              res[i]\n            )[0]\n          );\n        }\n        p[a] ||= tokens;\n        return p;\n      },\n      {}\n    );\n\n    return rewardTokens;\n  }\n\n  async getRewardData(\n    gaugeAddresses: string[],\n    passingRewardTokens?: { [gaugeAddress: string]: string[] }\n  ): Promise<{\n    [gaugeAddress: string]: { [rewardTokenAddress: string]: RewardData };\n  }> {\n    const rewardTokens =\n      passingRewardTokens || (await this.getRewardTokens(gaugeAddresses));\n\n    const startIndexes = [0];\n    const payload = Object.keys(rewardTokens)\n      .map((gaugeAddress, gaugeIndex) => {\n        const calls = [];\n        for (let i = 0; i < rewardTokens[gaugeAddress].length; i++) {\n          calls.push([\n            gaugeAddress,\n            liquidityGaugeV5Interface.encodeFunctionData('reward_data', [\n              rewardTokens[gaugeAddress][i],\n            ]),\n          ]);\n        }\n        startIndexes[gaugeIndex + 1] =\n          startIndexes[gaugeIndex] + rewardTokens[gaugeAddress].length;\n        return calls;\n      })\n      .flat();\n    const [, res] = (await this.multicall.aggregate(payload)) as [\n      unknown,\n      string[]\n    ];\n    const decoded = res.map(\n      (r) => liquidityGaugeV5Interface.decodeFunctionResult('reward_data', r)[0]\n    );\n\n    const rewardData = Object.keys(rewardTokens).reduce(\n      (p: { [key: string]: { [key: string]: RewardData } }, a, i) => {\n        const start = startIndexes[i];\n        const data = rewardTokens[a].reduce(\n          (d: { [key: string]: RewardData }, t, x) => {\n            d[t] ||= decoded[start + x] as RewardData;\n            return d;\n          },\n          {}\n        );\n        p[a] ||= data;\n        return p;\n      },\n      {}\n    );\n\n    return rewardData;\n  }\n}\n","import { Findable } from '../types';\nimport {\n  createGaugesClient,\n  GaugesClient,\n  SubgraphLiquidityGauge,\n} from '@/modules/subgraph/subgraph';\n\n/**\n * Access liquidity gauges indexed by subgraph.\n * Because we have ~100 gauges to save on repeated http calls we cache all results as `gauges` on an instance.\n * Balancer's subgraph URL: https://thegraph.com/hosted-service/subgraph/balancer-labs/balancer-gauges\n */\nexport class LiquidityGaugesSubgraphRepository\n  implements Findable<SubgraphLiquidityGauge>\n{\n  private client: GaugesClient;\n  public gauges: SubgraphLiquidityGauge[] = [];\n\n  constructor(url: string) {\n    this.client = createGaugesClient(url);\n  }\n\n  async fetch(): Promise<SubgraphLiquidityGauge[]> {\n    const queryResult = await this.client.LiquidityGauges();\n    // TODO: optionally convert subgraph type to sdk internal type\n    this.gauges = queryResult.liquidityGauges as SubgraphLiquidityGauge[];\n\n    return this.gauges;\n  }\n\n  async find(id: string): Promise<SubgraphLiquidityGauge | undefined> {\n    if (this.gauges.length == 0) {\n      await this.fetch();\n    }\n\n    return this.gauges.find((gauge) => gauge.id == id);\n  }\n\n  async findBy(\n    param: string,\n    value: string\n  ): Promise<SubgraphLiquidityGauge | undefined> {\n    if (this.gauges.length == 0) {\n      await this.fetch();\n    }\n\n    if (param == 'id') {\n      return this.find(value);\n    } else if (param == 'poolId') {\n      return this.gauges.find((gauge) => gauge.poolId == value);\n    } else if (param == 'poolAddress') {\n      return this.gauges.find((gauge) => gauge.poolAddress == value);\n    } else {\n      throw `search by ${param} not implemented`;\n    }\n  }\n}\n","import { GaugeControllerMulticallRepository } from '../gauge-controller/multicall';\nimport { LiquidityGaugesMulticallRepository, RewardData } from './multicall';\nimport { LiquidityGaugesSubgraphRepository } from './subgraph';\nimport type {\n  Maybe,\n  SubgraphLiquidityGauge,\n} from '@/modules/subgraph/subgraph';\nimport type { Findable } from '../types';\nimport type { Provider } from '@ethersproject/providers';\n\nexport interface LiquidityGauge {\n  id: string;\n  address: string;\n  name: string;\n  poolId?: Maybe<string>;\n  poolAddress: string;\n  totalSupply: number;\n  workingSupply: number;\n  relativeWeight: number;\n  rewardTokens?: { [tokenAddress: string]: RewardData };\n}\n\nexport class LiquidityGaugeSubgraphRPCProvider\n  implements Findable<LiquidityGauge>\n{\n  gaugeController: GaugeControllerMulticallRepository;\n  multicall: LiquidityGaugesMulticallRepository;\n  subgraph: LiquidityGaugesSubgraphRepository;\n  totalSupplies: { [gaugeAddress: string]: number } = {};\n  workingSupplies: { [gaugeAddress: string]: number } = {};\n  relativeWeights: { [gaugeAddress: string]: number } = {};\n  rewardTokens: {\n    [gaugeAddress: string]: { [tokenAddress: string]: RewardData };\n  } = {};\n\n  constructor(\n    subgraphUrl: string,\n    multicallAddress: string,\n    gaugeControllerAddress: string,\n    provider: Provider\n  ) {\n    this.gaugeController = new GaugeControllerMulticallRepository(\n      multicallAddress,\n      gaugeControllerAddress,\n      provider\n    );\n    this.multicall = new LiquidityGaugesMulticallRepository(\n      multicallAddress,\n      provider\n    );\n    this.subgraph = new LiquidityGaugesSubgraphRepository(subgraphUrl);\n  }\n\n  async fetch(): Promise<void> {\n    const gauges = await this.subgraph.fetch();\n    const gaugeAddresses = gauges.map((g) => g.id);\n    this.totalSupplies = await this.multicall.getTotalSupplies(gaugeAddresses);\n    this.workingSupplies = await this.multicall.getWorkingSupplies(\n      gaugeAddresses\n    );\n    this.rewardTokens = await this.multicall.getRewardData(gaugeAddresses);\n    this.relativeWeights = await this.gaugeController.getRelativeWeights(\n      gaugeAddresses\n    );\n  }\n\n  async find(id: string): Promise<LiquidityGauge | undefined> {\n    if (Object.keys(this.relativeWeights).length == 0) {\n      await this.fetch();\n    }\n\n    const gauge = await this.subgraph.find(id);\n    if (!gauge) {\n      return;\n    }\n\n    return this.compose(gauge);\n  }\n\n  async findBy(\n    attribute: string,\n    value: string\n  ): Promise<LiquidityGauge | undefined> {\n    if (Object.keys(this.relativeWeights).length == 0) {\n      await this.fetch();\n    }\n\n    let gauge: SubgraphLiquidityGauge | undefined;\n    if (attribute == 'id') {\n      return this.find(value);\n    } else if (attribute == 'address') {\n      return this.find(value);\n    } else if (attribute == 'poolId') {\n      gauge = await this.subgraph.findBy('poolId', value);\n    } else if (attribute == 'poolAddress') {\n      gauge = await this.subgraph.findBy('poolAddress', value);\n    } else {\n      throw `search by ${attribute} not implemented`;\n    }\n    if (!gauge) {\n      return undefined;\n    }\n\n    return this.compose(gauge);\n  }\n\n  private compose(subgraphGauge: SubgraphLiquidityGauge) {\n    return {\n      id: subgraphGauge.id,\n      address: subgraphGauge.id,\n      name: subgraphGauge.symbol,\n      poolId: subgraphGauge.poolId,\n      poolAddress: subgraphGauge.poolAddress,\n      totalSupply: this.totalSupplies[subgraphGauge.id],\n      workingSupply: this.workingSupplies[subgraphGauge.id],\n      relativeWeight: this.relativeWeights[subgraphGauge.id],\n      rewardTokens: this.rewardTokens[subgraphGauge.id],\n    };\n  }\n}\n","import axios from 'axios';\nimport { Pool } from '@/types';\nimport { jsonToGraphQLQuery } from 'json-to-graphql-query';\n\nexport default class BalancerAPIClient {\n  constructor(private readonly url: string, private readonly apiKey: string) {}\n\n  public async get(query: any): Promise<any> {\n    try {\n      const payload = this.toPayload(query);\n      const { data } = await axios.post(this.url, payload, {\n        headers: {\n          'x-api-key': this.apiKey,\n        },\n      });\n      if (data.errors) {\n        throw new Error(\n          data.errors.map((error: any) => error.message).join(',')\n        );\n      }\n      return data.data;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n\n    return [];\n  }\n\n  public toPayload(query: any): any {\n    return JSON.stringify({ query: jsonToGraphQLQuery({ query }) });\n  }\n}\n","import { Findable } from '../types';\nimport { PoolAttribute } from './types';\nimport { GraphQLQuery, Pool } from '@/types';\nimport BalancerAPIClient from '@/modules/api/balancer-api.client';\nimport {\n  GraphQLArgsBuilder,\n  Op,\n  BalancerAPIArgsFormatter,\n} from '@/lib/graphql/args-builder';\nimport { GraphQLArgs } from '@/lib/graphql/types';\n\n/**\n * Access pools using the Balancer GraphQL Api.\n *\n * Balancer's API URL: https://api.balancer.fi/query/\n */\nexport class PoolsBalancerAPIRepository\n  implements Findable<Pool, PoolAttribute>\n{\n  private client: BalancerAPIClient;\n  public pools: Pool[] = [];\n  public skip: string | undefined; // A token to pass to the next query to retrieve the next page of results.\n\n  constructor(url: string, apiKey: string) {\n    this.client = new BalancerAPIClient(url, apiKey);\n  }\n\n  async fetch(query?: GraphQLQuery): Promise<Pool[]> {\n    const defaultArgs: GraphQLArgs = {\n      chainId: 1,\n      orderBy: 'totalLiquidity',\n      orderDirection: 'desc',\n      first: 10,\n      where: {\n        swapEnabled: Op.Equals(true),\n        totalShares: Op.GreaterThan(0.05),\n      },\n    };\n\n    const defaultAttributes = {\n      id: true,\n      address: true,\n    };\n\n    const args = query?.args || defaultArgs;\n    const formattedArgs = new GraphQLArgsBuilder(args).format(\n      new BalancerAPIArgsFormatter()\n    );\n\n    const attrs = query?.attrs || defaultAttributes;\n\n    const formattedQuery = {\n      pools: {\n        __args: formattedArgs,\n        ...attrs,\n      },\n    };\n\n    const apiResponse = await this.client.get(formattedQuery);\n    const apiResponseData = apiResponse.pools;\n\n    this.skip = apiResponseData.skip;\n    this.pools = apiResponseData.pools;\n\n    return this.pools.map(this.format);\n  }\n\n  async find(id: string): Promise<Pool | undefined> {\n    if (this.pools.length == 0) {\n      await this.fetch();\n    }\n\n    return this.findBy('id', id);\n  }\n\n  async findBy(param: PoolAttribute, value: string): Promise<Pool | undefined> {\n    if (this.pools.length == 0) {\n      await this.fetch();\n    }\n\n    const pool = this.pools.find((pool) => pool[param] == value);\n    if (pool) {\n      return this.format(pool);\n    }\n  }\n\n  /** Fixes any formatting issues from the subgraph\n   *  - GraphQL can't store a map so pool.apr.[rewardAprs/tokenAprs].breakdown\n   *    is JSON data that needs to be parsed so they match the Pool type correctly.\n   */\n  private format(pool: Pool): Pool {\n    if (pool.apr?.rewardAprs.breakdown) {\n      // GraphQL can't store this as a map so it's JSON that we must parse\n      const rewardsBreakdown = JSON.parse(\n        pool.apr?.rewardAprs.breakdown as unknown as string\n      );\n      pool.apr.rewardAprs.breakdown = rewardsBreakdown;\n    }\n    if (pool.apr?.tokenAprs.breakdown) {\n      // GraphQL can't store this as a map so it's JSON that we must parse\n      const tokenAprsBreakdown = JSON.parse(\n        pool.apr?.tokenAprs.breakdown as unknown as string\n      );\n      pool.apr.tokenAprs.breakdown = tokenAprsBreakdown;\n    }\n\n    return pool;\n  }\n}\n","import { Findable } from '../types';\nimport { GraphQLQuery, Pool } from '@/types';\nimport { PoolAttribute, PoolRepository } from './types';\n\n/**\n * The fallback provider takes multiple PoolRepository's in an array and uses them in order\n * falling back to the next one if a request times out.\n *\n * This is useful for using the Balancer API while being able to fall back to the graph if it is down\n * to ensure Balancer is maximally decentralized.\n **/\nexport class PoolsFallbackRepository implements Findable<Pool, PoolAttribute> {\n  currentProviderIdx: number;\n\n  constructor(\n    private readonly providers: PoolRepository[],\n    private timeout = 10000\n  ) {\n    this.currentProviderIdx = 0;\n  }\n\n  async fetch(query?: GraphQLQuery): Promise<Pool[]> {\n    return this.fallbackQuery('fetch', [query]);\n  }\n\n  get currentProvider(): PoolRepository | undefined {\n    if (\n      !this.providers.length ||\n      this.currentProviderIdx >= this.providers.length\n    ) {\n      return;\n    }\n\n    return this.providers[this.currentProviderIdx];\n  }\n\n  async find(id: string): Promise<Pool | undefined> {\n    return this.fallbackQuery('find', [id]);\n  }\n\n  async findBy(\n    attribute: PoolAttribute,\n    value: string\n  ): Promise<Pool | undefined> {\n    return this.fallbackQuery('findBy', [attribute, value]);\n  }\n\n  async fallbackQuery(func: string, args: any[]): Promise<any> {\n    if (this.currentProviderIdx >= this.providers.length) {\n      throw new Error('No working providers found');\n    }\n\n    let result;\n\n    try {\n      const currentProvider = this.providers[this.currentProviderIdx] as any;\n      result = await Promise.race<any | undefined>([\n        // eslint-disable-next-line prefer-spread\n        currentProvider[func].apply(currentProvider, args),\n        new Promise((_, reject) =>\n          setTimeout(() => reject(new Error('timeout')), this.timeout)\n        ),\n      ]);\n    } catch (e: any) {\n      if (e.message === 'timeout') {\n        console.error(\n          'Provider ' +\n            this.currentProviderIdx +\n            ' timed out, falling back to next provider'\n        );\n      } else {\n        console.error(\n          'Provider ' + this.currentProviderIdx + ' failed with error: ',\n          e.message,\n          ', falling back to next provider'\n        );\n      }\n      this.currentProviderIdx++;\n      result = await this.fallbackQuery.call(this, func, args);\n    }\n\n    return result;\n  }\n}\n","import { Findable, Pool, Searchable } from '@/types';\nimport { PoolAttribute } from './types';\n\nexport class PoolsStaticRepository\n  implements Findable<Pool, PoolAttribute>, Searchable<Pool>\n{\n  constructor(private pools: Pool[]) {}\n\n  async find(id: string): Promise<Pool | undefined> {\n    return this.pools.find((pool) => {\n      return pool.id.toLowerCase() === id.toLowerCase();\n    });\n  }\n\n  async findBy(\n    attribute: PoolAttribute,\n    value: string\n  ): Promise<Pool | undefined> {\n    return this.pools.find((pool) => {\n      return pool[attribute] === value;\n    });\n  }\n\n  async all(): Promise<Pool[]> {\n    return this.pools;\n  }\n\n  async where(filter: (pool: Pool) => boolean): Promise<Pool[]> {\n    return (await this.all()).filter(filter);\n  }\n}\n","import { Findable, Searchable } from '../types';\nimport {\n  createSubgraphClient,\n  SubgraphClient,\n  SubgraphPool,\n  Pool_OrderBy,\n  OrderDirection,\n} from '@/modules/subgraph/subgraph';\nimport {\n  GraphQLArgsBuilder,\n  Op,\n  SubgraphArgsFormatter,\n} from '@/lib/graphql/args-builder';\nimport { GraphQLArgs } from '@/lib/graphql/types';\nimport { PoolAttribute } from './types';\nimport { GraphQLQuery, Pool, PoolType } from '@/types';\n\n/**\n * Access pools using generated subgraph client.\n *\n * Balancer's subgraph URL: https://thegraph.com/hosted-service/subgraph/balancer-labs/balancer-v2\n */\nexport class PoolsSubgraphRepository\n  implements Findable<Pool, PoolAttribute>, Searchable<Pool>\n{\n  private client: SubgraphClient;\n  public pools: SubgraphPool[] = [];\n  public skip: string | undefined;\n\n  /**\n   * Repository with optional lazy loaded blockHeight\n   *\n   * @param url subgraph URL\n   * @param blockHeight lazy loading blockHeigh resolver\n   */\n  constructor(\n    url: string,\n    private blockHeight?: () => Promise<number | undefined>\n  ) {\n    this.client = createSubgraphClient(url);\n  }\n\n  async fetch(query?: GraphQLQuery): Promise<Pool[]> {\n    const defaultArgs: GraphQLArgs = {\n      orderBy: Pool_OrderBy.TotalLiquidity,\n      orderDirection: OrderDirection.Desc,\n      block: this.blockHeight\n        ? { number: await this.blockHeight() }\n        : undefined,\n      first: query?.args.first,\n      skip: query?.args.skip ? Number(query?.args.skip) : 0,\n      where: {\n        swapEnabled: Op.Equals(true),\n        totalShares: Op.GreaterThan(0),\n      },\n    };\n\n    const args = query?.args || defaultArgs;\n    const formattedQuery = new GraphQLArgsBuilder(args).format(\n      new SubgraphArgsFormatter()\n    );\n\n    const { pool0, pool1000 } = await this.client.Pools(formattedQuery);\n\n    // TODO: how to best convert subgraph type to sdk internal type?\n    this.pools = [...pool0, ...pool1000];\n    this.skip = this.pools.length.toString();\n\n    return this.pools.map(this.mapType);\n  }\n\n  async find(id: string): Promise<Pool | undefined> {\n    if (this.pools.length == 0) {\n      await this.fetch();\n    }\n\n    return this.findBy('id', id);\n  }\n\n  async findBy(param: PoolAttribute, value: string): Promise<Pool | undefined> {\n    if (this.pools.length == 0) {\n      await this.fetch();\n    }\n\n    const pool = this.pools.find((pool) => pool[param] == value);\n    if (pool) {\n      return this.mapType(pool);\n    }\n    return undefined;\n  }\n\n  async all(): Promise<Pool[]> {\n    if (this.pools.length == 0) {\n      await this.fetch();\n    }\n\n    return this.pools.map(this.mapType);\n  }\n\n  async where(filter: (pool: Pool) => boolean): Promise<Pool[]> {\n    if (this.pools.length == 0) {\n      await this.fetch();\n    }\n\n    return (await this.all()).filter(filter);\n  }\n\n  private mapType(subgraphPool: SubgraphPool): Pool {\n    return {\n      id: subgraphPool.id,\n      name: subgraphPool.name || '',\n      address: subgraphPool.address,\n      poolType: subgraphPool.poolType as PoolType,\n      swapFee: subgraphPool.swapFee,\n      // owner: subgraphPool.owner,\n      // factory: subgraphPool.factory,\n      tokens: subgraphPool.tokens || [],\n      tokensList: subgraphPool.tokensList,\n      tokenAddresses: (subgraphPool.tokens || []).map((t) => t.address),\n      totalLiquidity: subgraphPool.totalLiquidity,\n      totalShares: subgraphPool.totalShares,\n      totalSwapFee: subgraphPool.totalSwapFee,\n      totalSwapVolume: subgraphPool.totalSwapVolume,\n      // onchain: subgraphPool.onchain,\n      createTime: subgraphPool.createTime,\n      // mainTokens: subgraphPool.mainTokens,\n      // wrappedTokens: subgraphPool.wrappedTokens,\n      // unwrappedTokens: subgraphPool.unwrappedTokens,\n      // isNew: subgraphPool.isNew,\n      // volumeSnapshot: subgraphPool.volumeSnapshot,\n      // feesSnapshot: subgraphPool.???, // Approximated last 24h fees\n      // boost: subgraphPool.boost,\n    };\n  }\n}\n","import type { Findable, Token } from '@/types';\nimport type { TokenAttribute } from './types';\n\nexport class StaticTokenProvider implements Findable<Token, TokenAttribute> {\n  constructor(private tokens: Token[]) {}\n\n  async find(address: string): Promise<Token | undefined> {\n    return this.tokens.find((token) => {\n      return token.address.toLowerCase() === address.toLowerCase();\n    });\n  }\n\n  async findBy(\n    attribute: TokenAttribute,\n    value: string\n  ): Promise<Token | undefined> {\n    return this.tokens.find((token) => {\n      return token[attribute] === value;\n    });\n  }\n}\n","import { Findable, Price, TokenPrices } from '@/types';\n\nexport class StaticTokenPriceProvider implements Findable<Price> {\n  constructor(private tokenPrices: TokenPrices) {}\n\n  async find(address: string): Promise<Price | undefined> {\n    const price = this.tokenPrices[address];\n    if (!price) return;\n    return price;\n  }\n\n  async findBy(attribute: string, value: string): Promise<Price | undefined> {\n    if (attribute != 'address') {\n      return undefined;\n    }\n\n    return this.find(value);\n  }\n}\n","export const version = \"ethers/5.6.9\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\nimport * as constants from \"@ethersproject/constants\";\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\nimport * as utils from \"./utils\";\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n////////////////////////\n// Compile-Time Constants\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Exports\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist };\n//# sourceMappingURL=ethers.js.map","import { AprFetcher } from '../repository';\nimport { BigNumber } from 'ethers';\nimport { utils } from 'ethers';\nconst { formatUnits } = utils;\n\n// can be fetched from subgraph\n// aave-js: supplyAPR = graph.liquidityRate = core.getReserveCurrentLiquidityRate(_reserve)\n// or directly from RPC:\n// wrappedAaveToken.LENDING_POOL.getReserveCurrentLiquidityRate(mainTokenAddress)\n\nexport const wrappedTokensMap = {\n  // USDT\n  '0xf8fd466f12e236f4c96f7cce6c79eadb819abf58': {\n    aToken: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n    underlying: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n  },\n  // USDC\n  '0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de': {\n    aToken: '0xbcca60bb61934080951369a648fb03df4f96263c',\n    underlying: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n  },\n  // DAI\n  '0x02d60b84491589974263d922d9cc7a3152618ef6': {\n    aToken: '0x028171bca77440897b824ca71d1c56cac55b68a3',\n    underlying: '0x6b175474e89094c44da98b954eedeac495271d0f',\n  },\n};\n\nconst aTokens = Object.values(wrappedTokensMap).map((t) => t.aToken);\nconst underlyingAssets = Object.values(wrappedTokensMap).map(\n  (t) => t.underlying\n);\nconst underlyingToWrapped = Object.fromEntries(\n  Object.keys(wrappedTokensMap).map((wrapped) => [\n    wrappedTokensMap[wrapped as keyof typeof wrappedTokensMap].underlying,\n    wrapped,\n  ])\n);\n\n// Subgraph\n// liquidityRate, depositors APR (in rays - 27 digits)\nconst endpoint = 'https://api.thegraph.com/subgraphs/name/aave/protocol-v2';\nconst query = `\n  query getReserves($aTokens: [String!], $underlyingAssets: [Bytes!]) {\n    reserves(\n      where: {\n        aToken_in: $aTokens\n        underlyingAsset_in: $underlyingAssets\n        isActive: true\n      }\n    ) {\n      underlyingAsset\n      liquidityRate\n    }\n  }\n`;\n\ninterface ReserveResponse {\n  data: {\n    reserves: [\n      {\n        underlyingAsset: string;\n        liquidityRate: string;\n      }\n    ];\n  };\n}\n\nlet aprTtl = 0;\nlet aprs: Record<string, number>;\nlet bustCache = false;\nlet promisedCall: Promise<Record<string, number>>; // Prevent multiple rounds to APIs.\n\n/**\n * Controls API response 1h auto-caching, when true (default) it will return APR cached value.\n */\nexport const cache = (state = true): void => {\n  bustCache = !state;\n};\n\n/**\n * Is fetching and parsing aave APRs from a subgraph\n *\n * @returns aave aprs in bsp\n */\nconst getAprs = async (): Promise<Record<string, number>> => {\n  try {\n    const graphqlQuery = {\n      operationName: 'getReserves',\n      query,\n      variables: { aTokens, underlyingAssets },\n    };\n\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(graphqlQuery),\n    });\n\n    const {\n      data: { reserves },\n    } = (await response.json()) as ReserveResponse;\n\n    const aprEntries = reserves.map((r) => [\n      underlyingToWrapped[r.underlyingAsset],\n      // Note: our assumption is frontend usage, this service is not a good source where more accuracy is needed.\n      // Converting from aave ray number (27 digits) to bsp\n      // essentially same as here:\n      // https://github.com/aave/aave-utilities/blob/master/packages/math-utils/src/formatters/reserve/index.ts#L231\n      Math.round(\n        parseFloat(formatUnits(BigNumber.from(r.liquidityRate), 27)) * 10000\n      ),\n    ]);\n\n    return Object.fromEntries(aprEntries);\n  } catch (error) {\n    console.log(error);\n\n    return Object.fromEntries(\n      Object.keys(wrappedTokensMap).map((key) => [key, 0])\n    );\n  }\n};\n\n/**\n * Caching logic around APR fetching\n *\n * @returns cached APRs for aave tokens\n */\nexport const aave: AprFetcher = async (address?: string) => {\n  if (!address) {\n    throw 'needs a wrapped token address, eg: wrapped aDAI';\n  }\n\n  // cache for 1h\n  if ((bustCache || Date.now() > aprTtl) && !promisedCall) {\n    promisedCall = getAprs();\n    aprTtl = Date.now() + 1 * 60 * 60 * 1000;\n  }\n  aprs = await promisedCall;\n\n  return aprs[address];\n};\n\n// TODO: RPC multicall\n// always upto date\n// const lendingPoolAddress = '0x7d2768de32b0b80b7a3454c06bdac94a69ddc7a9';\n","import { Price, Findable, TokenPrices } from '@/types';\nimport { wrappedTokensMap as aaveWrappedMap } from '../token-yields/tokens/aave';\n\n/**\n * Simple coingecko price source implementation. Configurable by network and token addresses.\n */\nexport class CoingeckoPriceRepository implements Findable<Price> {\n  prices: TokenPrices = {};\n  urlBase: string;\n  baseTokenAddresses: string[];\n\n  constructor(tokenAddresses: string[], chainId = 1) {\n    this.baseTokenAddresses = tokenAddresses.map((a) => a.toLowerCase());\n    this.urlBase = `https://api.coingecko.com/api/v3/simple/token_price/${this.platform(\n      chainId\n    )}?vs_currencies=usd,eth`;\n  }\n\n  async fetch(address: string): Promise<void> {\n    const prices = await (await fetch(this.url(address))).json();\n    this.prices = {\n      ...this.prices,\n      ...prices,\n    };\n  }\n\n  async find(address: string): Promise<Price | undefined> {\n    const lowercaseAddress = address.toLowerCase();\n    const unwrapped = unwrapToken(lowercaseAddress);\n    if (!Object.keys(this.prices).includes(unwrapped)) {\n      await this.fetch(unwrapped);\n    }\n\n    return this.prices[unwrapped];\n  }\n\n  async findBy(attribute: string, value: string): Promise<Price | undefined> {\n    if (attribute != 'address') {\n      return undefined;\n    }\n\n    return this.find(value);\n  }\n\n  private platform(chainId: number): string {\n    switch (chainId) {\n      case 1:\n      case 42:\n      case 31337:\n        return 'ethereum';\n      case 137:\n        return 'polygon-pos';\n      case 42161:\n        return 'arbitrum-one';\n    }\n\n    return '2';\n  }\n\n  private url(address: string): string {\n    if (this.baseTokenAddresses.includes(address)) {\n      return `${this.urlBase}&contract_addresses=${this.baseTokenAddresses.join(\n        ','\n      )}`;\n    } else {\n      return `${this.urlBase}&contract_addresses=${address}`;\n    }\n  }\n}\n\nconst unwrapToken = (wrappedAddress: string) => {\n  const lowercase = wrappedAddress.toLocaleLowerCase();\n\n  if (Object.keys(aaveWrappedMap).includes(lowercase)) {\n    return aaveWrappedMap[lowercase as keyof typeof aaveWrappedMap].aToken;\n  } else {\n    return lowercase;\n  }\n};\n","import { Interface } from '@ethersproject/abi';\nimport { Provider } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\nimport { formatUnits, getAddress } from 'ethers/lib/utils';\nimport { Multicall } from '@/modules/contracts/multicall';\n\nexport interface FeeDistributorData {\n  balAmount: number;\n  bbAUsdAmount: number;\n  veBalSupply: number;\n  bbAUsdPrice: number;\n  balAddress: string;\n}\n\nexport interface BaseFeeDistributor {\n  multicallData: (ts: number) => Promise<FeeDistributorData>;\n}\n\nconst feeDistributorInterface = new Interface([\n  'function getTokensDistributedInWeek(address token, uint timestamp) view returns (uint)',\n]);\n\nconst veBalInterface = new Interface([\n  'function totalSupply() view returns (uint)',\n]);\n\nconst bbAUsdInterface = new Interface([\n  'function getRate() view returns (uint)',\n]);\n\nexport class FeeDistributorRepository implements BaseFeeDistributor {\n  multicall: Contract;\n  data?: FeeDistributorData;\n\n  constructor(\n    multicallAddress: string,\n    private feeDistributorAddress: string,\n    private balAddress: string,\n    private veBalAddress: string,\n    private bbAUsdAddress: string,\n    provider: Provider\n  ) {\n    this.multicall = Multicall(multicallAddress, provider);\n  }\n\n  async fetch(timestamp: number): Promise<FeeDistributorData> {\n    const previousWeek = this.getPreviousWeek(timestamp);\n    const payload = [\n      [\n        this.feeDistributorAddress,\n        feeDistributorInterface.encodeFunctionData(\n          'getTokensDistributedInWeek',\n          [getAddress(this.balAddress), previousWeek]\n        ),\n      ],\n      [\n        this.feeDistributorAddress,\n        feeDistributorInterface.encodeFunctionData(\n          'getTokensDistributedInWeek',\n          [getAddress(this.bbAUsdAddress), previousWeek]\n        ),\n      ],\n      [this.veBalAddress, veBalInterface.encodeFunctionData('totalSupply', [])],\n      [this.bbAUsdAddress, bbAUsdInterface.encodeFunctionData('getRate', [])],\n    ];\n    const [, res] = await this.multicall.aggregate(payload);\n\n    const data = {\n      balAmount: parseFloat(formatUnits(res[0], 18)),\n      bbAUsdAmount: parseFloat(formatUnits(res[1], 18)),\n      veBalSupply: parseFloat(formatUnits(res[2], 18)),\n      bbAUsdPrice: parseFloat(formatUnits(res[3], 18)),\n      balAddress: this.balAddress,\n    };\n\n    return data;\n  }\n\n  async multicallData(timestamp: number): Promise<FeeDistributorData> {\n    if (!this.data) {\n      this.data = await this.fetch(timestamp);\n    }\n\n    return this.data;\n  }\n\n  getPreviousWeek(fromTimestamp: number): number {\n    const weeksToGoBack = 1;\n    const midnight = new Date(fromTimestamp);\n    midnight.setUTCHours(0);\n    midnight.setUTCMinutes(0);\n    midnight.setUTCSeconds(0);\n    midnight.setUTCMilliseconds(0);\n\n    let daysSinceThursday = midnight.getDay() - 4;\n    if (daysSinceThursday < 0) daysSinceThursday += 7;\n\n    daysSinceThursday = daysSinceThursday + weeksToGoBack * 7;\n\n    return Math.floor(midnight.getTime() / 1000) - daysSinceThursday * 86400;\n  }\n}\n","import { Interface } from '@ethersproject/abi';\nimport { Provider } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\nimport { formatUnits } from 'ethers/lib/utils';\nimport { Findable } from '../types';\n\nconst vaultInterface = new Interface([\n  'function getProtocolFeesCollector() view returns (address)',\n]);\n\nconst protocolFeesCollectorInterface = new Interface([\n  'function getSwapFeePercentage() view returns (uint)',\n]);\n\n// Using singleton here, so subsequent calls will return the same promise\nlet swapFeePercentagePromise: Promise<number>;\n\nexport class FeeCollectorRepository implements Findable<number> {\n  vault: Contract;\n  swapFeePercentage?: number;\n\n  constructor(vaultAddress: string, private provider: Provider) {\n    this.vault = new Contract(vaultAddress, vaultInterface, this.provider);\n  }\n\n  async fetch(): Promise<number> {\n    const address = (await this.vault.getProtocolFeesCollector()) as string;\n\n    const collector = new Contract(\n      address,\n      protocolFeesCollectorInterface,\n      this.provider\n    );\n    const fees = (await collector.getSwapFeePercentage()) as string;\n\n    return parseFloat(formatUnits(fees, 18));\n  }\n\n  async find(): Promise<number> {\n    if (!swapFeePercentagePromise) {\n      swapFeePercentagePromise = this.fetch();\n    }\n    this.swapFeePercentage = await swapFeePercentagePromise;\n\n    return this.swapFeePercentage;\n  }\n\n  async findBy(): Promise<number> {\n    return this.find();\n  }\n}\n","import { AprFetcher } from '../repository';\n\nlet aprTtl = 0;\nlet apr: number;\nlet bustCache = false;\n\n/**\n * Controls API response 1h auto-caching, when true (default) it will return APR cached value.\n */\nexport const cache = (state = true): void => {\n  bustCache = !state;\n};\n\ninterface LidoAPIResponse {\n  data: {\n    eth: string;\n    steth: string;\n  };\n}\n\n/**\n * Gets Lido APR\n *\n * @returns lido apr in bps\n */\nconst getApr = async (): Promise<number> => {\n  try {\n    const response = await fetch('https://stake.lido.fi/api/apr');\n    const { data: aprs } = (await response.json()) as LidoAPIResponse;\n\n    return Math.round(parseFloat(aprs.steth) * 100);\n  } catch (error) {\n    console.error('Failed to fetch stETH APR:', error);\n    return 0;\n  }\n};\n\n/**\n * Business logic around Lido APR fetching\n *\n * @returns cached lido APR for stETH\n */\nexport const lido: AprFetcher = async () => {\n  // cache for 1h\n  if (bustCache || Date.now() > aprTtl) {\n    apr = await getApr();\n    aprTtl = Date.now() + 1 * 60 * 60 * 1000;\n  }\n\n  return apr;\n};\n","import { AprFetcher } from '../repository';\n\nlet aprTtl = 0;\nlet apr: number;\nlet bustCache = false;\n\n/**\n * Controls API response 1h auto-caching, when true (default) it will return APR cached value.\n */\nexport const cache = (state = true): void => {\n  bustCache = !state;\n};\n\n/**\n * Gets Lido APR\n *\n * @returns lido apr in bps\n */\nconst getApr = async (): Promise<number> => {\n  try {\n    const response = await fetch(\n      'https://app.overnight.fi/api/balancer/week/apr'\n    );\n    const apr = await response.text();\n\n    return Math.round((parseFloat(apr) * 10000) / 100);\n  } catch (error) {\n    console.error('Failed to fetch USD+ APR:', error);\n    return 0;\n  }\n};\n\n/**\n * Business logic around APR fetching\n *\n * @returns cached APR for USD+\n */\nexport const overnight: AprFetcher = async () => {\n  // cache for 1h\n  if (bustCache || Date.now() > aprTtl) {\n    apr = await getApr();\n    aprTtl = Date.now() + 1 * 60 * 60 * 1000;\n  }\n\n  return apr;\n};\n","import { lido } from './tokens/lido';\nimport { aave } from './tokens/aave';\nimport { overnight } from './tokens/overnight';\nimport { Findable } from '../types';\n\n/**\n * Common interface for fetching APR from external sources\n *\n * @param address is optional, used when same source, eg: aave has multiple tokens and all of them can be fetched in one call.\n */\nexport interface AprFetcher {\n  (address?: string): Promise<number>;\n}\n\nexport const tokenAprMap: Record<string, AprFetcher> = {\n  '0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0': lido,\n  '0xf8fd466f12e236f4c96f7cce6c79eadb819abf58': aave,\n  '0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de': aave,\n  '0x02d60b84491589974263d922d9cc7a3152618ef6': aave,\n  // Polygon\n  '0x1aafc31091d93c3ff003cff5d2d8f7ba2e728425': overnight,\n  '0x6933ec1ca55c06a894107860c92acdfd2dd8512f': overnight,\n};\n\nexport class TokenYieldsRepository implements Findable<number> {\n  private yields: { [address: string]: number } = {};\n\n  constructor(private tokenMap = tokenAprMap) {}\n\n  async fetch(address: string): Promise<void> {\n    const tokenYield = await this.tokenMap[address](address);\n    this.yields[address] = tokenYield;\n  }\n\n  async find(address: string): Promise<number | undefined> {\n    const lowercase = address.toLocaleLowerCase();\n    if (\n      Object.keys(this.tokenMap).includes(lowercase) &&\n      !Object.keys(this.yields).includes(lowercase)\n    ) {\n      await this.fetch(address);\n    }\n\n    return this.yields[lowercase];\n  }\n\n  async findBy(attribute: string, value: string): Promise<number | undefined> {\n    if (attribute != 'address') {\n      return undefined;\n    }\n\n    return this.find(value);\n  }\n}\n","import { Findable } from '../types';\n\nconst endpoints = {\n  1: 'https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks',\n  5: 'https://api.thegraph.com/subgraphs/name/blocklytics/goerli-blocks',\n  137: 'https://api.thegraph.com/subgraphs/name/ianlapham/polygon-blocks',\n  42161:\n    'https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-one-blocks',\n};\n\nconst query = (timestamp: string) => `{\n  blocks(first: 1, orderBy: number, orderDirection: asc, where: { timestamp_gt: ${timestamp} }) {\n    number\n  }\n}`;\n\ninterface BlockNumberResponse {\n  data: {\n    blocks: [\n      {\n        number: string;\n      }\n    ];\n  };\n}\n\nconst fetchBlockByTime = async (\n  network: number,\n  timestamp: string\n): Promise<number> => {\n  const endpoint = endpoints[network as keyof typeof endpoints];\n  const payload = {\n    query: query(timestamp),\n  };\n\n  const response = await fetch(endpoint, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(payload),\n  });\n\n  const {\n    data: { blocks },\n  } = (await response.json()) as BlockNumberResponse;\n\n  return parseInt(blocks[0].number);\n};\n\nexport class BlockNumberRepository implements Findable<number> {\n  constructor(private network: number) {}\n\n  async find(from: string): Promise<number | undefined> {\n    if (from == 'dayAgo') {\n      const dayAgo = `${Math.floor(Date.now() / 1000) - 86400}`;\n      return fetchBlockByTime(this.network, dayAgo);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async findBy(attribute = '', value = ''): Promise<number | undefined> {\n    return;\n  }\n}\n","export * as balEmissions from './bal/emissions';\nexport * from './gauge-controller/multicall';\nexport * from './liquidity-gauges';\nexport * from './pool';\nexport * from './token';\nexport * from './token-prices';\nexport * from './fee-distributor/repository';\nexport * from './fee-collector/repository';\nexport * from './token-yields/repository';\nexport * from './block-number';\n\nimport { BalancerNetworkConfig, BalancerDataRepositories } from '@/types';\nimport { PoolsSubgraphRepository } from './pool/subgraph';\nimport { BlockNumberRepository } from './block-number';\nimport { CoingeckoPriceRepository } from './token-prices/coingecko';\nimport { StaticTokenProvider } from './token/static';\nimport { LiquidityGaugeSubgraphRPCProvider } from './liquidity-gauges/provider';\nimport { FeeDistributorRepository } from './fee-distributor/repository';\nimport { FeeCollectorRepository } from './fee-collector/repository';\nimport { TokenYieldsRepository } from './token-yields/repository';\nimport { Provider } from '@ethersproject/providers';\n\n// initialCoingeckoList are used to get the initial token list for coingecko\n// TODO: we might want to replace that with what frontend is using\nimport initialCoingeckoList from '@/modules/data/token-prices/initial-list.json';\n\nexport class Data implements BalancerDataRepositories {\n  pools;\n  yesterdaysPools;\n  tokenPrices;\n  tokenMeta;\n  liquidityGauges;\n  feeDistributor;\n  feeCollector;\n  tokenYields;\n\n  constructor(networkConfig: BalancerNetworkConfig, provider: Provider) {\n    // Config data\n    const blockDayAgo = () => {\n      return new BlockNumberRepository(networkConfig.chainId).find('dayAgo');\n    };\n    const tokenAddresses = initialCoingeckoList\n      .filter((t) => t.chainId == networkConfig.chainId)\n      .map((t) => t.address);\n\n    this.pools = new PoolsSubgraphRepository(networkConfig.urls.subgraph);\n\n    // 🚨 yesterdaysPools is used to calculate swapFees accumulated over last 24 hours\n    // TODO: find a better data source for that, eg: maybe DUNE once API is available\n    this.yesterdaysPools = new PoolsSubgraphRepository(\n      networkConfig.urls.subgraph,\n      blockDayAgo\n    );\n\n    this.tokenPrices = new CoingeckoPriceRepository(\n      tokenAddresses,\n      networkConfig.chainId\n    );\n\n    this.tokenMeta = new StaticTokenProvider([]);\n\n    this.liquidityGauges = new LiquidityGaugeSubgraphRPCProvider(\n      networkConfig.urls.gaugesSubgraph,\n      networkConfig.addresses.contracts.multicall,\n      networkConfig.addresses.contracts.gaugeController,\n      provider\n    );\n\n    this.feeDistributor = new FeeDistributorRepository(\n      networkConfig.addresses.contracts.multicall,\n      networkConfig.addresses.contracts.feeDistributor,\n      networkConfig.addresses.tokens.bal,\n      networkConfig.addresses.tokens.veBal,\n      networkConfig.addresses.tokens.bbaUsd,\n      provider\n    );\n\n    this.feeCollector = new FeeCollectorRepository(\n      networkConfig.addresses.contracts.vault,\n      provider\n    );\n\n    this.tokenYields = new TokenYieldsRepository();\n  }\n}\n","import { BALANCER_NETWORK_CONFIG } from '@/lib/constants/config';\nimport {\n  BalancerDataRepositories,\n  BalancerNetworkConfig,\n  BalancerSdkConfig,\n} from '@/types';\nimport {\n  BlockNumberRepository,\n  CoingeckoPriceRepository,\n  LiquidityGaugeSubgraphRPCProvider,\n  PoolsSubgraphRepository,\n  StaticTokenProvider,\n  FeeDistributorRepository,\n  FeeCollectorRepository,\n  TokenYieldsRepository,\n} from './data';\nimport { Sor } from './sor/sor.module';\nimport initialCoingeckoList from '@/modules/data/token-prices/initial-list.json';\n\nexport function getNetworkConfig(\n  config: BalancerSdkConfig\n): BalancerNetworkConfig {\n  if (typeof config.network === 'number') {\n    const networkConfig = BALANCER_NETWORK_CONFIG[config.network];\n\n    return {\n      ...networkConfig,\n      urls: {\n        ...networkConfig.urls,\n        subgraph: config.customSubgraphUrl ?? networkConfig.urls.subgraph,\n      },\n    };\n  }\n\n  return {\n    ...config.network,\n    urls: {\n      ...config.network.urls,\n      subgraph: config.customSubgraphUrl ?? config.network.urls.subgraph,\n    },\n  };\n}\n\nexport function getDataRepositories(\n  config: BalancerSdkConfig\n): BalancerDataRepositories {\n  const networkConfig = getNetworkConfig(config);\n  const blockDayAgo = () => {\n    return new BlockNumberRepository(networkConfig.chainId).find('dayAgo');\n  };\n  // const tokenAddresses = [];\n  const tokenAddresses = initialCoingeckoList\n    .filter((t) => t.chainId == networkConfig.chainId)\n    .map((t) => t.address);\n  const sor = new Sor(config);\n  const repositories = {\n    pools: new PoolsSubgraphRepository(networkConfig.urls.subgraph),\n    yesterdaysPools: new PoolsSubgraphRepository(\n      networkConfig.urls.subgraph,\n      blockDayAgo\n    ),\n    tokenPrices: new CoingeckoPriceRepository(\n      tokenAddresses,\n      networkConfig.chainId\n    ),\n    tokenMeta: new StaticTokenProvider([]),\n    liquidityGauges: new LiquidityGaugeSubgraphRPCProvider(\n      networkConfig.urls.gaugesSubgraph,\n      networkConfig.addresses.contracts.multicall,\n      networkConfig.addresses.contracts.gaugeController,\n      sor.provider\n    ),\n    feeDistributor: new FeeDistributorRepository(\n      networkConfig.addresses.contracts.multicall,\n      networkConfig.addresses.contracts.feeDistributor,\n      networkConfig.addresses.tokens.bal,\n      networkConfig.addresses.tokens.veBal,\n      networkConfig.addresses.tokens.bbaUsd,\n      sor.provider\n    ),\n    feeCollector: new FeeCollectorRepository(\n      networkConfig.addresses.contracts.vault,\n      sor.provider\n    ),\n    tokenYields: new TokenYieldsRepository(),\n  };\n\n  return repositories;\n}\n","import { SOR, SorConfig, TokenPriceService } from '@balancer-labs/sor';\nimport { Provider, JsonRpcProvider } from '@ethersproject/providers';\nimport { SubgraphPoolDataService } from './pool-data/subgraphPoolDataService';\nimport { CoingeckoTokenPriceService } from './token-price/coingeckoTokenPriceService';\nimport {\n  SubgraphClient,\n  createSubgraphClient,\n} from '@/modules/subgraph/subgraph';\nimport {\n  BalancerNetworkConfig,\n  BalancerSdkConfig,\n  BalancerSdkSorConfig,\n} from '@/types';\nimport { SubgraphTokenPriceService } from './token-price/subgraphTokenPriceService';\nimport { getNetworkConfig } from '@/modules/sdk.helpers';\n\nexport class Sor extends SOR {\n  constructor(sdkConfig: BalancerSdkConfig) {\n    const network = getNetworkConfig(sdkConfig);\n    const sorConfig = Sor.getSorConfig(sdkConfig);\n    const sorNetworkConfig = Sor.getSorNetworkConfig(network);\n    const provider = new JsonRpcProvider(\n      sdkConfig.rpcUrl,\n      sdkConfig.network as number\n    );\n    const subgraphClient = createSubgraphClient(network.urls.subgraph);\n\n    const poolDataService = Sor.getPoolDataService(\n      network,\n      sorConfig,\n      provider,\n      subgraphClient\n    );\n\n    const tokenPriceService = Sor.getTokenPriceService(\n      network,\n      sorConfig,\n      subgraphClient\n    );\n\n    super(provider, sorNetworkConfig, poolDataService, tokenPriceService);\n  }\n\n  private static getSorConfig(config: BalancerSdkConfig): BalancerSdkSorConfig {\n    return {\n      tokenPriceService: 'coingecko',\n      poolDataService: 'subgraph',\n      fetchOnChainBalances: true,\n      ...config.sor,\n    };\n  }\n\n  private static getSorNetworkConfig(\n    network: BalancerNetworkConfig\n  ): SorConfig {\n    return {\n      ...network,\n      vault: network.addresses.contracts.vault,\n      weth: network.addresses.tokens.wrappedNativeAsset,\n      lbpRaisingTokens: network.addresses.tokens?.lbpRaisingTokens,\n      wETHwstETH: network.pools.wETHwstETH,\n    };\n  }\n\n  private static getPoolDataService(\n    network: BalancerNetworkConfig,\n    sorConfig: BalancerSdkSorConfig,\n    provider: Provider,\n    subgraphClient: SubgraphClient\n  ) {\n    return typeof sorConfig.poolDataService === 'object'\n      ? sorConfig.poolDataService\n      : new SubgraphPoolDataService(\n          subgraphClient,\n          provider,\n          network,\n          sorConfig\n        );\n  }\n\n  private static getTokenPriceService(\n    network: BalancerNetworkConfig,\n    sorConfig: BalancerSdkSorConfig,\n    subgraphClient: SubgraphClient\n  ): TokenPriceService {\n    if (typeof sorConfig.tokenPriceService === 'object') {\n      return sorConfig.tokenPriceService;\n    } else if (sorConfig.tokenPriceService === 'subgraph') {\n      new SubgraphTokenPriceService(\n        subgraphClient,\n        network.addresses.tokens.wrappedNativeAsset\n      );\n    }\n\n    return new CoingeckoTokenPriceService(network.chainId);\n  }\n}\n","import {\n  QuerySimpleFlashSwapParameters,\n  QuerySimpleFlashSwapResponse,\n  SimpleFlashSwapParameters,\n  SwapType,\n} from '../types';\nimport { queryBatchSwap } from '../queryBatchSwap';\nimport { BatchSwap } from '../types';\nimport { sum } from 'lodash';\n\nfunction checkSimpleFlashSwapParams(params: {\n  poolIds: string[];\n  assets: string[];\n}) {\n  if (params.poolIds.length > 2) {\n    throw new Error('Simple flash swap only supports a maximum of two pools');\n  }\n\n  if (params.assets.length > 2) {\n    throw new Error(\n      'Simple flash swap only supports a maximum of to two assets (tokens)'\n    );\n  }\n}\n\nfunction createSwaps(\n  poolIds: SimpleFlashSwapParameters['poolIds'],\n  amount: string\n): BatchSwap['swaps'] {\n  return [\n    {\n      poolId: poolIds[0],\n      assetInIndex: 0,\n      assetOutIndex: 1,\n      amount,\n      userData: '0x',\n    },\n    {\n      poolId: poolIds[1],\n      assetInIndex: 1,\n      assetOutIndex: 0,\n      amount: '0',\n      userData: '0x',\n    },\n  ];\n}\n\nexport function convertSimpleFlashSwapToBatchSwapParameters({\n  poolIds,\n  assets,\n  flashLoanAmount,\n  walletAddress,\n}: SimpleFlashSwapParameters & {\n  walletAddress: string;\n}): BatchSwap {\n  checkSimpleFlashSwapParams({ poolIds, assets });\n\n  const swaps = createSwaps(poolIds, flashLoanAmount);\n\n  const funds = {\n    sender: walletAddress,\n    fromInternalBalance: false,\n    recipient: walletAddress,\n    toInternalBalance: false,\n  };\n\n  const limits = ['0', '0'];\n\n  const deadline = '999999999999999999';\n\n  return {\n    kind: SwapType.SwapExactIn,\n    swaps,\n    assets,\n    funds,\n    limits,\n    deadline,\n  };\n}\n\nfunction deltaToExpectedProfit(delta: string) {\n  return Number(delta) * -1;\n}\n\nfunction calcProfit(profits: string[]) {\n  return sum(profits);\n}\n\n/**\n * Simple interface to test if a simple flash swap is valid and see potential profits.\n *\n * A \"simple\" flash swap is an arbitrage executed with only two tokens and two pools,\n * swapping in the first pool and then back in the second pool for a profit. For more\n * complex flash swaps, you will have to use the batch swap method.\n *\n * Learn more: A [Flash Swap](https://dev.balancer.fi/resources/swaps/flash-swaps).\n *\n * _NB: This method doesn't execute a flashSwap\n *\n * @param {SimpleFlashSwapParameters}   params - BatchSwap information used for query.\n * @param {Contract}                    params.vaultContract - the ethersjs contract for the Balancer Vault.\n * @param {string}                      params.flashLoanAmount - initial input amount for the flash loan (first asset)\n * @param {string[]}                    params.poolIds - array of Balancer pool ids\n * @param {string[]}                    params.assets - array of token addresses\n * @returns {Promise<QuerySimpleFlashSwapResponse}>}       Returns an ethersjs transaction response\n */\nexport async function querySimpleFlashSwap(\n  params: QuerySimpleFlashSwapParameters\n): Promise<QuerySimpleFlashSwapResponse> {\n  checkSimpleFlashSwapParams(params);\n\n  const [tokenAddress0, tokenAddress1] = params.assets;\n\n  try {\n    const deltas = await queryBatchSwap(\n      params.vaultContract,\n      SwapType.SwapExactIn,\n      createSwaps(params.poolIds, params.flashLoanAmount),\n      params.assets\n    );\n\n    const profits = {\n      [tokenAddress0]: deltaToExpectedProfit(deltas[0]).toString(),\n      [tokenAddress1]: deltaToExpectedProfit(deltas[1]).toString(),\n    };\n\n    return {\n      profits,\n      isProfitable:\n        calcProfit([profits[tokenAddress0], profits[tokenAddress1]]) > 0,\n    };\n  } catch (err) {\n    throw `Failed to querySimpleFlashSwap: ${err}`;\n  }\n}\n","import { Vault__factory } from '@balancer-labs/typechain';\nimport vaultActionsAbi from '@/lib/abi/VaultActions.json';\nimport { JsonFragment } from '@ethersproject/abi';\nimport { networkAddresses } from '@/lib/constants/config';\n\n/**\n * Maps SOR data to get the tokenIn used in swaps.\n * Logic related to a relayer wrapping and unwrapping tokens.\n * SOR returns list of already wrapped tokenAddresses used in the swap.\n * However tokenIn defined as an input is the unwrapped token.\n * Note: tokenAddresses are transformed in SOR lib wrapInfo.setWrappedInfo\n * TODO: Once PR is merged, this table can be removed.\n */\ntype WrappedList = {\n  [key: string]: string;\n};\n\nconst underlyingToWrappedMap: WrappedList = {\n  // stETH => wstETH\n  '0xae7ab96520de3a18e5e111b5eaab095312d7fe84':\n    '0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0',\n\n  // AMPL => WAMPL\n  '0xd46ba6d942050d489dbd938a2c909a5d5039a161':\n    '0xedb171c18ce90b633db442f2a6f72874093b49ef',\n\n  // aAMPL -> ubAAMPL\n  '0x1e6bb68acec8fefbd87d192be09bb274170a0548':\n    '0xF03387d8d0FF326ab586A58E0ab4121d106147DF',\n};\n\n/**\n * Vault swaps are operating on wrapped tokens. When user is sending an unwrapped token, it's wrapped in a relayer.\n * SOR is returning an array of tokens already wrapped.\n * Converts tokenIn to match tokenIn used in a swap.\n *\n * TODO: add tokenIn and tokenOut addressed used for swap in the SOR results as tokenInForSwap, tokenOutForSwap\n *\n * @param token token address\n * @returns wrapped token address\n */\nfunction tokenForSwaps(token: string): string {\n  let wrapped = token;\n  // eslint-disable-next-line no-prototype-builtins\n  if (underlyingToWrappedMap.hasOwnProperty(token)) {\n    wrapped = underlyingToWrappedMap[token as keyof WrappedList];\n  }\n  return wrapped;\n}\n\nexport enum Relayers {\n  vault = 1,\n  lido = 2,\n}\n\nexport interface SwapRelayer {\n  id: Relayers;\n  address: string;\n}\n\n/**\n * Resolves a contract address for sending swap transaction to.\n * Balancer is using relayers to automatically wrap / unwrap tokens not compatibile with ERC20.\n */\nfunction relayerResolver(\n  assetIn: string,\n  assetOut: string,\n  chainId: number\n): SwapRelayer {\n  const { tokens, contracts } = networkAddresses(chainId);\n\n  let to = {\n    id: Relayers.vault,\n    address: contracts.vault,\n  };\n\n  if (tokens.stETH && contracts.lidoRelayer)\n    if ([assetIn, assetOut].includes(tokens.stETH))\n      to = {\n        id: Relayers.lido,\n        address: contracts.lidoRelayer,\n      };\n\n  return to;\n}\n\nfunction swapFragment(relayer: SwapRelayer): JsonFragment[] {\n  let source = Vault__factory.abi;\n  if (relayer.id === Relayers.lido) source = vaultActionsAbi;\n\n  const signatures = source.filter(\n    (fn) => fn.name && ['swap', 'batchSwap'].includes(fn.name)\n  );\n\n  return signatures;\n}\n\nfunction batchSwapFragment(\n  assetIn: string,\n  assetOut: string,\n  chainId: number\n): JsonFragment[] {\n  const vaultSignaturesForSwaps = Vault__factory.abi.filter(\n    (fn) => fn.name && ['batchSwap'].includes(fn.name)\n  );\n  const relayerSignaturesForSwaps = vaultActionsAbi.filter(\n    (fn) => fn.name && ['batchSwap'].includes(fn.name)\n  );\n  let returnSignatures = vaultSignaturesForSwaps;\n  const { tokens, contracts } = networkAddresses(chainId);\n  if (tokens.stETH && contracts.lidoRelayer) {\n    if ([assetIn, assetOut].includes(tokens.stETH))\n      returnSignatures = relayerSignaturesForSwaps;\n  }\n\n  return returnSignatures;\n}\n\nexport { tokenForSwaps, relayerResolver, swapFragment, batchSwapFragment };\n","import { SwapInfo } from '@balancer-labs/sor';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { tokenForSwaps } from './swap_utils';\nimport { SwapType } from '../types';\n\ninterface AmountForLimit {\n  amount: BigNumber;\n  max: (slippage: number) => BigNumber;\n  min: (slippage: number) => BigNumber;\n}\n\ninterface SDKSwapInfo extends SwapInfo {\n  /** Name mapping to improve readability. */\n  amountIn: BigNumber;\n  amountOut: BigNumber;\n  /** Name mapping for amounts used specifically for limits calculations. */\n  amountInForLimits: AmountForLimit;\n  amountOutForLimits: AmountForLimit;\n  /** Wrapped token addresses used in the swap. */\n  tokenInForSwaps: string;\n  tokenOutFromSwaps: string;\n}\n\n/** Applies slippage to a number */\nfunction amountForLimit(amount: BigNumber): AmountForLimit {\n  return {\n    amount,\n    max: (maxSlippage: number): BigNumber => {\n      return amount.mul(1e3 + maxSlippage).div(1e3);\n    },\n    min: (maxSlippage: number): BigNumber => {\n      return amount.mul(1e3 - maxSlippage).div(1e3);\n    },\n  };\n}\n\nfunction decorateSorSwapInfo(\n  swapInfo: SwapInfo,\n  swapType: SwapType\n): SDKSwapInfo {\n  const amountIn =\n    swapType === SwapType.SwapExactIn\n      ? swapInfo.swapAmount\n      : swapInfo.returnAmount;\n  const amountOut =\n    swapType === SwapType.SwapExactIn\n      ? swapInfo.returnAmount\n      : swapInfo.swapAmount;\n  const amountInForLimits =\n    swapType === SwapType.SwapExactIn\n      ? swapInfo.swapAmountForSwaps || swapInfo.swapAmount\n      : swapInfo.returnAmountFromSwaps || swapInfo.returnAmount;\n  const amountOutForLimits =\n    swapType === SwapType.SwapExactIn\n      ? swapInfo.returnAmountFromSwaps || swapInfo.returnAmount\n      : swapInfo.swapAmountForSwaps || swapInfo.swapAmount;\n  const tokenInForSwaps = tokenForSwaps(swapInfo.tokenIn);\n  const tokenOutFromSwaps = tokenForSwaps(swapInfo.tokenOut);\n\n  return {\n    ...swapInfo,\n    amountIn,\n    amountOut,\n    amountInForLimits: amountForLimit(amountInForLimits),\n    amountOutForLimits: amountForLimit(amountOutForLimits),\n    tokenInForSwaps,\n    tokenOutFromSwaps,\n  };\n}\n\nexport { SDKSwapInfo, tokenForSwaps, decorateSorSwapInfo };\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber';\nimport { FundManagement, SingleSwap, Swap, SwapType } from '../types';\nimport { Interface, JsonFragment } from '@ethersproject/abi';\nimport { SwapInfo } from '@balancer-labs/sor';\nimport { SDKSwapInfo, decorateSorSwapInfo } from './swap_info_decorator';\nimport { AddressZero } from '@ethersproject/constants';\nimport { swapFragment, relayerResolver, SwapRelayer } from './swap_utils';\n\nclass SingleSwapBuilder {\n  private swapInfo: SDKSwapInfo;\n  funds?: FundManagement;\n  limit?: BigNumberish;\n  deadline?: BigNumberish;\n  relayer: SwapRelayer;\n  readonly functionName = 'swap';\n\n  /**\n   * Building swap transaction data\n   *\n   * @param swapInfo SOR result\n   * @param kind\n   * @param chainId used to resolve relayer addresses\n   */\n  constructor(\n    swapInfo: SwapInfo,\n    private readonly kind: SwapType,\n    private readonly chainId: number\n  ) {\n    this.swapInfo = decorateSorSwapInfo(swapInfo, kind);\n    this.relayer = relayerResolver(\n      this.swapInfo.tokenIn,\n      this.swapInfo.tokenOut,\n      this.chainId\n    );\n  }\n\n  setFunds(sender: string, recipient?: string): void {\n    this.funds = {\n      sender,\n      recipient: recipient || sender,\n      fromInternalBalance: false,\n      toInternalBalance: false,\n    };\n  }\n\n  /**\n   * @param deadline block timestamp\n   */\n  setDeadline(deadline: BigNumber): void {\n    this.deadline = deadline.toString();\n  }\n\n  get amount(): BigNumber {\n    return this.kind === SwapType.SwapExactOut\n      ? this.swapInfo.amountOutForLimits.amount\n      : this.swapInfo.amountInForLimits.amount;\n  }\n\n  /**\n   * Calculates the limit for token amount.\n   * https://dev.balancer.fi/guides/swaps/single-swaps\n   * https://dev.balancer.fi/resources/swaps/single-swap\n   *\n   * For swap:\n   * The meaning of limit depends on the value of kind\n   *    GIVEN_IN: The minimum amount of tokens we would accept to receive from the swap.\n   *    GIVEN_OUT: The maximum amount of tokens we would be sending to swap.\n   *\n   * @param maxSlippage [bps], eg: 1 === 0.01%, 100 === 1%\n   */\n  setLimits(maxSlippage: number): void {\n    this.limit =\n      this.kind === SwapType.SwapExactIn\n        ? this.swapInfo.amountOutForLimits.min(maxSlippage).toString()\n        : this.swapInfo.amountInForLimits.max(maxSlippage).toString();\n  }\n\n  get singleSwap(): SingleSwap {\n    const poolId = this.swapInfo.swaps[0].poolId;\n    const kind = this.kind;\n    const assetIn = this.swapInfo.tokenInForSwaps;\n    const assetOut = this.swapInfo.tokenOutFromSwaps;\n    const amount = this.amount.toString();\n    const userData = '0x';\n\n    return {\n      poolId,\n      kind,\n      assetIn,\n      assetOut,\n      amount,\n      userData,\n    };\n  }\n\n  attributes(): Swap {\n    if (!this.funds || !this.limit || !this.deadline) {\n      throw new Error('Uninitialized arguments');\n    }\n\n    // TODO: Raise errors when some parameters are missing\n    let attrs: Swap = {\n      request: this.singleSwap,\n      funds: this.funds,\n      limit: this.limit,\n      deadline: this.deadline,\n    };\n\n    // TODO: Call this logic from a relayer module maybe? Do we actually need to do that?\n    // additional parameters on a contract:\n    // https://github.com/balancer-labs/balancer-v2-monorepo/blob/master/pkg/standalone-utils/contracts/relayer/VaultActions.sol#L44\n    const fragment = this.fragment();\n    if (fragment[0].inputs && fragment[0].inputs?.length > 4) {\n      attrs = {\n        ...attrs,\n        value: '0',\n        outputReference: '0',\n      };\n    }\n\n    return attrs;\n  }\n\n  data(): string {\n    const contractInterface = new Interface(this.fragment());\n\n    return contractInterface.encodeFunctionData(\n      'swap',\n      Object.values(this.attributes())\n    );\n  }\n\n  value(maxSlippage: number): BigNumber {\n    let amount = BigNumber.from(0);\n    if (this.swapInfo.tokenIn === AddressZero)\n      amount =\n        this.kind === SwapType.SwapExactIn\n          ? this.swapInfo.amountIn\n          : this.swapInfo.amountInForLimits.max(maxSlippage);\n    return amount;\n  }\n\n  to(): string {\n    return this.relayer.address;\n  }\n\n  private fragment(): JsonFragment[] {\n    return swapFragment(this.relayer).filter(\n      (f) => f.name === this.functionName\n    );\n  }\n}\n\nexport { SingleSwapBuilder };\n","import { BigNumber, BigNumberish } from '@ethersproject/bignumber';\nimport { BatchSwap, FundManagement, SwapType } from '../types';\nimport { Interface, JsonFragment } from '@ethersproject/abi';\nimport { SwapInfo } from '@balancer-labs/sor';\nimport { SDKSwapInfo, decorateSorSwapInfo } from './swap_info_decorator';\nimport { AddressZero } from '@ethersproject/constants';\nimport { swapFragment, relayerResolver, SwapRelayer } from './swap_utils';\n\nclass BatchSwapBuilder {\n  private swapInfo: SDKSwapInfo;\n  funds?: FundManagement;\n  limits?: BigNumberish[];\n  deadline?: BigNumberish;\n  relayer: SwapRelayer;\n  readonly functionName = 'batchSwap';\n\n  /**\n   * Building swap transaction data\n   *\n   * @param swapInfo SOR result\n   * @param kind\n   */\n  constructor(\n    swapInfo: SwapInfo,\n    private readonly kind: SwapType,\n    private readonly chainId: number\n  ) {\n    this.swapInfo = decorateSorSwapInfo(swapInfo, kind);\n    this.relayer = relayerResolver(\n      this.swapInfo.tokenIn,\n      this.swapInfo.tokenOut,\n      this.chainId\n    );\n  }\n\n  setFunds(sender: string, recipient?: string): void {\n    this.funds = {\n      sender,\n      recipient: recipient || sender,\n      fromInternalBalance: false,\n      toInternalBalance: false,\n    };\n  }\n\n  /**\n   * @param deadline block timestamp\n   */\n  setDeadline(deadline: BigNumber): void {\n    this.deadline = deadline;\n  }\n\n  /**\n   * Given IN it's the minimum amount we are willing to accept.\n   * Given OUT it's the fixed amount defined as output.\n   */\n  minAmountOut(maxSlippage: number): BigNumber {\n    return this.kind === SwapType.SwapExactIn\n      ? this.swapInfo.amountOutForLimits.min(maxSlippage)\n      : this.swapInfo.amountOutForLimits.amount;\n  }\n\n  /**\n   * Given IN it's the fixed amount we define as input.\n   * Given OUT it's the maximum amount we are willing to pay for the request.\n   */\n  maxAmountIn(maxSlippage: number): BigNumber {\n    return this.kind === SwapType.SwapExactOut\n      ? this.swapInfo.amountInForLimits.max(maxSlippage)\n      : this.swapInfo.amountInForLimits.amount;\n  }\n\n  /**\n   * Calculates limits for token amount.\n   * Maximum number of tokens to send is a positive number\n   * Minimum amount of tokens to receive is a negative number\n   * https://dev.balancer.fi/guides/swaps/batch-swaps\n   * https://dev.balancer.fi/resources/swaps/batch-swaps#multi-hop-examples\n   *\n   * For batchSwap:\n   * An array of of the maximum net amounts of each asset which can be taken to perform the swap.\n   * Should the total trade require more than limits[i] tokens to be taken from sender for any i\n   * then the transaction shall fail.\n   *\n   * @param maxSlippage [bps], eg: 1 === 0.01%, 100 === 1%\n   */\n  setLimits(maxSlippage: number): void {\n    // TODO: This implementation handles only a single input. We might want to extend it for multiple token inputs\n    this.limits = this.swapInfo.tokenAddresses\n      .map((token) => {\n        let amount = BigNumber.from(0);\n        if (token === this.swapInfo.tokenInForSwaps) {\n          amount = this.maxAmountIn(maxSlippage);\n        }\n        if (token === this.swapInfo.tokenOutFromSwaps) {\n          amount = this.minAmountOut(maxSlippage).mul(-1);\n        }\n        return amount;\n      })\n      .map((limit) => limit.toString().split('.')[0]);\n  }\n\n  attributes(): BatchSwap {\n    // TODO: Raise errors when some parameters are missing\n    if (!this.funds || !this.limits || !this.deadline) {\n      throw new Error('Uninitialized arguments');\n    }\n\n    let attrs: BatchSwap = {\n      kind: this.kind,\n      swaps: this.swapInfo.swaps,\n      assets: this.swapInfo.tokenAddresses,\n      funds: this.funds,\n      limits: this.limits,\n      deadline: this.deadline,\n    };\n\n    const fragment = this.fragment();\n\n    // TODO: Call this logic from a relayer module maybe? Do we actually need to do that?\n    // additional parameters on a contract:\n    // https://github.com/balancer-labs/balancer-v2-monorepo/blob/master/pkg/standalone-utils/contracts/relayer/VaultActions.sol#L67\n    if (fragment[0].inputs && fragment[0].inputs?.length > 6) {\n      attrs = {\n        ...attrs,\n        value: '0',\n        outputReferences: [],\n      };\n    }\n\n    return attrs;\n  }\n\n  data(): string {\n    const contractInterface = new Interface(this.fragment());\n\n    return contractInterface.encodeFunctionData(\n      'batchSwap',\n      Object.values(this.attributes())\n    );\n  }\n\n  value(maxSlippage: number): BigNumber {\n    let amount = BigNumber.from(0);\n    if (this.swapInfo.tokenIn === AddressZero)\n      amount = this.maxAmountIn(maxSlippage);\n    return amount;\n  }\n\n  to(): string {\n    return this.relayer.address;\n  }\n\n  private fragment(): JsonFragment[] {\n    return swapFragment(this.relayer).filter(\n      (f) => f.name === this.functionName\n    );\n  }\n}\n\nexport { BatchSwapBuilder };\n","import { SOR, SubgraphPoolBase, SwapInfo, SwapTypes } from '@balancer-labs/sor';\nimport { Vault__factory, Vault } from '@balancer-labs/typechain';\nimport {\n  BatchSwap,\n  QuerySimpleFlashSwapParameters,\n  QuerySimpleFlashSwapResponse,\n  QueryWithSorInput,\n  QueryWithSorOutput,\n  SimpleFlashSwapParameters,\n  FindRouteParameters,\n  BuildTransactionParameters,\n  SwapAttributes,\n  SwapType,\n} from './types';\nimport {\n  queryBatchSwap,\n  queryBatchSwapWithSor,\n  getSorSwapInfo,\n} from './queryBatchSwap';\nimport { balancerVault } from '@/lib/constants/config';\nimport { getLimitsForSlippage } from './helpers';\nimport { BalancerSdkConfig } from '@/types';\nimport { SwapInput } from './types';\nimport { Sor } from '@/modules/sor/sor.module';\nimport {\n  convertSimpleFlashSwapToBatchSwapParameters,\n  querySimpleFlashSwap,\n} from './flashSwap';\nimport {\n  SingleSwapBuilder,\n  BatchSwapBuilder,\n} from '@/modules/swaps/swap_builder';\n\nexport class Swaps {\n  readonly sor: SOR;\n  chainId: number;\n  vaultContract: Vault;\n\n  // TODO: sorOrConfig - let's make it more predictable and always pass configuration explicitly\n  constructor(sorOrConfig: SOR | BalancerSdkConfig) {\n    if (sorOrConfig instanceof SOR) {\n      this.sor = sorOrConfig;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.chainId = (<any>this.sor.provider)['_network']['chainId'];\n    } else {\n      this.sor = new Sor(sorOrConfig);\n      this.chainId = sorOrConfig.network as number;\n    }\n\n    this.vaultContract = Vault__factory.connect(\n      balancerVault,\n      this.sor.provider\n    );\n  }\n\n  static getLimitsForSlippage(\n    tokensIn: string[],\n    tokensOut: string[],\n    swapType: SwapType,\n    deltas: string[],\n    assets: string[],\n    slippage: string\n  ): string[] {\n    // TO DO - Check best way to do this?\n    const limits = getLimitsForSlippage(\n      tokensIn,\n      tokensOut,\n      swapType,\n      deltas,\n      assets,\n      slippage\n    );\n\n    return limits.map((l) => l.toString());\n  }\n\n  /**\n   * Uses SOR to find optimal route for a trading pair and amount\n   *\n   * @param FindRouteParameters\n   * @param FindRouteParameters.tokenIn Address\n   * @param FindRouteParameters.tokenOut Address\n   * @param FindRouteParameters.amount BigNumber with a trade amount\n   * @param FindRouteParameters.gasPrice BigNumber current gas price\n   * @param FindRouteParameters.maxPools number of pool included in path\n   * @returns Best trade route information\n   */\n  async findRouteGivenIn({\n    tokenIn,\n    tokenOut,\n    amount,\n    gasPrice,\n    maxPools = 4,\n  }: FindRouteParameters): Promise<SwapInfo> {\n    return this.sor.getSwaps(tokenIn, tokenOut, SwapTypes.SwapExactIn, amount, {\n      gasPrice,\n      maxPools,\n    });\n  }\n\n  /**\n   * Uses SOR to find optimal route for a trading pair and amount\n   *\n   * @param FindRouteParameters\n   * @param FindRouteParameters.tokenIn Address\n   * @param FindRouteParameters.tokenOut Address\n   * @param FindRouteParameters.amount BigNumber with a trade amount\n   * @param FindRouteParameters.gasPrice BigNumber current gas price\n   * @param FindRouteParameters.maxPools number of pool included in path\n   * @returns Best trade route information\n   */\n  async findRouteGivenOut({\n    tokenIn,\n    tokenOut,\n    amount,\n    gasPrice,\n    maxPools,\n  }: FindRouteParameters): Promise<SwapInfo> {\n    return this.sor.getSwaps(\n      tokenIn,\n      tokenOut,\n      SwapTypes.SwapExactOut,\n      amount,\n      {\n        gasPrice,\n        maxPools,\n      }\n    );\n  }\n\n  /**\n   * Uses SOR to find optimal route for a trading pair and amount\n   *\n   * @param BuildTransactionParameters\n   * @param BuildTransactionParameters.userAddress Address\n   * @param BuildTransactionParameters.swapInfo result of route finding\n   * @param BuildTransactionParameters.kind 0 - givenIn, 1 - givenOut\n   * @param BuildTransactionParameters.deadline BigNumber block timestamp\n   * @param BuildTransactionParameters.maxSlippage [bps], eg: 1 === 0.01%, 100 === 1%\n   * @returns transaction request ready to send with signer.sendTransaction\n   */\n  buildSwap({\n    userAddress,\n    recipient,\n    swapInfo,\n    kind,\n    deadline,\n    maxSlippage,\n  }: BuildTransactionParameters): SwapAttributes {\n    if (!this.chainId) throw 'Missing network configuration';\n\n    // one vs batch (gas cost optimisation when using single swap)\n    const builder =\n      swapInfo.swaps.length > 1\n        ? new BatchSwapBuilder(swapInfo, kind, this.chainId)\n        : new SingleSwapBuilder(swapInfo, kind, this.chainId);\n    builder.setFunds(userAddress, recipient);\n    builder.setDeadline(deadline);\n    builder.setLimits(maxSlippage);\n\n    const to = builder.to();\n    const { functionName } = builder;\n    const attributes = builder.attributes();\n    const data = builder.data();\n    const value = builder.value(maxSlippage);\n\n    return { to, functionName, attributes, data, value };\n  }\n\n  /**\n   * Encode batchSwap in an ABI byte string\n   *\n   * [See method for a batchSwap](https://dev.balancer.fi/references/contracts/apis/the-vault#batch-swaps).\n   *\n   * _NB: This method doesn't execute a batchSwap -- it returns an [ABI byte string](https://docs.soliditylang.org/en/latest/abi-spec.html)\n   * containing the data of the function call on a contract, which can then be sent to the network to be executed.\n   * (ex. [sendTransaction](https://web3js.readthedocs.io/en/v1.2.11/web3-eth.html#sendtransaction)).\n   *\n   * @param {BatchSwap}           batchSwap - BatchSwap information used for query.\n   * @param {SwapType}            batchSwap.kind - either exactIn or exactOut\n   * @param {BatchSwapSteps[]}    batchSwap.swaps - sequence of swaps\n   * @param {string[]}            batchSwap.assets - array contains the addresses of all assets involved in the swaps\n   * @param {FundManagement}      batchSwap.funds - object containing information about where funds should be taken/sent\n   * @param {number[]}            batchSwap.limits - limits for each token involved in the swap, where either the maximum number of tokens to send (by passing a positive value) or the minimum amount of tokens to receive (by passing a negative value) is specified\n   * @param {string}              batchSwap.deadline -  time (in Unix timestamp) after which it will no longer attempt to make a trade\n   * @returns {string}            encodedBatchSwapData - Returns an ABI byte string containing the data of the function call on a contract\n   */\n  static encodeBatchSwap(batchSwap: BatchSwap): string {\n    const vaultInterface = Vault__factory.createInterface();\n\n    return vaultInterface.encodeFunctionData('batchSwap', [\n      batchSwap.kind,\n      batchSwap.swaps,\n      batchSwap.assets,\n      batchSwap.funds,\n      batchSwap.limits,\n      batchSwap.deadline,\n    ]);\n  }\n\n  /**\n   * Encode simple flash swap into a ABI byte string\n   *\n   * A \"simple\" flash swap is an arbitrage executed with only two tokens and two pools,\n   * swapping in the first pool and then back in the second pool for a profit. For more\n   * complex flash swaps, you will have to use the batch swap method.\n   *\n   * Learn more: A [Flash Swap](https://dev.balancer.fi/resources/swaps/flash-swaps).\n   *\n   * @param {SimpleFlashSwapParameters}   params - BatchSwap information used for query.\n   * @param {string}                      params.flashLoanAmount - initial input amount for the flash loan (first asset)\n   * @param {string[]}                    params.poolIds - array of Balancer pool ids\n   * @param {string[]}                    params.assets - array of token addresses\n   * @param {string}                      params.walletAddress - array of token addresses\n   * @returns {string}                    encodedBatchSwapData - Returns an ABI byte string containing the data of the function call on a contract\n   */\n  static encodeSimpleFlashSwap(params: SimpleFlashSwapParameters): string {\n    return this.encodeBatchSwap(\n      convertSimpleFlashSwapToBatchSwapParameters(params)\n    );\n  }\n\n  /**\n   * fetchPools saves updated pools data to SOR internal onChainBalanceCache.\n   * @param {SubgraphPoolBase[]} [poolsData=[]] If poolsData passed uses this as pools source otherwise fetches from config.subgraphUrl.\n   * @param {boolean} [isOnChain=true] If isOnChain is true will retrieve all required onChain data via multicall otherwise uses subgraph values.\n   * @returns {boolean} Boolean indicating whether pools data was fetched correctly (true) or not (false).\n   */\n  async fetchPools(): Promise<boolean> {\n    return this.sor.fetchPools();\n  }\n\n  public getPools(): SubgraphPoolBase[] {\n    return this.sor.getPools();\n  }\n\n  /**\n   * queryBatchSwap simulates a call to `batchSwap`, returning an array of Vault asset deltas.\n   * @param batchSwap - BatchSwap information used for query.\n   * @param {SwapType} batchSwap.kind - either exactIn or exactOut.\n   * @param {BatchSwapStep[]} batchSwap.swaps - sequence of swaps.\n   * @param {string[]} batchSwap.assets - array contains the addresses of all assets involved in the swaps.\n   * @returns {Promise<string[]>} Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n   * Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n   * the same index in the `assets` array.\n   */\n  async queryBatchSwap(\n    batchSwap: Pick<BatchSwap, 'kind' | 'swaps' | 'assets'>\n  ): Promise<string[]> {\n    return await queryBatchSwap(\n      this.vaultContract,\n      batchSwap.kind,\n      batchSwap.swaps,\n      batchSwap.assets\n    );\n  }\n\n  /**\n   * Uses SOR to create and query a batchSwap.\n   * @param {QueryWithSorInput} queryWithSor - Swap information used for querying using SOR.\n   * @param {string[]} queryWithSor.tokensIn - Array of addresses of assets in.\n   * @param {string[]} queryWithSor.tokensOut - Array of addresses of assets out.\n   * @param {SwapType} queryWithSor.swapType - Type of Swap, ExactIn/Out.\n   * @param {string[]} queryWithSor.amounts - Array of amounts used in swap.\n   * @param {FetchPoolsInput} queryWithSor.fetchPools - Set whether SOR will fetch updated pool info.\n   * @returns {Promise<QueryWithSorOutput>} Returns amount of tokens swaps along with swap and asset info that can be submitted to a batchSwap call.\n   */\n  async queryBatchSwapWithSor(\n    queryWithSor: QueryWithSorInput\n  ): Promise<QueryWithSorOutput> {\n    return await queryBatchSwapWithSor(\n      this.sor,\n      this.vaultContract,\n      queryWithSor\n    );\n  }\n\n  /**\n   * Simple interface to test if a simple flash swap is valid and see potential profits.\n   *\n   * A \"simple\" flash swap is an arbitrage executed with only two tokens and two pools,\n   * swapping in the first pool and then back in the second pool for a profit. For more\n   * complex flash swaps, you will have to use the batch swap method.\n   *\n   * Learn more: A [Flash Swap](https://dev.balancer.fi/resources/swaps/flash-swaps).\n   *\n   * _NB: This method doesn't execute a flashSwap\n   *\n   * @param {SimpleFlashSwapParameters}   params - BatchSwap information used for query.\n   * @param {string}                      params.flashLoanAmount - initial input amount for the flash loan (first asset)\n   * @param {string[]}                    params.poolIds - array of Balancer pool ids\n   * @param {string[]}                    params.assets - array of token addresses\n   * @returns {Promise<{profits: Record<string, string>, isProfitable: boolean}>}       Returns an ethersjs transaction response\n   */\n  async querySimpleFlashSwap(\n    params: Omit<QuerySimpleFlashSwapParameters, 'vaultContract'>\n  ): Promise<QuerySimpleFlashSwapResponse> {\n    return await querySimpleFlashSwap({\n      ...params,\n      vaultContract: this.vaultContract,\n    });\n  }\n\n  /**\n   * Use SOR to get swapInfo for tokenIn<>tokenOut.\n   * @param {SwapInput} swapInput - Swap information used for querying using SOR.\n   * @param {string} swapInput.tokenIn - Addresse of asset in.\n   * @param {string} swapInput.tokenOut - Addresse of asset out.\n   * @param {SwapType} swapInput.swapType - Type of Swap, ExactIn/Out.\n   * @param {string} swapInput.amount - Amount used in swap.\n   * @returns {Promise<SwapInfo>} SOR swap info.\n   */\n  async getSorSwap(swapInput: SwapInput): Promise<SwapInfo> {\n    return await getSorSwapInfo(\n      swapInput.tokenIn,\n      swapInput.tokenOut,\n      swapInput.swapType,\n      swapInput.amount,\n      this.sor\n    );\n  }\n}\n","import { BigNumberish, BigNumber } from '@ethersproject/bignumber';\nimport { Interface } from '@ethersproject/abi';\nimport { MaxUint256, WeiPerEther, Zero } from '@ethersproject/constants';\n\nimport { Swaps } from '@/modules/swaps/swaps.module';\nimport { BalancerError, BalancerErrorCode } from '@/balancerErrors';\nimport {\n  EncodeBatchSwapInput,\n  EncodeUnwrapAaveStaticTokenInput,\n  OutputReference,\n  EncodeExitPoolInput,\n  ExitAndBatchSwapInput,\n  ExitPoolData,\n} from './types';\nimport { TransactionData, ExitPoolRequest, BalancerSdkConfig } from '@/types';\nimport {\n  SwapType,\n  FundManagement,\n  BatchSwapStep,\n  FetchPoolsInput,\n} from '../swaps/types';\nimport { SubgraphPoolBase } from '@balancer-labs/sor';\n\nimport relayerLibraryAbi from '@/lib/abi/VaultActions.json';\nimport aaveWrappingAbi from '@/lib/abi/AaveWrapping.json';\n\nexport * from './types';\n\nexport class Relayer {\n  private readonly swaps: Swaps;\n\n  static CHAINED_REFERENCE_PREFIX = 'ba10';\n\n  constructor(swapsOrConfig: Swaps | BalancerSdkConfig) {\n    if (swapsOrConfig instanceof Swaps) {\n      this.swaps = swapsOrConfig;\n    } else {\n      this.swaps = new Swaps(swapsOrConfig);\n    }\n  }\n\n  static encodeBatchSwap(params: EncodeBatchSwapInput): string {\n    const relayerLibrary = new Interface(relayerLibraryAbi);\n\n    return relayerLibrary.encodeFunctionData('batchSwap', [\n      params.swapType,\n      params.swaps,\n      params.assets,\n      params.funds,\n      params.limits,\n      params.deadline,\n      params.value,\n      params.outputReferences,\n    ]);\n  }\n\n  static encodeExitPool(params: EncodeExitPoolInput): string {\n    const relayerLibrary = new Interface(relayerLibraryAbi);\n\n    return relayerLibrary.encodeFunctionData('exitPool', [\n      params.poolId,\n      params.poolKind,\n      params.sender,\n      params.recipient,\n      params.exitPoolRequest,\n      params.outputReferences,\n    ]);\n  }\n\n  static encodeUnwrapAaveStaticToken(\n    params: EncodeUnwrapAaveStaticTokenInput\n  ): string {\n    const aaveWrappingLibrary = new Interface(aaveWrappingAbi);\n\n    return aaveWrappingLibrary.encodeFunctionData('unwrapAaveStaticToken', [\n      params.staticToken,\n      params.sender,\n      params.recipient,\n      params.amount,\n      params.toUnderlying,\n      params.outputReferences,\n    ]);\n  }\n\n  static toChainedReference(key: BigNumberish): BigNumber {\n    // The full padded prefix is 66 characters long, with 64 hex characters and the 0x prefix.\n    const paddedPrefix = `0x${Relayer.CHAINED_REFERENCE_PREFIX}${'0'.repeat(\n      64 - Relayer.CHAINED_REFERENCE_PREFIX.length\n    )}`;\n    return BigNumber.from(paddedPrefix).add(key);\n  }\n\n  static constructExitCall(params: ExitPoolData): string {\n    const {\n      assets,\n      minAmountsOut,\n      userData,\n      toInternalBalance,\n      poolId,\n      poolKind,\n      sender,\n      recipient,\n      outputReferences,\n    } = params;\n\n    const exitPoolRequest: ExitPoolRequest = {\n      assets,\n      minAmountsOut,\n      userData,\n      toInternalBalance,\n    };\n\n    const exitPoolInput: EncodeExitPoolInput = {\n      poolId,\n      poolKind,\n      sender,\n      recipient,\n      outputReferences,\n      exitPoolRequest,\n    };\n\n    const exitEncoded = Relayer.encodeExitPool(exitPoolInput);\n    return exitEncoded;\n  }\n\n  /**\n   * fetchPools saves updated pools data to SOR internal onChainBalanceCache.\n   * @param {SubgraphPoolBase[]} [poolsData=[]] If poolsData passed uses this as pools source otherwise fetches from config.subgraphUrl.\n   * @param {boolean} [isOnChain=true] If isOnChain is true will retrieve all required onChain data via multicall otherwise uses subgraph values.\n   * @returns {boolean} Boolean indicating whether pools data was fetched correctly (true) or not (false).\n   */\n  async fetchPools(): Promise<boolean> {\n    return this.swaps.fetchPools();\n  }\n\n  public getPools(): SubgraphPoolBase[] {\n    return this.swaps.getPools();\n  }\n\n  /**\n   * exitPoolAndBatchSwap Chains poolExit with batchSwap to final tokens.\n   * @param {ExitAndBatchSwapInput} params\n   * @param {string} exiter - Address used to exit pool.\n   * @param {string} swapRecipient - Address that receives final tokens.\n   * @param {string} poolId - Id of pool being exited.\n   * @param {string[]} exitTokens - Array containing addresses of tokens to receive after exiting pool. (must have the same length and order as the array returned by `getPoolTokens`.)\n   * @param {string} userData - Encoded exitPool data.\n   * @param {string[]} expectedAmountsOut - Expected amounts of exitTokens to receive when exiting pool.\n   * @param {string[]} finalTokensOut - Array containing the addresses of the final tokens out.\n   * @param {string} slippage - Slippage to be applied to swap section. i.e. 5%=50000000000000000.\n   * @param {FetchPoolsInput} fetchPools - Set whether SOR will fetch updated pool info.\n   * @returns Transaction data with calldata. Outputs.amountsOut has amounts of finalTokensOut returned.\n   */\n  async exitPoolAndBatchSwap(\n    params: ExitAndBatchSwapInput\n  ): Promise<TransactionData> {\n    const slippageAmountNegative = WeiPerEther.sub(\n      BigNumber.from(params.slippage)\n    );\n    // Set min amounts out of exit pool based on slippage\n    const minAmountsOut = params.expectedAmountsOut.map((amt) =>\n      BigNumber.from(amt)\n        .mul(slippageAmountNegative)\n        .div(WeiPerEther)\n        .toString()\n    );\n\n    // Output of exit is used as input to swaps\n    const outputReferences: OutputReference[] = [];\n    params.exitTokens.forEach((asset, i) => {\n      const key = Relayer.toChainedReference(i);\n      outputReferences.push({\n        index: i,\n        key: key,\n      });\n    });\n\n    const exitCall = Relayer.constructExitCall({\n      assets: params.exitTokens,\n      minAmountsOut,\n      userData: params.userData,\n      toInternalBalance: true, // Creates exitPool request with exit to internal balance to save gas for following swaps\n      poolId: params.poolId,\n      poolKind: 0, // This will always be 0 to match supported Relayer types\n      sender: params.exiter,\n      recipient: params.exiter,\n      outputReferences: outputReferences,\n      exitPoolRequest: {} as ExitPoolRequest,\n    });\n\n    // Use swapsService to get swap info for exitTokens>finalTokens\n    // This will give batchSwap swap paths\n    // Amounts out will be worst case amounts\n    const queryResult = await this.swaps.queryBatchSwapWithSor({\n      tokensIn: params.exitTokens,\n      tokensOut: params.finalTokensOut,\n      swapType: SwapType.SwapExactIn,\n      amounts: minAmountsOut, // Use minAmountsOut as input to swap to account for slippage\n      fetchPools: params.fetchPools,\n    });\n\n    // This is a safety check to avoid issues when a swap path exists with 0 value\n    if (queryResult.returnAmounts.includes('0'))\n      throw new BalancerError(BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);\n\n    // Update swap amounts with ref outputs from exitPool\n    queryResult.swaps.forEach((swap) => {\n      const token = queryResult.assets[swap.assetInIndex];\n      const index = params.exitTokens.indexOf(token);\n      if (index !== -1) swap.amount = outputReferences[index].key.toString();\n    });\n\n    // const tempDeltas = ['10096980', '0', '0', '10199896999999482390', '0']; // Useful for debug\n\n    // Replace tokenIn delta for swaps with amount + slippage.\n    // This gives tolerance for limit incase amount out of exitPool is larger min,\n    const slippageAmountPositive = WeiPerEther.add(params.slippage);\n    params.exitTokens.forEach((exitToken, i) => {\n      const index = queryResult.assets\n        .map((elem) => elem.toLowerCase())\n        .indexOf(exitToken.toLowerCase());\n      if (index !== -1) {\n        queryResult.deltas[index] = BigNumber.from(params.expectedAmountsOut[i])\n          .mul(slippageAmountPositive)\n          .div(WeiPerEther)\n          .toString();\n      }\n    });\n\n    // Creates limit array.\n    // Slippage set to 0. Already accounted for as swap used amounts out of pool with worst case slippage.\n    const limits = Swaps.getLimitsForSlippage(\n      params.exitTokens, // tokensIn\n      params.finalTokensOut, // tokensOut\n      SwapType.SwapExactIn,\n      queryResult.deltas, // tempDeltas // Useful for debug\n      queryResult.assets,\n      '0'\n    );\n\n    // Creates fund management using internal balance as source of tokens\n    const funds: FundManagement = {\n      sender: params.exiter,\n      recipient: params.swapRecipient,\n      fromInternalBalance: true,\n      toInternalBalance: false,\n    };\n\n    const encodedBatchSwap = Relayer.encodeBatchSwap({\n      swapType: SwapType.SwapExactIn,\n      swaps: queryResult.swaps,\n      assets: queryResult.assets,\n      funds: funds,\n      limits: limits.map((l) => l.toString()),\n      deadline: MaxUint256,\n      value: '0',\n      outputReferences: [],\n    });\n\n    // Return amounts from swap\n    const calls = [exitCall, encodedBatchSwap];\n    return {\n      function: 'multicall',\n      params: calls,\n      outputs: {\n        amountsOut: queryResult.returnAmounts,\n      },\n    };\n  }\n\n  /**\n   * swapUnwrapAaveStaticExactIn Finds swaps for tokenIn>wrapped Aave static tokens and chains with unwrap to underlying stable.\n   * @param {string[]} tokensIn - array to token addresses for swapping as tokens in.\n   * @param {string[]} aaveStaticTokens - array contains the addresses of the Aave static tokens that tokenIn will be swapped to. These will be unwrapped.\n   * @param {string[]} amountsIn - amounts to be swapped for each token in.\n   * @param {string[]} rates - The rate used to convert wrappedToken to underlying.\n   * @param {FundManagement} funds - Funding info for swap. Note - recipient should be relayer and sender should be caller.\n   * @param {string} slippage - Slippage to be applied to swap section. i.e. 5%=50000000000000000.\n   * @param {FetchPoolsInput} fetchPools - Set whether SOR will fetch updated pool info.\n   * @returns Transaction data with calldata. Outputs.amountsOut has final amounts out of unwrapped tokens.\n   */\n  async swapUnwrapAaveStaticExactIn(\n    tokensIn: string[],\n    aaveStaticTokens: string[],\n    amountsIn: string[],\n    rates: string[],\n    funds: FundManagement,\n    slippage: string,\n    fetchPools: FetchPoolsInput = {\n      fetchPools: true,\n      fetchOnChain: false,\n    }\n  ): Promise<TransactionData> {\n    // Use swapsService to get swap info for tokensIn>wrappedTokens\n    const queryResult = await this.swaps.queryBatchSwapWithSor({\n      tokensIn,\n      tokensOut: aaveStaticTokens,\n      swapType: SwapType.SwapExactIn,\n      amounts: amountsIn,\n      fetchPools,\n    });\n\n    // This is a safety check to avoid issues when a swap path exists with 0 value\n    if (queryResult.returnAmounts.includes('0'))\n      throw new BalancerError(BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);\n\n    // Gets limits array for tokensIn>wrappedTokens based on input slippage\n    const limits = Swaps.getLimitsForSlippage(\n      tokensIn, // tokensIn\n      aaveStaticTokens, // tokensOut\n      SwapType.SwapExactIn,\n      queryResult.deltas,\n      queryResult.assets,\n      slippage\n    );\n\n    const calls = this.encodeSwapUnwrap(\n      aaveStaticTokens,\n      SwapType.SwapExactIn,\n      queryResult.swaps,\n      queryResult.assets,\n      funds,\n      limits\n    );\n\n    const amountsUnwrapped = queryResult.returnAmounts.map(\n      (amountWrapped, i) => {\n        const amountUnwrapped = BigNumber.from(amountWrapped)\n          .abs()\n          .mul(rates[i])\n          .div(WeiPerEther);\n\n        // This is a safety check to avoid issues when a swap path exists with 0 value\n        if (!amountUnwrapped.gt(Zero))\n          throw new BalancerError(BalancerErrorCode.UNWRAP_ZERO_AMOUNT);\n\n        return amountUnwrapped.toString();\n      }\n    );\n\n    return {\n      function: 'multicall',\n      params: calls,\n      outputs: {\n        amountsOut: amountsUnwrapped,\n      },\n    };\n  }\n\n  /**\n   * swapUnwrapAaveStaticExactOut Finds swaps for tokenIn>wrapped Aave static tokens and chains with unwrap to underlying stable.\n   * @param {string[]} tokensIn - array to token addresses for swapping as tokens in.\n   * @param {string[]} aaveStaticTokens - array contains the addresses of the Aave static tokens that tokenIn will be swapped to. These will be unwrapped.\n   * @param {string[]} amountsUnwrapped - amounts of unwrapped tokens out.\n   * @param {string[]} rates - The rate used to convert wrappedToken to underlying.\n   * @param {FundManagement} funds - Funding info for swap. Note - recipient should be relayer and sender should be caller.\n   * @param {string} slippage - Slippage to be applied to swap section. i.e. 5%=50000000000000000.\n   * @param {FetchPoolsInput} fetchPools - Set whether SOR will fetch updated pool info.\n   * @returns Transaction data with calldata. Outputs.amountsIn has the amounts of tokensIn.\n   */\n  async swapUnwrapAaveStaticExactOut(\n    tokensIn: string[],\n    aaveStaticTokens: string[],\n    amountsUnwrapped: string[],\n    rates: string[],\n    funds: FundManagement,\n    slippage: string,\n    fetchPools: FetchPoolsInput = {\n      fetchPools: true,\n      fetchOnChain: false,\n    }\n  ): Promise<TransactionData> {\n    const amountsWrapped = amountsUnwrapped.map((amountInwrapped, i) => {\n      const amountWrapped = BigNumber.from(amountInwrapped)\n        .mul(WeiPerEther)\n        .div(rates[i]);\n\n      // This is a safety check to avoid issues when a swap path exists with 0 value\n      if (!amountWrapped.gt(Zero))\n        throw new BalancerError(BalancerErrorCode.WRAP_ZERO_AMOUNT);\n\n      return amountWrapped.toString();\n    });\n\n    // Use swapsService to get swap info for tokensIn>wrappedTokens\n    const queryResult = await this.swaps.queryBatchSwapWithSor({\n      tokensIn,\n      tokensOut: aaveStaticTokens,\n      swapType: SwapType.SwapExactOut,\n      amounts: amountsWrapped,\n      fetchPools,\n    });\n\n    // This is a safety check to avoid issues when a swap path exists with 0 value\n    if (queryResult.returnAmounts.includes('0'))\n      throw new BalancerError(BalancerErrorCode.SWAP_ZERO_RETURN_AMOUNT);\n\n    // Gets limits array for tokensIn>wrappedTokens based on input slippage\n    const limits = Swaps.getLimitsForSlippage(\n      tokensIn, // tokensIn\n      aaveStaticTokens, // tokensOut\n      SwapType.SwapExactOut,\n      queryResult.deltas,\n      queryResult.assets,\n      slippage\n    );\n\n    const calls = this.encodeSwapUnwrap(\n      aaveStaticTokens,\n      SwapType.SwapExactOut,\n      queryResult.swaps,\n      queryResult.assets,\n      funds,\n      limits\n    );\n\n    return {\n      function: 'multicall',\n      params: calls,\n      outputs: {\n        amountsIn: queryResult.returnAmounts.map((amount) => amount.toString()),\n      },\n    };\n  }\n\n  /**\n   * Creates encoded multicalls using swap outputs as input amounts for token unwrap.\n   * @param wrappedTokens\n   * @param swapType\n   * @param swaps\n   * @param assets\n   * @param funds\n   * @param limits\n   * @returns\n   */\n  encodeSwapUnwrap(\n    wrappedTokens: string[],\n    swapType: SwapType,\n    swaps: BatchSwapStep[],\n    assets: string[],\n    funds: FundManagement,\n    limits: BigNumberish[]\n  ): string[] {\n    // Output of swaps (wrappedTokens) is used as input to unwrap\n    // Need indices of output tokens and outputReferences need to be made with those as key\n    const outputReferences: OutputReference[] = [];\n    const unwrapCalls: string[] = [];\n    wrappedTokens.forEach((wrappedToken, i) => {\n      // Find index of wrappedToken in asset array. This is used as ref in Relayer.\n      const index = assets.findIndex(\n        (token) => token.toLowerCase() === wrappedToken.toLowerCase()\n      );\n      // There may be cases where swap isn't possible for wrappedToken\n      if (index === -1) return;\n\n      const key = Relayer.toChainedReference(i);\n\n      outputReferences.push({\n        index: index,\n        key: key,\n      });\n\n      // console.log(`Unwrapping ${wrappedToken} with amt: ${key.toHexString()}`);\n\n      const encodedUnwrap = Relayer.encodeUnwrapAaveStaticToken({\n        staticToken: wrappedToken,\n        sender: funds.recipient, // This should be relayer\n        recipient: funds.sender, // This will be caller\n        amount: key, // Use output of swap as input for unwrap\n        toUnderlying: true,\n        outputReferences: 0,\n      });\n\n      unwrapCalls.push(encodedUnwrap);\n    });\n\n    const encodedBatchSwap = Relayer.encodeBatchSwap({\n      swapType: swapType,\n      swaps: swaps,\n      assets: assets,\n      funds: funds, // Note - this should have Relayer as recipient\n      limits: limits.map((l) => l.toString()),\n      deadline: MaxUint256,\n      value: '0',\n      outputReferences: outputReferences,\n    });\n\n    return [encodedBatchSwap, ...unwrapCalls];\n  }\n}\n","import { BalancerSdkConfig } from '@/types';\nimport { GraphQLClient } from 'graphql-request';\nimport { getNetworkConfig } from '../sdk.helpers';\nimport { getSdk } from './generated/balancer-subgraph-types';\nimport { SubgraphClient } from './subgraph';\n\nexport class Subgraph {\n  public readonly url: string;\n  public readonly client: SubgraphClient;\n\n  constructor(config: BalancerSdkConfig) {\n    this.url = getNetworkConfig(config).urls.subgraph;\n    this.client = this.initClient();\n  }\n\n  private initClient(): SubgraphClient {\n    const client = new GraphQLClient(this.url);\n    return getSdk(client);\n  }\n}\n","import { Swaps } from '@/modules/swaps/swaps.module';\nimport { BalancerSdkConfig, PoolType } from '@/types';\nimport {\n  SubgraphPoolBase,\n  ZERO,\n  parseToPoolsDict,\n  getSpotPriceAfterSwapForPath,\n} from '@balancer-labs/sor';\nimport { BalancerError, BalancerErrorCode } from '@/balancerErrors';\nimport { PoolTypeConcerns } from '@/modules/pools/pool-type-concerns';\n\nexport class Pricing {\n  private readonly swaps: Swaps;\n  private pools: PoolTypeConcerns;\n\n  constructor(config: BalancerSdkConfig, swaps?: Swaps) {\n    if (swaps) {\n      this.swaps = swaps;\n    } else {\n      this.swaps = new Swaps(config);\n    }\n    this.pools = new PoolTypeConcerns(config);\n  }\n\n  /**\n   * Retrieves pools using poolDataService.\n   * @returns {boolean} Boolean indicating whether pools data was fetched correctly (true) or not (false).\n   */\n  async fetchPools(): Promise<boolean> {\n    return this.swaps.fetchPools();\n  }\n\n  /**\n   * Get currently saved pools list (fetched using fetchPools()).\n   * @returns {SubgraphPoolBase[]} pools list.\n   */\n  public getPools(): SubgraphPoolBase[] {\n    return this.swaps.getPools();\n  }\n\n  /**\n   * Calculates Spot Price for a token pair - for specific pool if ID otherwise finds most liquid path and uses this as reference SP.\n   * @param { string } tokenIn Token in address.\n   * @param { string } tokenOut Token out address.\n   * @param { string } poolId Optional - if specified this pool will be used for SP calculation.\n   * @param { SubgraphPoolBase[] } pools Optional - Pool data. Will be fetched via dataProvider if not supplied.\n   * @returns  { string } Spot price.\n   */\n  async getSpotPrice(\n    tokenIn: string,\n    tokenOut: string,\n    poolId = '',\n    pools: SubgraphPoolBase[] = []\n  ): Promise<string> {\n    // If pools list isn't supplied fetch it from swaps data provider\n    if (pools.length === 0) {\n      await this.fetchPools();\n      pools = this.getPools();\n    }\n\n    // If a poolId isn't specified we find the path for the pair with the highest liquidity and use this as the ref SP\n    if (poolId === '') {\n      const poolsDict = parseToPoolsDict(pools, 0);\n      // This creates all paths for tokenIn>Out ordered by liquidity\n      const paths = this.swaps.sor.routeProposer.getCandidatePathsFromDict(\n        tokenIn,\n        tokenOut,\n        0,\n        poolsDict,\n        4\n      );\n\n      if (paths.length === 0)\n        throw new BalancerError(BalancerErrorCode.UNSUPPORTED_PAIR);\n      return getSpotPriceAfterSwapForPath(paths[0], 0, ZERO).toString();\n    } else {\n      // Find pool of interest from pools list\n      const poolData = pools.find(\n        (p) => p.id.toLowerCase() === poolId.toLowerCase()\n      );\n      if (!poolData)\n        throw new BalancerError(BalancerErrorCode.POOL_DOESNT_EXIST);\n      const pool = PoolTypeConcerns.from(poolData.poolType as PoolType);\n      return pool.spotPriceCalculator.calcPoolSpotPrice(\n        tokenIn,\n        tokenOut,\n        poolData\n      );\n    }\n  }\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { Provider } from '@ethersproject/providers';\nimport abi from '../../lib/abi/ERC20.json';\n\nexport const ERC20 = (address: string, provider: Provider): Contract =>\n  new Contract(address, abi, provider);\n","import { Contract } from '@ethersproject/contracts';\nimport { Provider } from '@ethersproject/providers';\nimport { ContractAddresses } from '@/types';\nimport { Network } from '@/lib/constants/network';\nimport { BALANCER_NETWORK_CONFIG } from '@/lib/constants/config';\nimport {\n  Vault__factory,\n  Vault,\n  LidoRelayer__factory,\n  LidoRelayer,\n} from '@balancer-labs/typechain';\nimport { Multicall } from './multicall';\nimport { ERC20 } from './ERC20';\n\ntype ERC20Helper = (address: string, provider: Provider) => Contract;\nexport interface ContractInstances {\n  vault: Vault;\n  lidoRelayer?: LidoRelayer;\n  multicall: Contract;\n  ERC20: ERC20Helper;\n}\n\nexport class Contracts {\n  contractAddresses: ContractAddresses;\n  vault: Vault;\n  lidoRelayer?: LidoRelayer;\n  multicall: Contract;\n\n  /**\n   * Create instances of Balancer contracts connected to passed provider.\n   * @param { Network | ContractAddresses } networkOrAddresses\n   * @param { Provider } provider\n   */\n  constructor(\n    networkOrAddresses: Network | ContractAddresses,\n    provider: Provider\n  ) {\n    // Access addresses using passed network if available\n    if (typeof networkOrAddresses === 'number') {\n      this.contractAddresses =\n        BALANCER_NETWORK_CONFIG[networkOrAddresses].addresses.contracts;\n    } else {\n      this.contractAddresses = networkOrAddresses;\n    }\n\n    this.vault = Vault__factory.connect(this.contractAddresses.vault, provider);\n\n    if (this.contractAddresses.lidoRelayer)\n      this.lidoRelayer = LidoRelayer__factory.connect(\n        this.contractAddresses.lidoRelayer,\n        provider\n      );\n\n    // These contracts aren't included in Balancer Typechain but are still useful.\n    // TO DO - Possibly create via Typechain but seems unnecessary?\n    this.multicall = Multicall(this.contractAddresses.multicall, provider);\n  }\n\n  /**\n   * Expose contract instances.\n   */\n  get contracts(): ContractInstances {\n    return {\n      vault: this.vault,\n      lidoRelayer: this.lidoRelayer,\n      multicall: this.multicall,\n      ERC20: this.getErc20,\n    };\n  }\n\n  /**\n   * Helper to create ERC20 contract.\n   * @param { string } address ERC20 address.\n   * @param { Provider} provider Provider.\n   * @returns Contract.\n   */\n  getErc20(address: string, provider: Provider): Contract {\n    return ERC20(address, provider);\n  }\n}\n","import { Findable, Price } from '@/types';\nimport { BaseFeeDistributor } from '@/modules/data';\n\nexport interface ProtocolRevenueData {\n  lastWeekBalRevenue: number;\n  lastWeekBBAUsdRevenue: number;\n  veBalSupply: number;\n}\n\nexport class ProtocolRevenue {\n  constructor(\n    private repository: BaseFeeDistributor,\n    private tokenPrices: Findable<Price>\n  ) {}\n\n  async data(now = Date.now()): Promise<ProtocolRevenueData> {\n    const data = await this.repository.multicallData(now);\n    const balPrice = await this.tokenPrices.find(data.balAddress);\n\n    if (!balPrice || !balPrice.usd) {\n      throw `No BAL USD price found`;\n    }\n\n    return {\n      lastWeekBalRevenue: data.balAmount * parseFloat(balPrice.usd),\n      lastWeekBBAUsdRevenue: data.bbAUsdAmount * data.bbAUsdPrice,\n      veBalSupply: data.veBalSupply,\n    };\n  }\n}\n","/**\n * Calculates pool fees\n *\n * 1. Pool fees in last 24hrs\n */\nimport { Pool, Findable, PoolAttribute } from '@/types';\n\nexport class PoolFees {\n  constructor(\n    private pool: Pool,\n    private yesterdaysPools: Findable<Pool, PoolAttribute>\n  ) {}\n\n  // 🚨 this is adding 1 call to get yesterday's block height and 2nd call to fetch yesterday's pools data from subgraph\n  // TODO: find a better data source for that eg. add blocks to graph, replace with a database, or dune\n  async last24h(): Promise<number> {\n    const yesterdaysPool = await this.yesterdaysPools.find(this.pool.id);\n    if (\n      !this.pool.totalSwapFee ||\n      !yesterdaysPool ||\n      !yesterdaysPool.totalSwapFee\n    ) {\n      return 0;\n    }\n\n    return (\n      parseFloat(this.pool.totalSwapFee) -\n      parseFloat(yesterdaysPool.totalSwapFee)\n    );\n  }\n}\n","import { formatUnits } from 'ethers/lib/utils';\nimport * as emissions from '@/modules/data/bal/emissions';\nimport type {\n  Findable,\n  Pool,\n  PoolAttribute,\n  Price,\n  Token,\n  TokenAttribute,\n  LiquidityGauge,\n} from '@/types';\nimport { BaseFeeDistributor } from '@/modules/data';\nimport { ProtocolRevenue } from './protocol-revenue';\nimport { Liquidity } from '@/modules/liquidity/liquidity.module';\nimport { identity, zipObject, pickBy } from 'lodash';\nimport { PoolFees } from '../fees/fees';\n\nexport interface AprBreakdown {\n  swapFees: number;\n  tokenAprs: {\n    total: number;\n    breakdown: { [address: string]: number };\n  };\n  stakingApr: {\n    min: number;\n    max: number;\n  };\n  rewardAprs: {\n    total: number;\n    breakdown: { [address: string]: number };\n  };\n  protocolApr: number;\n  min: number;\n  max: number;\n}\n\n/**\n * Calculates pool APR via summing up sources of APR:\n *\n * 1. Swap fees (pool level) data coming from subgraph\n * 2. Yield bearing pool tokens, with data from external sources eg: http endpoints, subgraph, onchain\n *    * stETH\n *    * aave\n *    * usd+\n *    map token: calculatorFn\n * 3. Staking rewards based from veBal gauges\n */\nexport class PoolApr {\n  constructor(\n    private pool: Pool,\n    private tokenPrices: Findable<Price>,\n    private tokenMeta: Findable<Token, TokenAttribute>,\n    private pools: Findable<Pool, PoolAttribute>,\n    private yesterdaysPools: Findable<Pool, PoolAttribute>,\n    private liquidityGauges: Findable<LiquidityGauge>,\n    private feeDistributor: BaseFeeDistributor,\n    private feeCollector: Findable<number>,\n    private tokenYields: Findable<number>\n  ) {}\n\n  /**\n   * Pool revenue via swap fees.\n   * Fees and liquidity are takes from subgraph as USD floats.\n   *\n   * @returns APR [bsp] from fees accumulated over last 24h\n   */\n  async swapFees(): Promise<number> {\n    // 365 * dailyFees * (1 - protocolFees) / totalLiquidity\n    const last24hFees = await this.last24hFees();\n    const totalLiquidity = await this.totalLiquidity();\n    // TODO: what to do when we are missing last24hFees or totalLiquidity?\n    if (!last24hFees || !totalLiquidity) {\n      return 0;\n    }\n    const dailyFees =\n      last24hFees * (1 - (await this.protocolSwapFeePercentage()));\n    const feesDailyBsp = 10000 * (dailyFees / parseFloat(totalLiquidity));\n\n    return Math.round(365 * feesDailyBsp);\n  }\n\n  /**\n   * Pool revenue from holding yield-bearing wrapped tokens.\n   *\n   * @returns APR [bsp] from tokens contained in the pool\n   */\n  async tokenAprs(): Promise<AprBreakdown['tokenAprs']> {\n    if (!this.pool.tokens) {\n      return {\n        total: 0,\n        breakdown: {},\n      };\n    }\n\n    const totalLiquidity = await this.totalLiquidity();\n\n    // Filter out BPT: token with the same address as the pool\n    // TODO: move this to data layer\n    const bptFreeTokens = this.pool.tokens.filter((token) => {\n      return token.address !== this.pool.address;\n    });\n\n    // Get each token APRs\n    const aprs = bptFreeTokens.map(async (token) => {\n      let apr = 0;\n      const tokenYield = await this.tokenYields.find(token.address);\n\n      if (tokenYield) {\n        apr = tokenYield;\n      } else {\n        // Handle subpool APRs with recursive call to get the subPool APR\n        const subPool = await this.pools.findBy('address', token.address);\n\n        if (subPool) {\n          // INFO: Liquidity mining APR can't cascade to other pools\n          const subApr = new PoolApr(\n            subPool,\n            this.tokenPrices,\n            this.tokenMeta,\n            this.pools,\n            this.yesterdaysPools,\n            this.liquidityGauges,\n            this.feeDistributor,\n            this.feeCollector,\n            this.tokenYields\n          );\n          const subSwapFees = await subApr.swapFees();\n          const subtokenAprs = await subApr.tokenAprs();\n          apr = subSwapFees + subtokenAprs.total;\n        }\n      }\n\n      return apr;\n    });\n\n    // Get token weights normalised by usd price\n    const weights = bptFreeTokens.map(async (token): Promise<number> => {\n      if (token.weight) {\n        return parseFloat(token.weight);\n      } else {\n        const tokenPrice =\n          token.price?.usd || (await this.tokenPrices.find(token.address))?.usd;\n        if (!tokenPrice) {\n          const poolToken = await this.pools.find(token.address);\n          if (poolToken) {\n            console.log('Pool token found');\n          }\n          throw `No price for ${token.address}`;\n        }\n        // using floats assuming frontend purposes with low precision needs\n        const tokenValue = parseFloat(token.balance) * parseFloat(tokenPrice);\n        return tokenValue / parseFloat(totalLiquidity);\n      }\n    });\n\n    // Normalise tokenAPRs according to weights\n    const weightedAprs = await Promise.all(\n      aprs.map(async (apr, idx) => {\n        const [a, w] = await Promise.all([apr, weights[idx]]);\n        return Math.round(a * w);\n      })\n    );\n\n    // sum them up to get pool APRs\n    const apr = weightedAprs.reduce((sum, apr) => sum + apr, 0);\n    const breakdown = pickBy(\n      zipObject(\n        bptFreeTokens.map((t) => t.address),\n        weightedAprs\n      ),\n      identity\n    );\n\n    return {\n      total: apr,\n      breakdown,\n    };\n  }\n\n  /**\n   * Calculates staking rewards based on veBal gauges deployed with Curve Finance contracts.\n   * https://curve.readthedocs.io/dao-gauges.html\n   *\n   * Terminology:\n   *  - LP token of a gauge is a BPT of a pool\n   *  - Depositing into a gauge is called staking on the frontend\n   *  - gauge totalSupply - BPT tokens deposited to a gauge\n   *  - gauge workingSupply - effective BPT tokens participating in reward distribution. sum of 40% deposit + 60% boost from individual user's veBal\n   *  - gauge relative weight - weight of this gauge in bal inflation distribution [0..1] scaled to 1e18\n   *\n   * APR sources:\n   *  - gauge BAL emissions = min: 40% of totalSupply, max: 40% of totalSupply + 60% of totalSupply * gauge LPs voting power\n   *    https://github.com/balancer-labs/balancer-v2-monorepo/blob/master/pkg/liquidity-mining/contracts/gauges/ethereum/LiquidityGaugeV5.vy#L338\n   *  - gauge reward tokens: Admin or designated depositor has an option to deposit additional reward with a weekly accruing cadence.\n   *    https://github.com/balancer-labs/balancer-v2-monorepo/blob/master/pkg/liquidity-mining/contracts/gauges/ethereum/LiquidityGaugeV5.vy#L641\n   *    rate: amount of token per second\n   *\n   * @returns APR [bsp] from protocol rewards.\n   */\n  async stakingApr(boost = 1): Promise<number> {\n    // Data resolving\n    const gauge = await this.liquidityGauges.findBy('poolId', this.pool.id);\n    if (!gauge) {\n      return 0;\n    }\n\n    const [balPrice, bptPriceUsd] = await Promise.all([\n      this.tokenPrices.find('0xba100000625a3754423978a60c9317c58a424e3d'),\n      this.bptPrice(),\n    ]);\n    const balPriceUsd = parseFloat(balPrice?.usd || '0');\n\n    const now = Math.round(new Date().getTime() / 1000);\n    const totalBalEmissions = emissions.between(now, now + 365 * 86400);\n    const gaugeBalEmissions = totalBalEmissions * gauge.relativeWeight;\n    const gaugeBalEmissionsUsd = gaugeBalEmissions * balPriceUsd;\n    const gaugeSupply = (gauge.workingSupply + 0.4) / 0.4; // Only 40% of LP token staked accrue emissions, totalSupply = workingSupply * 2.5\n    const gaugeSupplyUsd = gaugeSupply * bptPriceUsd;\n    const gaugeBalAprBps = Math.round(\n      (boost * 10000 * gaugeBalEmissionsUsd) / gaugeSupplyUsd\n    );\n\n    return gaugeBalAprBps;\n  }\n\n  /**\n   * Some gauges are holding tokens distributed as rewards to LPs.\n   *\n   * @returns APR [bsp] from token rewards.\n   */\n  async rewardAprs(): Promise<AprBreakdown['rewardAprs']> {\n    // Data resolving\n    const gauge = await this.liquidityGauges.findBy('poolId', this.pool.id);\n    if (\n      !gauge ||\n      !gauge.rewardTokens ||\n      Object.keys(gauge.rewardTokens).length < 1\n    ) {\n      return { total: 0, breakdown: {} };\n    }\n\n    const rewardTokenAddresses = Object.keys(gauge.rewardTokens);\n\n    // Gets each tokens rate, extrapolate to a year and convert to USD\n    const rewards = rewardTokenAddresses.map(async (tAddress) => {\n      /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */\n      const data = gauge!.rewardTokens![tAddress];\n      if (data.period_finish.toNumber() < Date.now() / 1000) {\n        return {\n          address: tAddress,\n          value: 0,\n        };\n      } else {\n        const yearlyReward = data.rate.mul(86400).mul(365);\n        const price = await this.tokenPrices.find(tAddress);\n        if (price && price.usd) {\n          const meta = await this.tokenMeta.find(tAddress);\n          const decimals = meta?.decimals || 18;\n          const yearlyRewardUsd =\n            parseFloat(formatUnits(yearlyReward, decimals)) *\n            parseFloat(price.usd);\n          return {\n            address: tAddress,\n            value: yearlyRewardUsd,\n          };\n        } else {\n          throw `No USD price for ${tAddress}`;\n        }\n      }\n    });\n\n    // Get the gauge totalSupplyUsd\n    const bptPriceUsd = await this.bptPrice();\n    const totalSupplyUsd = gauge.totalSupply * bptPriceUsd;\n\n    if (totalSupplyUsd == 0) {\n      return { total: 0, breakdown: {} };\n    }\n\n    const rewardTokensBreakdown: Record<string, number> = {};\n\n    let total = 0;\n    for await (const reward of Object.values(rewards)) {\n      const rewardValue = reward.value / totalSupplyUsd;\n      total += rewardValue;\n      rewardTokensBreakdown[reward.address] = reward.value;\n    }\n\n    return {\n      total: Math.round(10000 * total),\n      breakdown: rewardTokensBreakdown,\n    };\n  }\n\n  /**\n   * 80BAL-20WETH pool is accruing protocol revenue.\n   */\n  async protocolApr(): Promise<number> {\n    const veBalPoolId =\n      '0x5c6ee304399dbdb9c8ef030ab642b10820db8f56000200000000000000000014';\n\n    if (this.pool.id != veBalPoolId) {\n      return 0;\n    }\n\n    const revenue = new ProtocolRevenue(this.feeDistributor, this.tokenPrices);\n\n    const { lastWeekBalRevenue, lastWeekBBAUsdRevenue, veBalSupply } =\n      await revenue.data();\n\n    const { totalShares } = this.pool;\n    const totalLiquidity = await this.totalLiquidity();\n    if (!totalLiquidity) {\n      throw 'totalLiquidity for veBal pool missing';\n    }\n    const bptPrice = parseFloat(totalLiquidity) / parseFloat(totalShares);\n\n    const dailyRevenue = (lastWeekBalRevenue + lastWeekBBAUsdRevenue) / 7;\n    const apr = Math.round(\n      (10000 * (365 * dailyRevenue)) / (bptPrice * veBalSupply)\n    );\n\n    return apr;\n  }\n\n  /**\n   * Composes all sources for total pool APR.\n   *\n   * @returns pool APR split [bsp]\n   */\n  async apr(): Promise<AprBreakdown> {\n    const [\n      swapFees,\n      tokenAprs,\n      minStakingApr,\n      maxStakingApr,\n      rewardAprs,\n      protocolApr,\n    ] = await Promise.all([\n      this.swapFees(), // pool snapshot for last 24h fees dependency\n      this.tokenAprs(),\n      this.stakingApr(),\n      this.stakingApr(2.5),\n      this.rewardAprs(),\n      this.protocolApr(),\n    ]);\n\n    return {\n      swapFees,\n      tokenAprs,\n      stakingApr: {\n        min: minStakingApr,\n        max: maxStakingApr,\n      },\n      rewardAprs,\n      protocolApr,\n      min:\n        swapFees +\n        tokenAprs.total +\n        rewardAprs.total +\n        protocolApr +\n        minStakingApr,\n      max:\n        swapFees +\n        tokenAprs.total +\n        rewardAprs.total +\n        protocolApr +\n        maxStakingApr,\n    };\n  }\n\n  private async last24hFees(): Promise<number> {\n    const poolFees = new PoolFees(this.pool, this.yesterdaysPools);\n    return poolFees.last24h();\n  }\n\n  private async totalLiquidity(): Promise<string> {\n    const liquidityService = new Liquidity(this.pools, this.tokenPrices);\n    const liquidity = await liquidityService.getLiquidity(this.pool);\n\n    return liquidity;\n  }\n\n  private async bptPrice() {\n    return (\n      parseFloat(await this.totalLiquidity()) /\n      parseFloat(this.pool.totalShares)\n    );\n  }\n\n  private async protocolSwapFeePercentage() {\n    const fee = await this.feeCollector.find('');\n\n    return fee ? fee : 0;\n  }\n}\n","/**\n * Calculates pool fees\n *\n * 1. Pool fees in last 24hrs\n */\nimport { Pool, Findable, PoolAttribute } from '@/types';\n\nexport class PoolVolume {\n  constructor(\n    private pool: Pool,\n    private yesterdaysPools: Findable<Pool, PoolAttribute>\n  ) {}\n\n  // 🚨 this is adding 1 call to get yesterday's block height and 2nd call to fetch yesterday's pools data from subgraph\n  // TODO: find a better data source for that eg. add blocks to graph, replace with a database, or dune\n  async last24h(): Promise<number> {\n    const yesterdaysPool = await this.yesterdaysPools.find(this.pool.id);\n    if (\n      !this.pool.totalSwapVolume ||\n      !yesterdaysPool ||\n      !yesterdaysPool.totalSwapVolume\n    ) {\n      return 0;\n    }\n\n    return (\n      parseFloat(this.pool.totalSwapVolume) -\n      parseFloat(yesterdaysPool.totalSwapVolume)\n    );\n  }\n}\n","import type { BalancerDataRepositories, Pool, PoolModel } from '@/types';\nimport { PoolApr } from './apr/apr';\nimport { Liquidity } from '../liquidity/liquidity.module';\nimport { PoolFees } from './fees/fees';\nimport { PoolVolume } from './volume/volume';\n\n// Can be changed outside for dependent services rate-limits\n// eslint-disable-next-line prefer-const\nexport let POOLS_PER_PAGE = 10;\n\n/**\n * Use-cases layer for generating live pools data\n */\nexport class ModelProvider {\n  constructor(private repositories: BalancerDataRepositories) {}\n\n  static async resolve(model: PoolModel): Promise<Pool> {\n    return {\n      ...model,\n      apr: await (async () => {\n        try {\n          const apr = await model.calcApr();\n          return apr;\n        } catch (e) {\n          console.log(e);\n          return;\n        }\n      })(),\n    };\n  }\n\n  static wrap(data: Pool, repositories: BalancerDataRepositories): PoolModel {\n    return {\n      ...data,\n      calcLiquidity: async function () {\n        const liquidityService = new Liquidity(\n          repositories.pools,\n          repositories.tokenPrices\n        );\n\n        return liquidityService.getLiquidity(this);\n      },\n      calcApr: async function () {\n        const aprService = new PoolApr(\n          data,\n          repositories.tokenPrices,\n          repositories.tokenMeta,\n          repositories.pools,\n          repositories.yesterdaysPools,\n          repositories.liquidityGauges,\n          repositories.feeDistributor,\n          repositories.feeCollector,\n          repositories.tokenYields\n        );\n\n        return aprService.apr();\n      },\n      calcFees: async function () {\n        const feeService = new PoolFees(data, repositories.yesterdaysPools);\n\n        return feeService.last24h();\n      },\n      calcVolume: async function () {\n        const volumeService = new PoolVolume(\n          data,\n          repositories.yesterdaysPools\n        );\n\n        return volumeService.last24h();\n      },\n      // TODO: spotPrice fails, because it needs a subgraphType,\n      // either we refetch or it needs a type transformation from SDK internal to SOR (subgraph)\n      // spotPrice: async (tokenIn: string, tokenOut: string) =>\n      //   methods.spotPriceCalculator.calcPoolSpotPrice(tokenIn, tokenOut, data),\n    };\n  }\n\n  async find(id: string): Promise<Pool | undefined> {\n    const data = await this.repositories.pools.find(id);\n    if (!data) return;\n\n    const model = ModelProvider.wrap(data, this.repositories);\n\n    return await ModelProvider.resolve(model);\n  }\n\n  async findBy(param: string, value: string): Promise<Pool | undefined> {\n    if (param == 'id') {\n      return this.find(value);\n    } else if (param == 'address') {\n      const data = await this.repositories.pools.findBy('address', value);\n      if (!data) return;\n\n      const model = ModelProvider.wrap(data, this.repositories);\n\n      return await ModelProvider.resolve(model);\n    } else {\n      throw `search by ${param} not implemented`;\n    }\n  }\n\n  async all(page = 1): Promise<Pool[]> {\n    const list = await this.repositories.pools.all();\n    if (!list) return [];\n\n    const slice = list.slice(\n      (page - 1) * POOLS_PER_PAGE,\n      page * POOLS_PER_PAGE\n    );\n\n    const resolved = Promise.all(\n      slice.map(async (data) => {\n        const model = ModelProvider.wrap(data, this.repositories);\n        return await ModelProvider.resolve(model);\n      })\n    );\n\n    return resolved;\n  }\n\n  async where(filter: (pool: Pool) => boolean, page = 1): Promise<Pool[]> {\n    const list = await this.repositories.pools.where(filter);\n    if (!list) return [];\n\n    const slice = list.slice(\n      (page - 1) * POOLS_PER_PAGE,\n      page * POOLS_PER_PAGE\n    );\n\n    const resolved = Promise.all(\n      slice.map(async (data) => {\n        const model = ModelProvider.wrap(data, this.repositories);\n        return await ModelProvider.resolve(model);\n      })\n    );\n\n    return resolved;\n  }\n}\n","import type {\n  BalancerNetworkConfig,\n  BalancerDataRepositories,\n  Findable,\n  Searchable,\n  Pool,\n  PoolWithMethods,\n} from '@/types';\nimport { JoinPoolAttributes } from './pool-types/concerns/types';\nimport { PoolTypeConcerns } from './pool-type-concerns';\nimport { ModelProvider } from './model-provider';\n\n/**\n * Controller / use-case layer for interacting with pools data.\n */\nexport class Pools implements Findable<PoolWithMethods> {\n  liveModelProvider: ModelProvider;\n\n  constructor(\n    private networkConfig: BalancerNetworkConfig,\n    repositories: BalancerDataRepositories\n  ) {\n    this.liveModelProvider = new ModelProvider(repositories);\n  }\n\n  dataSource(): Findable<Pool> & Searchable<Pool> {\n    // TODO: Add API data repository to data and use liveModelProvider as fallback\n    return this.liveModelProvider;\n  }\n\n  static wrap(\n    pool: Pool,\n    networkConfig: BalancerNetworkConfig\n  ): PoolWithMethods {\n    const methods = PoolTypeConcerns.from(pool.poolType);\n    return {\n      ...pool,\n      buildJoin: async (\n        joiner: string,\n        tokensIn: string[],\n        amountsIn: string[],\n        slippage: string\n      ): Promise<JoinPoolAttributes> => {\n        return methods.join.buildJoin({\n          joiner,\n          pool,\n          tokensIn,\n          amountsIn,\n          slippage,\n          wrappedNativeAsset: networkConfig.addresses.tokens.wrappedNativeAsset,\n        });\n      },\n      // TODO: spotPrice fails, because it needs a subgraphType,\n      // either we refetch or it needs a type transformation from SDK internal to SOR (subgraph)\n      // spotPrice: async (tokenIn: string, tokenOut: string) =>\n      //   methods.spotPriceCalculator.calcPoolSpotPrice(tokenIn, tokenOut, data),\n    };\n  }\n\n  async find(id: string): Promise<PoolWithMethods | undefined> {\n    const data = await this.dataSource().find(id);\n    if (!data) return;\n\n    return Pools.wrap(data, this.networkConfig);\n  }\n\n  async findBy(\n    param: string,\n    value: string\n  ): Promise<PoolWithMethods | undefined> {\n    if (param == 'id') {\n      return this.find(value);\n    } else if (param == 'address') {\n      const data = await this.dataSource().findBy('address', value);\n      if (!data) return;\n\n      return Pools.wrap(data, this.networkConfig);\n    } else {\n      throw `search by ${param} not implemented`;\n    }\n  }\n\n  async all(): Promise<PoolWithMethods[]> {\n    const list = await this.dataSource().all();\n    if (!list) return [];\n\n    return list.map((data: Pool) => Pools.wrap(data, this.networkConfig));\n  }\n\n  async where(filter: (pool: Pool) => boolean): Promise<PoolWithMethods[]> {\n    const list = await this.dataSource().where(filter);\n    if (!list) return [];\n\n    return list.map((data: Pool) => Pools.wrap(data, this.networkConfig));\n  }\n}\n","import { BalancerSdkConfig, BalancerNetworkConfig } from '@/types';\nimport { Swaps } from './swaps/swaps.module';\nimport { Relayer } from './relayer/relayer.module';\nimport { Subgraph } from './subgraph/subgraph.module';\nimport { Sor } from './sor/sor.module';\nimport { getDataRepositories, getNetworkConfig } from './sdk.helpers';\nimport { Pricing } from './pricing/pricing.module';\nimport { ContractInstances, Contracts } from './contracts/contracts.module';\nimport { Pools } from './pools';\nimport { Data } from './data';\n\nexport interface BalancerSDKRoot {\n  config: BalancerSdkConfig;\n  sor: Sor;\n  subgraph: Subgraph;\n  pools: Pools;\n  data: Data;\n  swaps: Swaps;\n  relayer: Relayer;\n  networkConfig: BalancerNetworkConfig;\n}\n\nexport class BalancerSDK implements BalancerSDKRoot {\n  readonly swaps: Swaps;\n  readonly relayer: Relayer;\n  readonly pricing: Pricing;\n  readonly pools: Pools;\n  readonly data: Data;\n  balancerContracts: Contracts;\n\n  constructor(\n    public config: BalancerSdkConfig,\n    public sor = new Sor(config),\n    public subgraph = new Subgraph(config)\n  ) {\n    const networkConfig = getNetworkConfig(config);\n\n    this.data = new Data(networkConfig, sor.provider);\n    this.swaps = new Swaps(this.config);\n    this.relayer = new Relayer(this.swaps);\n    this.pricing = new Pricing(config, this.swaps);\n    this.pools = new Pools(networkConfig, this.data);\n\n    this.balancerContracts = new Contracts(\n      networkConfig.addresses.contracts,\n      sor.provider\n    );\n  }\n\n  get networkConfig(): BalancerNetworkConfig {\n    return getNetworkConfig(this.config);\n  }\n\n  /**\n   * Expose balancer contracts, e.g. Vault, LidoRelayer.\n   */\n  get contracts(): ContractInstances {\n    return this.balancerContracts.contracts;\n  }\n}\n"],"names":["StablePoolJoinKind","StablePhantomPoolJoinKind","StablePoolExitKind","defaultAbiCoder","WeightedPoolJoinKind","WeightedPoolExitKind","ONE","Zero","BigNumber","Signer","RelayerAction","hexZeroPad","hexValue","splitSignature","MAX_DEADLINE","AddressZero","getAddress","Contract","aTokenRateProviderAbi","GraphQLFilterOperator","mergeWith","PoolSpecialization","UserBalanceOpKind","PoolBalanceOpKind","PoolType","SwapType","WeiPerEther","Network","_parseFixed","SCALING_FACTOR","formatFixed","StablePool","ZERO","OldBigNumber","WeightedPool","version","logger","formatUnits","parseFixed","require$$0","base","big_number_1","math","require$$1","logExp","require$$2","index_1","common_1","base_1","require$$3","require$$4","BalancerErrorCode","Vault__factory","SDK.WeightedMath","MetaStablePool","PhantomStablePool","LinearPool","sor","SwapTypes","parse","OrderDirection","User_OrderBy","_SubgraphErrorPolicy_","gql","defaultWrapper","getSdk","GraphQLClient","Gauges.getSdk","Interface","set","PoolFilter","parseInt","axios","keyBy","decode","arrayify","encode","__awaiter","this","global","keccak256","hexlify","concat","HashZero","Zeros","hexConcat","isHexString","minimalisticAssert","assert","inherits_browserModule","inheritsModule","utils","rotr32","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","BlockHash","common","ft_1","ch32","maj32","s0_256","s1_256","g0_256","g1_256","shaCommon","SHA256","SHA512","sha256","pbkdf2","EC","hexDataLength","isBytesLike","hexDataSlice","stripZeros","RLP.encode","RLP.decode","en","decrypt","hasMnemonic","_pbkdf2","decryptCrowdsale","decryptKeystore","decryptKeystoreSync","zeroPad","hashKeccak256","hashSha256","joinSignature","_TypedDataEncoder","encryptKeystore","base64Encode","base64Decode","jsonToGraphQLQuery","query","aprTtl","aaveWrappedMap","apr","getApr","SOR","JsonRpcProvider","sum","vaultActionsAbi","MaxUint256","parseToPoolsDict","getSpotPriceAfterSwapForPath","LidoRelayer__factory","pickBy","zipObject","identity","emissions.between"],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD;IACA,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACzC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACzC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACzC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACzC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACzC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACzC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACzC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACzC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACzC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACzC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB;IACA,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACxC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C;IACA,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7B,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7B,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7B,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7B,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IA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U;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IA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,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACtD,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACtD,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE;IACtD,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IACtD,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;IACtD,CAAC,CAAC;AACF;IACA,IAAI,EAAE,GAAG;IACT,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE;IACtD,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IACtD,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtD,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;IACtD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtD,CAAC,CAAC;AACF;IACA,IAAI,CAAC,GAAG;IACR,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IACxD,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;IACxD,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;IACxD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACxD,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,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,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;IACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;IAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;IACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;IAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;IACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;IAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;IACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;IAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;IACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;IAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;IACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;IAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;IACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;IAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;IACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtB,IAAI,IAAI,GAAG,GAAG,EAAE,G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EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IACtD,IAAI,EAAE,IAAI,SAAS,CAAC;IACpB;IACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IACtD,IAAI,EAAE,IAAI,SAAS,CAAC;IACpB;IACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IACtD,IAAI,EAAE,IAAI,SAAS,CAAC;IACpB;IACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IACtD,IAAI,EAAE,IAAI,SAAS,CAAC;IACpB;IACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IACtD,IAAI,EAAE,IAAI,SAAS,CAAC;IACpB;IACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IACtD,IAAI,EAAE,IAAI,SAAS,CAAC;IACpB;IACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IACvD,IAAI,GAAG,IAAI,SAAS,CAAC;IACrB;IACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IACvD,IAAI,GAAG,IAAI,SAAS,CAAC;IACrB;IACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;IACvD,IAAI,GAAG,IAAI,SAAS,CAAC;IACrB;IACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IA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,CAAC;IAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,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CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1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"}